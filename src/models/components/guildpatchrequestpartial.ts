/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GuildPatchRequestPartial = {
  name?: string | undefined;
  description?: string | null | undefined;
  region?: string | null | undefined;
  icon?: string | null | undefined;
  verificationLevel?: 0 | null | undefined;
  defaultMessageNotifications?: 0 | null | undefined;
  explicitContentFilter?: 0 | null | undefined;
  preferredLocale?: "ar" | null | undefined;
  afkTimeout?: 60 | null | undefined;
  afkChannelId?: string | null | undefined;
  systemChannelId?: string | null | undefined;
  ownerId?: string | undefined;
  splash?: string | null | undefined;
  banner?: string | null | undefined;
  systemChannelFlags?: number | null | undefined;
  features?: Array<string> | null | undefined;
  discoverySplash?: string | null | undefined;
  homeHeader?: string | null | undefined;
  rulesChannelId?: string | null | undefined;
  safetyAlertsChannelId?: string | null | undefined;
  publicUpdatesChannelId?: string | null | undefined;
  premiumProgressBarEnabled?: boolean | null | undefined;
};

/** @internal */
export const GuildPatchRequestPartial$inboundSchema: z.ZodType<
  GuildPatchRequestPartial,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  description: z.nullable(z.string()).optional(),
  region: z.nullable(z.string()).optional(),
  icon: z.nullable(z.string()).optional(),
  verification_level: z.nullable(z.literal(0)).optional(),
  default_message_notifications: z.nullable(z.literal(0)).optional(),
  explicit_content_filter: z.nullable(z.literal(0)).optional(),
  preferred_locale: z.nullable(z.literal("ar")).optional(),
  afk_timeout: z.nullable(z.literal(60)).optional(),
  afk_channel_id: z.nullable(z.string()).optional(),
  system_channel_id: z.nullable(z.string()).optional(),
  owner_id: z.string().optional(),
  splash: z.nullable(z.string()).optional(),
  banner: z.nullable(z.string()).optional(),
  system_channel_flags: z.nullable(z.number().int()).optional(),
  features: z.nullable(z.array(z.string())).optional(),
  discovery_splash: z.nullable(z.string()).optional(),
  home_header: z.nullable(z.string()).optional(),
  rules_channel_id: z.nullable(z.string()).optional(),
  safety_alerts_channel_id: z.nullable(z.string()).optional(),
  public_updates_channel_id: z.nullable(z.string()).optional(),
  premium_progress_bar_enabled: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    "verification_level": "verificationLevel",
    "default_message_notifications": "defaultMessageNotifications",
    "explicit_content_filter": "explicitContentFilter",
    "preferred_locale": "preferredLocale",
    "afk_timeout": "afkTimeout",
    "afk_channel_id": "afkChannelId",
    "system_channel_id": "systemChannelId",
    "owner_id": "ownerId",
    "system_channel_flags": "systemChannelFlags",
    "discovery_splash": "discoverySplash",
    "home_header": "homeHeader",
    "rules_channel_id": "rulesChannelId",
    "safety_alerts_channel_id": "safetyAlertsChannelId",
    "public_updates_channel_id": "publicUpdatesChannelId",
    "premium_progress_bar_enabled": "premiumProgressBarEnabled",
  });
});

/** @internal */
export type GuildPatchRequestPartial$Outbound = {
  name?: string | undefined;
  description?: string | null | undefined;
  region?: string | null | undefined;
  icon?: string | null | undefined;
  verification_level: 0 | null;
  default_message_notifications: 0 | null;
  explicit_content_filter: 0 | null;
  preferred_locale: "ar" | null;
  afk_timeout: 60 | null;
  afk_channel_id?: string | null | undefined;
  system_channel_id?: string | null | undefined;
  owner_id?: string | undefined;
  splash?: string | null | undefined;
  banner?: string | null | undefined;
  system_channel_flags?: number | null | undefined;
  features?: Array<string> | null | undefined;
  discovery_splash?: string | null | undefined;
  home_header?: string | null | undefined;
  rules_channel_id?: string | null | undefined;
  safety_alerts_channel_id?: string | null | undefined;
  public_updates_channel_id?: string | null | undefined;
  premium_progress_bar_enabled?: boolean | null | undefined;
};

/** @internal */
export const GuildPatchRequestPartial$outboundSchema: z.ZodType<
  GuildPatchRequestPartial$Outbound,
  z.ZodTypeDef,
  GuildPatchRequestPartial
> = z.object({
  name: z.string().optional(),
  description: z.nullable(z.string()).optional(),
  region: z.nullable(z.string()).optional(),
  icon: z.nullable(z.string()).optional(),
  verificationLevel: z.nullable(z.literal(0).default(0 as const)),
  defaultMessageNotifications: z.nullable(z.literal(0).default(0 as const)),
  explicitContentFilter: z.nullable(z.literal(0).default(0 as const)),
  preferredLocale: z.nullable(z.literal("ar").default("ar" as const)),
  afkTimeout: z.nullable(z.literal(60).default(60 as const)),
  afkChannelId: z.nullable(z.string()).optional(),
  systemChannelId: z.nullable(z.string()).optional(),
  ownerId: z.string().optional(),
  splash: z.nullable(z.string()).optional(),
  banner: z.nullable(z.string()).optional(),
  systemChannelFlags: z.nullable(z.number().int()).optional(),
  features: z.nullable(z.array(z.string())).optional(),
  discoverySplash: z.nullable(z.string()).optional(),
  homeHeader: z.nullable(z.string()).optional(),
  rulesChannelId: z.nullable(z.string()).optional(),
  safetyAlertsChannelId: z.nullable(z.string()).optional(),
  publicUpdatesChannelId: z.nullable(z.string()).optional(),
  premiumProgressBarEnabled: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    verificationLevel: "verification_level",
    defaultMessageNotifications: "default_message_notifications",
    explicitContentFilter: "explicit_content_filter",
    preferredLocale: "preferred_locale",
    afkTimeout: "afk_timeout",
    afkChannelId: "afk_channel_id",
    systemChannelId: "system_channel_id",
    ownerId: "owner_id",
    systemChannelFlags: "system_channel_flags",
    discoverySplash: "discovery_splash",
    homeHeader: "home_header",
    rulesChannelId: "rules_channel_id",
    safetyAlertsChannelId: "safety_alerts_channel_id",
    publicUpdatesChannelId: "public_updates_channel_id",
    premiumProgressBarEnabled: "premium_progress_bar_enabled",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GuildPatchRequestPartial$ {
  /** @deprecated use `GuildPatchRequestPartial$inboundSchema` instead. */
  export const inboundSchema = GuildPatchRequestPartial$inboundSchema;
  /** @deprecated use `GuildPatchRequestPartial$outboundSchema` instead. */
  export const outboundSchema = GuildPatchRequestPartial$outboundSchema;
  /** @deprecated use `GuildPatchRequestPartial$Outbound` instead. */
  export type Outbound = GuildPatchRequestPartial$Outbound;
}

export function guildPatchRequestPartialToJSON(
  guildPatchRequestPartial: GuildPatchRequestPartial,
): string {
  return JSON.stringify(
    GuildPatchRequestPartial$outboundSchema.parse(guildPatchRequestPartial),
  );
}

export function guildPatchRequestPartialFromJSON(
  jsonString: string,
): SafeParseResult<GuildPatchRequestPartial, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GuildPatchRequestPartial$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GuildPatchRequestPartial' from JSON`,
  );
}

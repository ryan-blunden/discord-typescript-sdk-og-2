/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  ApplicationCommandAttachmentOptionResponse,
  ApplicationCommandAttachmentOptionResponse$inboundSchema,
  ApplicationCommandAttachmentOptionResponse$Outbound,
  ApplicationCommandAttachmentOptionResponse$outboundSchema,
} from "./applicationcommandattachmentoptionresponse.js";
import {
  ApplicationCommandBooleanOptionResponse,
  ApplicationCommandBooleanOptionResponse$inboundSchema,
  ApplicationCommandBooleanOptionResponse$Outbound,
  ApplicationCommandBooleanOptionResponse$outboundSchema,
} from "./applicationcommandbooleanoptionresponse.js";
import {
  ApplicationCommandChannelOptionResponse,
  ApplicationCommandChannelOptionResponse$inboundSchema,
  ApplicationCommandChannelOptionResponse$Outbound,
  ApplicationCommandChannelOptionResponse$outboundSchema,
} from "./applicationcommandchanneloptionresponse.js";
import {
  ApplicationCommandIntegerOptionResponse,
  ApplicationCommandIntegerOptionResponse$inboundSchema,
  ApplicationCommandIntegerOptionResponse$Outbound,
  ApplicationCommandIntegerOptionResponse$outboundSchema,
} from "./applicationcommandintegeroptionresponse.js";
import {
  ApplicationCommandMentionableOptionResponse,
  ApplicationCommandMentionableOptionResponse$inboundSchema,
  ApplicationCommandMentionableOptionResponse$Outbound,
  ApplicationCommandMentionableOptionResponse$outboundSchema,
} from "./applicationcommandmentionableoptionresponse.js";
import {
  ApplicationCommandNumberOptionResponse,
  ApplicationCommandNumberOptionResponse$inboundSchema,
  ApplicationCommandNumberOptionResponse$Outbound,
  ApplicationCommandNumberOptionResponse$outboundSchema,
} from "./applicationcommandnumberoptionresponse.js";
import {
  ApplicationCommandRoleOptionResponse,
  ApplicationCommandRoleOptionResponse$inboundSchema,
  ApplicationCommandRoleOptionResponse$Outbound,
  ApplicationCommandRoleOptionResponse$outboundSchema,
} from "./applicationcommandroleoptionresponse.js";
import {
  ApplicationCommandStringOptionResponse,
  ApplicationCommandStringOptionResponse$inboundSchema,
  ApplicationCommandStringOptionResponse$Outbound,
  ApplicationCommandStringOptionResponse$outboundSchema,
} from "./applicationcommandstringoptionresponse.js";
import {
  ApplicationCommandSubcommandGroupOptionResponse,
  ApplicationCommandSubcommandGroupOptionResponse$inboundSchema,
  ApplicationCommandSubcommandGroupOptionResponse$Outbound,
  ApplicationCommandSubcommandGroupOptionResponse$outboundSchema,
} from "./applicationcommandsubcommandgroupoptionresponse.js";
import {
  ApplicationCommandSubcommandOptionResponse,
  ApplicationCommandSubcommandOptionResponse$inboundSchema,
  ApplicationCommandSubcommandOptionResponse$Outbound,
  ApplicationCommandSubcommandOptionResponse$outboundSchema,
} from "./applicationcommandsubcommandoptionresponse.js";
import {
  ApplicationCommandUserOptionResponse,
  ApplicationCommandUserOptionResponse$inboundSchema,
  ApplicationCommandUserOptionResponse$Outbound,
  ApplicationCommandUserOptionResponse$outboundSchema,
} from "./applicationcommanduseroptionresponse.js";

export type ApplicationCommandResponseOptions =
  | ApplicationCommandAttachmentOptionResponse
  | ApplicationCommandBooleanOptionResponse
  | ApplicationCommandMentionableOptionResponse
  | ApplicationCommandRoleOptionResponse
  | ApplicationCommandUserOptionResponse
  | ApplicationCommandChannelOptionResponse
  | ApplicationCommandSubcommandGroupOptionResponse
  | ApplicationCommandSubcommandOptionResponse
  | ApplicationCommandIntegerOptionResponse
  | ApplicationCommandNumberOptionResponse
  | ApplicationCommandStringOptionResponse;

export type ApplicationCommandResponse = {
  id: string;
  applicationId: string;
  version: string;
  defaultMemberPermissions?: string | null | undefined;
  type?: 1 | undefined;
  name: string;
  nameLocalized?: string | null | undefined;
  nameLocalizations?: { [k: string]: string } | null | undefined;
  description: string;
  descriptionLocalized?: string | null | undefined;
  descriptionLocalizations?: { [k: string]: string } | null | undefined;
  guildId?: string | null | undefined;
  dmPermission?: boolean | null | undefined;
  contexts?: Array<number> | null | undefined;
  integrationTypes?: Array<number> | null | undefined;
  options?:
    | Array<
      | ApplicationCommandAttachmentOptionResponse
      | ApplicationCommandBooleanOptionResponse
      | ApplicationCommandMentionableOptionResponse
      | ApplicationCommandRoleOptionResponse
      | ApplicationCommandUserOptionResponse
      | ApplicationCommandChannelOptionResponse
      | ApplicationCommandSubcommandGroupOptionResponse
      | ApplicationCommandSubcommandOptionResponse
      | ApplicationCommandIntegerOptionResponse
      | ApplicationCommandNumberOptionResponse
      | ApplicationCommandStringOptionResponse
    >
    | null
    | undefined;
  nsfw?: boolean | null | undefined;
};

/** @internal */
export const ApplicationCommandResponseOptions$inboundSchema: z.ZodType<
  ApplicationCommandResponseOptions,
  z.ZodTypeDef,
  unknown
> = z.union([
  ApplicationCommandAttachmentOptionResponse$inboundSchema,
  ApplicationCommandBooleanOptionResponse$inboundSchema,
  ApplicationCommandMentionableOptionResponse$inboundSchema,
  ApplicationCommandRoleOptionResponse$inboundSchema,
  ApplicationCommandUserOptionResponse$inboundSchema,
  ApplicationCommandChannelOptionResponse$inboundSchema,
  ApplicationCommandSubcommandGroupOptionResponse$inboundSchema,
  ApplicationCommandSubcommandOptionResponse$inboundSchema,
  ApplicationCommandIntegerOptionResponse$inboundSchema,
  ApplicationCommandNumberOptionResponse$inboundSchema,
  ApplicationCommandStringOptionResponse$inboundSchema,
]);

/** @internal */
export type ApplicationCommandResponseOptions$Outbound =
  | ApplicationCommandAttachmentOptionResponse$Outbound
  | ApplicationCommandBooleanOptionResponse$Outbound
  | ApplicationCommandMentionableOptionResponse$Outbound
  | ApplicationCommandRoleOptionResponse$Outbound
  | ApplicationCommandUserOptionResponse$Outbound
  | ApplicationCommandChannelOptionResponse$Outbound
  | ApplicationCommandSubcommandGroupOptionResponse$Outbound
  | ApplicationCommandSubcommandOptionResponse$Outbound
  | ApplicationCommandIntegerOptionResponse$Outbound
  | ApplicationCommandNumberOptionResponse$Outbound
  | ApplicationCommandStringOptionResponse$Outbound;

/** @internal */
export const ApplicationCommandResponseOptions$outboundSchema: z.ZodType<
  ApplicationCommandResponseOptions$Outbound,
  z.ZodTypeDef,
  ApplicationCommandResponseOptions
> = z.union([
  ApplicationCommandAttachmentOptionResponse$outboundSchema,
  ApplicationCommandBooleanOptionResponse$outboundSchema,
  ApplicationCommandMentionableOptionResponse$outboundSchema,
  ApplicationCommandRoleOptionResponse$outboundSchema,
  ApplicationCommandUserOptionResponse$outboundSchema,
  ApplicationCommandChannelOptionResponse$outboundSchema,
  ApplicationCommandSubcommandGroupOptionResponse$outboundSchema,
  ApplicationCommandSubcommandOptionResponse$outboundSchema,
  ApplicationCommandIntegerOptionResponse$outboundSchema,
  ApplicationCommandNumberOptionResponse$outboundSchema,
  ApplicationCommandStringOptionResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplicationCommandResponseOptions$ {
  /** @deprecated use `ApplicationCommandResponseOptions$inboundSchema` instead. */
  export const inboundSchema = ApplicationCommandResponseOptions$inboundSchema;
  /** @deprecated use `ApplicationCommandResponseOptions$outboundSchema` instead. */
  export const outboundSchema =
    ApplicationCommandResponseOptions$outboundSchema;
  /** @deprecated use `ApplicationCommandResponseOptions$Outbound` instead. */
  export type Outbound = ApplicationCommandResponseOptions$Outbound;
}

/** @internal */
export const ApplicationCommandResponse$inboundSchema: z.ZodType<
  ApplicationCommandResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  application_id: z.string(),
  version: z.string(),
  default_member_permissions: z.nullable(z.string()).optional(),
  type: z.literal(1).optional(),
  name: z.string(),
  name_localized: z.nullable(z.string()).optional(),
  name_localizations: z.nullable(z.record(z.string())).optional(),
  description: z.string(),
  description_localized: z.nullable(z.string()).optional(),
  description_localizations: z.nullable(z.record(z.string())).optional(),
  guild_id: z.nullable(z.string()).optional(),
  dm_permission: z.nullable(z.boolean()).optional(),
  contexts: z.nullable(z.array(z.number().int())).optional(),
  integration_types: z.nullable(z.array(z.number().int())).optional(),
  options: z.nullable(
    z.array(
      z.union([
        ApplicationCommandAttachmentOptionResponse$inboundSchema,
        ApplicationCommandBooleanOptionResponse$inboundSchema,
        ApplicationCommandMentionableOptionResponse$inboundSchema,
        ApplicationCommandRoleOptionResponse$inboundSchema,
        ApplicationCommandUserOptionResponse$inboundSchema,
        ApplicationCommandChannelOptionResponse$inboundSchema,
        ApplicationCommandSubcommandGroupOptionResponse$inboundSchema,
        ApplicationCommandSubcommandOptionResponse$inboundSchema,
        ApplicationCommandIntegerOptionResponse$inboundSchema,
        ApplicationCommandNumberOptionResponse$inboundSchema,
        ApplicationCommandStringOptionResponse$inboundSchema,
      ]),
    ),
  ).optional(),
  nsfw: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    "application_id": "applicationId",
    "default_member_permissions": "defaultMemberPermissions",
    "name_localized": "nameLocalized",
    "name_localizations": "nameLocalizations",
    "description_localized": "descriptionLocalized",
    "description_localizations": "descriptionLocalizations",
    "guild_id": "guildId",
    "dm_permission": "dmPermission",
    "integration_types": "integrationTypes",
  });
});

/** @internal */
export type ApplicationCommandResponse$Outbound = {
  id: string;
  application_id: string;
  version: string;
  default_member_permissions?: string | null | undefined;
  type: 1;
  name: string;
  name_localized?: string | null | undefined;
  name_localizations?: { [k: string]: string } | null | undefined;
  description: string;
  description_localized?: string | null | undefined;
  description_localizations?: { [k: string]: string } | null | undefined;
  guild_id?: string | null | undefined;
  dm_permission?: boolean | null | undefined;
  contexts?: Array<number> | null | undefined;
  integration_types?: Array<number> | null | undefined;
  options?:
    | Array<
      | ApplicationCommandAttachmentOptionResponse$Outbound
      | ApplicationCommandBooleanOptionResponse$Outbound
      | ApplicationCommandMentionableOptionResponse$Outbound
      | ApplicationCommandRoleOptionResponse$Outbound
      | ApplicationCommandUserOptionResponse$Outbound
      | ApplicationCommandChannelOptionResponse$Outbound
      | ApplicationCommandSubcommandGroupOptionResponse$Outbound
      | ApplicationCommandSubcommandOptionResponse$Outbound
      | ApplicationCommandIntegerOptionResponse$Outbound
      | ApplicationCommandNumberOptionResponse$Outbound
      | ApplicationCommandStringOptionResponse$Outbound
    >
    | null
    | undefined;
  nsfw?: boolean | null | undefined;
};

/** @internal */
export const ApplicationCommandResponse$outboundSchema: z.ZodType<
  ApplicationCommandResponse$Outbound,
  z.ZodTypeDef,
  ApplicationCommandResponse
> = z.object({
  id: z.string(),
  applicationId: z.string(),
  version: z.string(),
  defaultMemberPermissions: z.nullable(z.string()).optional(),
  type: z.literal(1).default(1 as const),
  name: z.string(),
  nameLocalized: z.nullable(z.string()).optional(),
  nameLocalizations: z.nullable(z.record(z.string())).optional(),
  description: z.string(),
  descriptionLocalized: z.nullable(z.string()).optional(),
  descriptionLocalizations: z.nullable(z.record(z.string())).optional(),
  guildId: z.nullable(z.string()).optional(),
  dmPermission: z.nullable(z.boolean()).optional(),
  contexts: z.nullable(z.array(z.number().int())).optional(),
  integrationTypes: z.nullable(z.array(z.number().int())).optional(),
  options: z.nullable(
    z.array(
      z.union([
        ApplicationCommandAttachmentOptionResponse$outboundSchema,
        ApplicationCommandBooleanOptionResponse$outboundSchema,
        ApplicationCommandMentionableOptionResponse$outboundSchema,
        ApplicationCommandRoleOptionResponse$outboundSchema,
        ApplicationCommandUserOptionResponse$outboundSchema,
        ApplicationCommandChannelOptionResponse$outboundSchema,
        ApplicationCommandSubcommandGroupOptionResponse$outboundSchema,
        ApplicationCommandSubcommandOptionResponse$outboundSchema,
        ApplicationCommandIntegerOptionResponse$outboundSchema,
        ApplicationCommandNumberOptionResponse$outboundSchema,
        ApplicationCommandStringOptionResponse$outboundSchema,
      ]),
    ),
  ).optional(),
  nsfw: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    applicationId: "application_id",
    defaultMemberPermissions: "default_member_permissions",
    nameLocalized: "name_localized",
    nameLocalizations: "name_localizations",
    descriptionLocalized: "description_localized",
    descriptionLocalizations: "description_localizations",
    guildId: "guild_id",
    dmPermission: "dm_permission",
    integrationTypes: "integration_types",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplicationCommandResponse$ {
  /** @deprecated use `ApplicationCommandResponse$inboundSchema` instead. */
  export const inboundSchema = ApplicationCommandResponse$inboundSchema;
  /** @deprecated use `ApplicationCommandResponse$outboundSchema` instead. */
  export const outboundSchema = ApplicationCommandResponse$outboundSchema;
  /** @deprecated use `ApplicationCommandResponse$Outbound` instead. */
  export type Outbound = ApplicationCommandResponse$Outbound;
}

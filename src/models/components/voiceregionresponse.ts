/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type VoiceRegionResponse = {
  id: string;
  name: string;
  custom: boolean;
  deprecated: boolean;
  optimal: boolean;
};

/** @internal */
export const VoiceRegionResponse$inboundSchema: z.ZodType<
  VoiceRegionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
  custom: z.boolean(),
  deprecated: z.boolean(),
  optimal: z.boolean(),
});

/** @internal */
export type VoiceRegionResponse$Outbound = {
  id: string;
  name: string;
  custom: boolean;
  deprecated: boolean;
  optimal: boolean;
};

/** @internal */
export const VoiceRegionResponse$outboundSchema: z.ZodType<
  VoiceRegionResponse$Outbound,
  z.ZodTypeDef,
  VoiceRegionResponse
> = z.object({
  id: z.string(),
  name: z.string(),
  custom: z.boolean(),
  deprecated: z.boolean(),
  optimal: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VoiceRegionResponse$ {
  /** @deprecated use `VoiceRegionResponse$inboundSchema` instead. */
  export const inboundSchema = VoiceRegionResponse$inboundSchema;
  /** @deprecated use `VoiceRegionResponse$outboundSchema` instead. */
  export const outboundSchema = VoiceRegionResponse$outboundSchema;
  /** @deprecated use `VoiceRegionResponse$Outbound` instead. */
  export type Outbound = VoiceRegionResponse$Outbound;
}

export function voiceRegionResponseToJSON(
  voiceRegionResponse: VoiceRegionResponse,
): string {
  return JSON.stringify(
    VoiceRegionResponse$outboundSchema.parse(voiceRegionResponse),
  );
}

export function voiceRegionResponseFromJSON(
  jsonString: string,
): SafeParseResult<VoiceRegionResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VoiceRegionResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VoiceRegionResponse' from JSON`,
  );
}

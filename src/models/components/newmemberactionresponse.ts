/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  SettingsEmojiResponse,
  SettingsEmojiResponse$inboundSchema,
  SettingsEmojiResponse$Outbound,
  SettingsEmojiResponse$outboundSchema,
} from "./settingsemojiresponse.js";

export type NewMemberActionResponse = {
  channelId: string;
  actionType?: 0 | undefined;
  title: string;
  description: string;
  emoji?: SettingsEmojiResponse | null | undefined;
  icon?: string | null | undefined;
};

/** @internal */
export const NewMemberActionResponse$inboundSchema: z.ZodType<
  NewMemberActionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel_id: z.string(),
  action_type: z.literal(0).optional(),
  title: z.string(),
  description: z.string(),
  emoji: z.nullable(SettingsEmojiResponse$inboundSchema).optional(),
  icon: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "channel_id": "channelId",
    "action_type": "actionType",
  });
});

/** @internal */
export type NewMemberActionResponse$Outbound = {
  channel_id: string;
  action_type: 0;
  title: string;
  description: string;
  emoji?: SettingsEmojiResponse$Outbound | null | undefined;
  icon?: string | null | undefined;
};

/** @internal */
export const NewMemberActionResponse$outboundSchema: z.ZodType<
  NewMemberActionResponse$Outbound,
  z.ZodTypeDef,
  NewMemberActionResponse
> = z.object({
  channelId: z.string(),
  actionType: z.literal(0).default(0 as const),
  title: z.string(),
  description: z.string(),
  emoji: z.nullable(SettingsEmojiResponse$outboundSchema).optional(),
  icon: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    channelId: "channel_id",
    actionType: "action_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NewMemberActionResponse$ {
  /** @deprecated use `NewMemberActionResponse$inboundSchema` instead. */
  export const inboundSchema = NewMemberActionResponse$inboundSchema;
  /** @deprecated use `NewMemberActionResponse$outboundSchema` instead. */
  export const outboundSchema = NewMemberActionResponse$outboundSchema;
  /** @deprecated use `NewMemberActionResponse$Outbound` instead. */
  export type Outbound = NewMemberActionResponse$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type WelcomeMessageResponse = {
  authorIds: Array<string>;
  message: string;
};

/** @internal */
export const WelcomeMessageResponse$inboundSchema: z.ZodType<
  WelcomeMessageResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  author_ids: z.array(z.string()),
  message: z.string(),
}).transform((v) => {
  return remap$(v, {
    "author_ids": "authorIds",
  });
});

/** @internal */
export type WelcomeMessageResponse$Outbound = {
  author_ids: Array<string>;
  message: string;
};

/** @internal */
export const WelcomeMessageResponse$outboundSchema: z.ZodType<
  WelcomeMessageResponse$Outbound,
  z.ZodTypeDef,
  WelcomeMessageResponse
> = z.object({
  authorIds: z.array(z.string()),
  message: z.string(),
}).transform((v) => {
  return remap$(v, {
    authorIds: "author_ids",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WelcomeMessageResponse$ {
  /** @deprecated use `WelcomeMessageResponse$inboundSchema` instead. */
  export const inboundSchema = WelcomeMessageResponse$inboundSchema;
  /** @deprecated use `WelcomeMessageResponse$outboundSchema` instead. */
  export const outboundSchema = WelcomeMessageResponse$outboundSchema;
  /** @deprecated use `WelcomeMessageResponse$Outbound` instead. */
  export type Outbound = WelcomeMessageResponse$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type WebhookSourceGuildResponse = {
  id: string;
  icon?: string | null | undefined;
  name: string;
};

/** @internal */
export const WebhookSourceGuildResponse$inboundSchema: z.ZodType<
  WebhookSourceGuildResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  icon: z.nullable(z.string()).optional(),
  name: z.string(),
});

/** @internal */
export type WebhookSourceGuildResponse$Outbound = {
  id: string;
  icon?: string | null | undefined;
  name: string;
};

/** @internal */
export const WebhookSourceGuildResponse$outboundSchema: z.ZodType<
  WebhookSourceGuildResponse$Outbound,
  z.ZodTypeDef,
  WebhookSourceGuildResponse
> = z.object({
  id: z.string(),
  icon: z.nullable(z.string()).optional(),
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookSourceGuildResponse$ {
  /** @deprecated use `WebhookSourceGuildResponse$inboundSchema` instead. */
  export const inboundSchema = WebhookSourceGuildResponse$inboundSchema;
  /** @deprecated use `WebhookSourceGuildResponse$outboundSchema` instead. */
  export const outboundSchema = WebhookSourceGuildResponse$outboundSchema;
  /** @deprecated use `WebhookSourceGuildResponse$Outbound` instead. */
  export type Outbound = WebhookSourceGuildResponse$Outbound;
}

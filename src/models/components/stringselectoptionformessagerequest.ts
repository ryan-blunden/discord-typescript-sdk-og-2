/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ComponentEmojiForMessageRequest,
  ComponentEmojiForMessageRequest$inboundSchema,
  ComponentEmojiForMessageRequest$Outbound,
  ComponentEmojiForMessageRequest$outboundSchema,
} from "./componentemojiformessagerequest.js";

export type StringSelectOptionForMessageRequest = {
  label: string;
  value: string;
  description?: string | null | undefined;
  default?: boolean | null | undefined;
  emoji?: ComponentEmojiForMessageRequest | null | undefined;
};

/** @internal */
export const StringSelectOptionForMessageRequest$inboundSchema: z.ZodType<
  StringSelectOptionForMessageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  label: z.string(),
  value: z.string(),
  description: z.nullable(z.string()).optional(),
  default: z.nullable(z.boolean()).optional(),
  emoji: z.nullable(ComponentEmojiForMessageRequest$inboundSchema).optional(),
});

/** @internal */
export type StringSelectOptionForMessageRequest$Outbound = {
  label: string;
  value: string;
  description?: string | null | undefined;
  default?: boolean | null | undefined;
  emoji?: ComponentEmojiForMessageRequest$Outbound | null | undefined;
};

/** @internal */
export const StringSelectOptionForMessageRequest$outboundSchema: z.ZodType<
  StringSelectOptionForMessageRequest$Outbound,
  z.ZodTypeDef,
  StringSelectOptionForMessageRequest
> = z.object({
  label: z.string(),
  value: z.string(),
  description: z.nullable(z.string()).optional(),
  default: z.nullable(z.boolean()).optional(),
  emoji: z.nullable(ComponentEmojiForMessageRequest$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StringSelectOptionForMessageRequest$ {
  /** @deprecated use `StringSelectOptionForMessageRequest$inboundSchema` instead. */
  export const inboundSchema =
    StringSelectOptionForMessageRequest$inboundSchema;
  /** @deprecated use `StringSelectOptionForMessageRequest$outboundSchema` instead. */
  export const outboundSchema =
    StringSelectOptionForMessageRequest$outboundSchema;
  /** @deprecated use `StringSelectOptionForMessageRequest$Outbound` instead. */
  export type Outbound = StringSelectOptionForMessageRequest$Outbound;
}

export function stringSelectOptionForMessageRequestToJSON(
  stringSelectOptionForMessageRequest: StringSelectOptionForMessageRequest,
): string {
  return JSON.stringify(
    StringSelectOptionForMessageRequest$outboundSchema.parse(
      stringSelectOptionForMessageRequest,
    ),
  );
}

export function stringSelectOptionForMessageRequestFromJSON(
  jsonString: string,
): SafeParseResult<StringSelectOptionForMessageRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      StringSelectOptionForMessageRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StringSelectOptionForMessageRequest' from JSON`,
  );
}

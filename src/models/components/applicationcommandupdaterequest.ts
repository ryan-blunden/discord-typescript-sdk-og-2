/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ApplicationCommandAttachmentOption,
  ApplicationCommandAttachmentOption$inboundSchema,
  ApplicationCommandAttachmentOption$Outbound,
  ApplicationCommandAttachmentOption$outboundSchema,
} from "./applicationcommandattachmentoption.js";
import {
  ApplicationCommandBooleanOption,
  ApplicationCommandBooleanOption$inboundSchema,
  ApplicationCommandBooleanOption$Outbound,
  ApplicationCommandBooleanOption$outboundSchema,
} from "./applicationcommandbooleanoption.js";
import {
  ApplicationCommandChannelOption,
  ApplicationCommandChannelOption$inboundSchema,
  ApplicationCommandChannelOption$Outbound,
  ApplicationCommandChannelOption$outboundSchema,
} from "./applicationcommandchanneloption.js";
import {
  ApplicationCommandIntegerOption,
  ApplicationCommandIntegerOption$inboundSchema,
  ApplicationCommandIntegerOption$Outbound,
  ApplicationCommandIntegerOption$outboundSchema,
} from "./applicationcommandintegeroption.js";
import {
  ApplicationCommandMentionableOption,
  ApplicationCommandMentionableOption$inboundSchema,
  ApplicationCommandMentionableOption$Outbound,
  ApplicationCommandMentionableOption$outboundSchema,
} from "./applicationcommandmentionableoption.js";
import {
  ApplicationCommandNumberOption,
  ApplicationCommandNumberOption$inboundSchema,
  ApplicationCommandNumberOption$Outbound,
  ApplicationCommandNumberOption$outboundSchema,
} from "./applicationcommandnumberoption.js";
import {
  ApplicationCommandRoleOption,
  ApplicationCommandRoleOption$inboundSchema,
  ApplicationCommandRoleOption$Outbound,
  ApplicationCommandRoleOption$outboundSchema,
} from "./applicationcommandroleoption.js";
import {
  ApplicationCommandStringOption,
  ApplicationCommandStringOption$inboundSchema,
  ApplicationCommandStringOption$Outbound,
  ApplicationCommandStringOption$outboundSchema,
} from "./applicationcommandstringoption.js";
import {
  ApplicationCommandSubcommandGroupOption,
  ApplicationCommandSubcommandGroupOption$inboundSchema,
  ApplicationCommandSubcommandGroupOption$Outbound,
  ApplicationCommandSubcommandGroupOption$outboundSchema,
} from "./applicationcommandsubcommandgroupoption.js";
import {
  ApplicationCommandSubcommandOption,
  ApplicationCommandSubcommandOption$inboundSchema,
  ApplicationCommandSubcommandOption$Outbound,
  ApplicationCommandSubcommandOption$outboundSchema,
} from "./applicationcommandsubcommandoption.js";
import {
  ApplicationCommandUserOption,
  ApplicationCommandUserOption$inboundSchema,
  ApplicationCommandUserOption$Outbound,
  ApplicationCommandUserOption$outboundSchema,
} from "./applicationcommanduseroption.js";

export type ApplicationCommandUpdateRequestOptions =
  | ApplicationCommandAttachmentOption
  | ApplicationCommandBooleanOption
  | ApplicationCommandMentionableOption
  | ApplicationCommandRoleOption
  | ApplicationCommandUserOption
  | ApplicationCommandChannelOption
  | ApplicationCommandSubcommandGroupOption
  | ApplicationCommandSubcommandOption
  | ApplicationCommandIntegerOption
  | ApplicationCommandNumberOption
  | ApplicationCommandStringOption;

export type ApplicationCommandUpdateRequest = {
  name: string;
  nameLocalizations?: { [k: string]: string } | null | undefined;
  description?: string | null | undefined;
  descriptionLocalizations?: { [k: string]: string } | null | undefined;
  options?:
    | Array<
      | ApplicationCommandAttachmentOption
      | ApplicationCommandBooleanOption
      | ApplicationCommandMentionableOption
      | ApplicationCommandRoleOption
      | ApplicationCommandUserOption
      | ApplicationCommandChannelOption
      | ApplicationCommandSubcommandGroupOption
      | ApplicationCommandSubcommandOption
      | ApplicationCommandIntegerOption
      | ApplicationCommandNumberOption
      | ApplicationCommandStringOption
    >
    | null
    | undefined;
  defaultMemberPermissions?: number | null | undefined;
  dmPermission?: boolean | null | undefined;
  contexts?: Array<number> | null | undefined;
  integrationTypes?: Array<number> | null | undefined;
  handler?: number | null | undefined;
  type?: 1 | null | undefined;
  id?: string | null | undefined;
};

/** @internal */
export const ApplicationCommandUpdateRequestOptions$inboundSchema: z.ZodType<
  ApplicationCommandUpdateRequestOptions,
  z.ZodTypeDef,
  unknown
> = z.union([
  ApplicationCommandAttachmentOption$inboundSchema,
  ApplicationCommandBooleanOption$inboundSchema,
  ApplicationCommandMentionableOption$inboundSchema,
  ApplicationCommandRoleOption$inboundSchema,
  ApplicationCommandUserOption$inboundSchema,
  ApplicationCommandChannelOption$inboundSchema,
  ApplicationCommandSubcommandGroupOption$inboundSchema,
  ApplicationCommandSubcommandOption$inboundSchema,
  ApplicationCommandIntegerOption$inboundSchema,
  ApplicationCommandNumberOption$inboundSchema,
  ApplicationCommandStringOption$inboundSchema,
]);

/** @internal */
export type ApplicationCommandUpdateRequestOptions$Outbound =
  | ApplicationCommandAttachmentOption$Outbound
  | ApplicationCommandBooleanOption$Outbound
  | ApplicationCommandMentionableOption$Outbound
  | ApplicationCommandRoleOption$Outbound
  | ApplicationCommandUserOption$Outbound
  | ApplicationCommandChannelOption$Outbound
  | ApplicationCommandSubcommandGroupOption$Outbound
  | ApplicationCommandSubcommandOption$Outbound
  | ApplicationCommandIntegerOption$Outbound
  | ApplicationCommandNumberOption$Outbound
  | ApplicationCommandStringOption$Outbound;

/** @internal */
export const ApplicationCommandUpdateRequestOptions$outboundSchema: z.ZodType<
  ApplicationCommandUpdateRequestOptions$Outbound,
  z.ZodTypeDef,
  ApplicationCommandUpdateRequestOptions
> = z.union([
  ApplicationCommandAttachmentOption$outboundSchema,
  ApplicationCommandBooleanOption$outboundSchema,
  ApplicationCommandMentionableOption$outboundSchema,
  ApplicationCommandRoleOption$outboundSchema,
  ApplicationCommandUserOption$outboundSchema,
  ApplicationCommandChannelOption$outboundSchema,
  ApplicationCommandSubcommandGroupOption$outboundSchema,
  ApplicationCommandSubcommandOption$outboundSchema,
  ApplicationCommandIntegerOption$outboundSchema,
  ApplicationCommandNumberOption$outboundSchema,
  ApplicationCommandStringOption$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplicationCommandUpdateRequestOptions$ {
  /** @deprecated use `ApplicationCommandUpdateRequestOptions$inboundSchema` instead. */
  export const inboundSchema =
    ApplicationCommandUpdateRequestOptions$inboundSchema;
  /** @deprecated use `ApplicationCommandUpdateRequestOptions$outboundSchema` instead. */
  export const outboundSchema =
    ApplicationCommandUpdateRequestOptions$outboundSchema;
  /** @deprecated use `ApplicationCommandUpdateRequestOptions$Outbound` instead. */
  export type Outbound = ApplicationCommandUpdateRequestOptions$Outbound;
}

export function applicationCommandUpdateRequestOptionsToJSON(
  applicationCommandUpdateRequestOptions:
    ApplicationCommandUpdateRequestOptions,
): string {
  return JSON.stringify(
    ApplicationCommandUpdateRequestOptions$outboundSchema.parse(
      applicationCommandUpdateRequestOptions,
    ),
  );
}

export function applicationCommandUpdateRequestOptionsFromJSON(
  jsonString: string,
): SafeParseResult<ApplicationCommandUpdateRequestOptions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ApplicationCommandUpdateRequestOptions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApplicationCommandUpdateRequestOptions' from JSON`,
  );
}

/** @internal */
export const ApplicationCommandUpdateRequest$inboundSchema: z.ZodType<
  ApplicationCommandUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  name_localizations: z.nullable(z.record(z.string())).optional(),
  description: z.nullable(z.string()).optional(),
  description_localizations: z.nullable(z.record(z.string())).optional(),
  options: z.nullable(
    z.array(
      z.union([
        ApplicationCommandAttachmentOption$inboundSchema,
        ApplicationCommandBooleanOption$inboundSchema,
        ApplicationCommandMentionableOption$inboundSchema,
        ApplicationCommandRoleOption$inboundSchema,
        ApplicationCommandUserOption$inboundSchema,
        ApplicationCommandChannelOption$inboundSchema,
        ApplicationCommandSubcommandGroupOption$inboundSchema,
        ApplicationCommandSubcommandOption$inboundSchema,
        ApplicationCommandIntegerOption$inboundSchema,
        ApplicationCommandNumberOption$inboundSchema,
        ApplicationCommandStringOption$inboundSchema,
      ]),
    ),
  ).optional(),
  default_member_permissions: z.nullable(z.number().int()).optional(),
  dm_permission: z.nullable(z.boolean()).optional(),
  contexts: z.nullable(z.array(z.number().int())).optional(),
  integration_types: z.nullable(z.array(z.number().int())).optional(),
  handler: z.nullable(z.number().int()).optional(),
  type: z.nullable(z.literal(1)).optional(),
  id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "name_localizations": "nameLocalizations",
    "description_localizations": "descriptionLocalizations",
    "default_member_permissions": "defaultMemberPermissions",
    "dm_permission": "dmPermission",
    "integration_types": "integrationTypes",
  });
});

/** @internal */
export type ApplicationCommandUpdateRequest$Outbound = {
  name: string;
  name_localizations?: { [k: string]: string } | null | undefined;
  description?: string | null | undefined;
  description_localizations?: { [k: string]: string } | null | undefined;
  options?:
    | Array<
      | ApplicationCommandAttachmentOption$Outbound
      | ApplicationCommandBooleanOption$Outbound
      | ApplicationCommandMentionableOption$Outbound
      | ApplicationCommandRoleOption$Outbound
      | ApplicationCommandUserOption$Outbound
      | ApplicationCommandChannelOption$Outbound
      | ApplicationCommandSubcommandGroupOption$Outbound
      | ApplicationCommandSubcommandOption$Outbound
      | ApplicationCommandIntegerOption$Outbound
      | ApplicationCommandNumberOption$Outbound
      | ApplicationCommandStringOption$Outbound
    >
    | null
    | undefined;
  default_member_permissions?: number | null | undefined;
  dm_permission?: boolean | null | undefined;
  contexts?: Array<number> | null | undefined;
  integration_types?: Array<number> | null | undefined;
  handler?: number | null | undefined;
  type: 1 | null;
  id?: string | null | undefined;
};

/** @internal */
export const ApplicationCommandUpdateRequest$outboundSchema: z.ZodType<
  ApplicationCommandUpdateRequest$Outbound,
  z.ZodTypeDef,
  ApplicationCommandUpdateRequest
> = z.object({
  name: z.string(),
  nameLocalizations: z.nullable(z.record(z.string())).optional(),
  description: z.nullable(z.string()).optional(),
  descriptionLocalizations: z.nullable(z.record(z.string())).optional(),
  options: z.nullable(
    z.array(
      z.union([
        ApplicationCommandAttachmentOption$outboundSchema,
        ApplicationCommandBooleanOption$outboundSchema,
        ApplicationCommandMentionableOption$outboundSchema,
        ApplicationCommandRoleOption$outboundSchema,
        ApplicationCommandUserOption$outboundSchema,
        ApplicationCommandChannelOption$outboundSchema,
        ApplicationCommandSubcommandGroupOption$outboundSchema,
        ApplicationCommandSubcommandOption$outboundSchema,
        ApplicationCommandIntegerOption$outboundSchema,
        ApplicationCommandNumberOption$outboundSchema,
        ApplicationCommandStringOption$outboundSchema,
      ]),
    ),
  ).optional(),
  defaultMemberPermissions: z.nullable(z.number().int()).optional(),
  dmPermission: z.nullable(z.boolean()).optional(),
  contexts: z.nullable(z.array(z.number().int())).optional(),
  integrationTypes: z.nullable(z.array(z.number().int())).optional(),
  handler: z.nullable(z.number().int()).optional(),
  type: z.nullable(z.literal(1).default(1 as const)),
  id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    nameLocalizations: "name_localizations",
    descriptionLocalizations: "description_localizations",
    defaultMemberPermissions: "default_member_permissions",
    dmPermission: "dm_permission",
    integrationTypes: "integration_types",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplicationCommandUpdateRequest$ {
  /** @deprecated use `ApplicationCommandUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = ApplicationCommandUpdateRequest$inboundSchema;
  /** @deprecated use `ApplicationCommandUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = ApplicationCommandUpdateRequest$outboundSchema;
  /** @deprecated use `ApplicationCommandUpdateRequest$Outbound` instead. */
  export type Outbound = ApplicationCommandUpdateRequest$Outbound;
}

export function applicationCommandUpdateRequestToJSON(
  applicationCommandUpdateRequest: ApplicationCommandUpdateRequest,
): string {
  return JSON.stringify(
    ApplicationCommandUpdateRequest$outboundSchema.parse(
      applicationCommandUpdateRequest,
    ),
  );
}

export function applicationCommandUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<ApplicationCommandUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ApplicationCommandUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ApplicationCommandUpdateRequest' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type GithubCheckApp = {
  name: string;
};

/** @internal */
export const GithubCheckApp$inboundSchema: z.ZodType<
  GithubCheckApp,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type GithubCheckApp$Outbound = {
  name: string;
};

/** @internal */
export const GithubCheckApp$outboundSchema: z.ZodType<
  GithubCheckApp$Outbound,
  z.ZodTypeDef,
  GithubCheckApp
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GithubCheckApp$ {
  /** @deprecated use `GithubCheckApp$inboundSchema` instead. */
  export const inboundSchema = GithubCheckApp$inboundSchema;
  /** @deprecated use `GithubCheckApp$outboundSchema` instead. */
  export const outboundSchema = GithubCheckApp$outboundSchema;
  /** @deprecated use `GithubCheckApp$Outbound` instead. */
  export type Outbound = GithubCheckApp$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type WidgetSettingsResponse = {
  enabled: boolean;
  channelId?: string | null | undefined;
};

/** @internal */
export const WidgetSettingsResponse$inboundSchema: z.ZodType<
  WidgetSettingsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  channel_id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "channel_id": "channelId",
  });
});

/** @internal */
export type WidgetSettingsResponse$Outbound = {
  enabled: boolean;
  channel_id?: string | null | undefined;
};

/** @internal */
export const WidgetSettingsResponse$outboundSchema: z.ZodType<
  WidgetSettingsResponse$Outbound,
  z.ZodTypeDef,
  WidgetSettingsResponse
> = z.object({
  enabled: z.boolean(),
  channelId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    channelId: "channel_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WidgetSettingsResponse$ {
  /** @deprecated use `WidgetSettingsResponse$inboundSchema` instead. */
  export const inboundSchema = WidgetSettingsResponse$inboundSchema;
  /** @deprecated use `WidgetSettingsResponse$outboundSchema` instead. */
  export const outboundSchema = WidgetSettingsResponse$outboundSchema;
  /** @deprecated use `WidgetSettingsResponse$Outbound` instead. */
  export type Outbound = WidgetSettingsResponse$Outbound;
}

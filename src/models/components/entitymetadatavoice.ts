/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EntityMetadataVoice = {};

/** @internal */
export const EntityMetadataVoice$inboundSchema: z.ZodType<
  EntityMetadataVoice,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type EntityMetadataVoice$Outbound = {};

/** @internal */
export const EntityMetadataVoice$outboundSchema: z.ZodType<
  EntityMetadataVoice$Outbound,
  z.ZodTypeDef,
  EntityMetadataVoice
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntityMetadataVoice$ {
  /** @deprecated use `EntityMetadataVoice$inboundSchema` instead. */
  export const inboundSchema = EntityMetadataVoice$inboundSchema;
  /** @deprecated use `EntityMetadataVoice$outboundSchema` instead. */
  export const outboundSchema = EntityMetadataVoice$outboundSchema;
  /** @deprecated use `EntityMetadataVoice$Outbound` instead. */
  export type Outbound = EntityMetadataVoice$Outbound;
}

export function entityMetadataVoiceToJSON(
  entityMetadataVoice: EntityMetadataVoice,
): string {
  return JSON.stringify(
    EntityMetadataVoice$outboundSchema.parse(entityMetadataVoice),
  );
}

export function entityMetadataVoiceFromJSON(
  jsonString: string,
): SafeParseResult<EntityMetadataVoice, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EntityMetadataVoice$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EntityMetadataVoice' from JSON`,
  );
}

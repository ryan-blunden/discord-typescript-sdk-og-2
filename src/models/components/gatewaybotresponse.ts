/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  GatewayBotSessionStartLimitResponse,
  GatewayBotSessionStartLimitResponse$inboundSchema,
  GatewayBotSessionStartLimitResponse$Outbound,
  GatewayBotSessionStartLimitResponse$outboundSchema,
} from "./gatewaybotsessionstartlimitresponse.js";

export type GatewayBotResponse = {
  url: string;
  sessionStartLimit: GatewayBotSessionStartLimitResponse;
  shards: number;
};

/** @internal */
export const GatewayBotResponse$inboundSchema: z.ZodType<
  GatewayBotResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string(),
  session_start_limit: GatewayBotSessionStartLimitResponse$inboundSchema,
  shards: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "session_start_limit": "sessionStartLimit",
  });
});

/** @internal */
export type GatewayBotResponse$Outbound = {
  url: string;
  session_start_limit: GatewayBotSessionStartLimitResponse$Outbound;
  shards: number;
};

/** @internal */
export const GatewayBotResponse$outboundSchema: z.ZodType<
  GatewayBotResponse$Outbound,
  z.ZodTypeDef,
  GatewayBotResponse
> = z.object({
  url: z.string(),
  sessionStartLimit: GatewayBotSessionStartLimitResponse$outboundSchema,
  shards: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    sessionStartLimit: "session_start_limit",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GatewayBotResponse$ {
  /** @deprecated use `GatewayBotResponse$inboundSchema` instead. */
  export const inboundSchema = GatewayBotResponse$inboundSchema;
  /** @deprecated use `GatewayBotResponse$outboundSchema` instead. */
  export const outboundSchema = GatewayBotResponse$outboundSchema;
  /** @deprecated use `GatewayBotResponse$Outbound` instead. */
  export type Outbound = GatewayBotResponse$Outbound;
}

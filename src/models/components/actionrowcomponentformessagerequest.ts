/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ButtonComponentForMessageRequest,
  ButtonComponentForMessageRequest$inboundSchema,
  ButtonComponentForMessageRequest$Outbound,
  ButtonComponentForMessageRequest$outboundSchema,
} from "./buttoncomponentformessagerequest.js";
import {
  ChannelSelectComponentForMessageRequest,
  ChannelSelectComponentForMessageRequest$inboundSchema,
  ChannelSelectComponentForMessageRequest$Outbound,
  ChannelSelectComponentForMessageRequest$outboundSchema,
} from "./channelselectcomponentformessagerequest.js";
import {
  MentionableSelectComponentForMessageRequest,
  MentionableSelectComponentForMessageRequest$inboundSchema,
  MentionableSelectComponentForMessageRequest$Outbound,
  MentionableSelectComponentForMessageRequest$outboundSchema,
} from "./mentionableselectcomponentformessagerequest.js";
import {
  RoleSelectComponentForMessageRequest,
  RoleSelectComponentForMessageRequest$inboundSchema,
  RoleSelectComponentForMessageRequest$Outbound,
  RoleSelectComponentForMessageRequest$outboundSchema,
} from "./roleselectcomponentformessagerequest.js";
import {
  StringSelectComponentForMessageRequest,
  StringSelectComponentForMessageRequest$inboundSchema,
  StringSelectComponentForMessageRequest$Outbound,
  StringSelectComponentForMessageRequest$outboundSchema,
} from "./stringselectcomponentformessagerequest.js";
import {
  UserSelectComponentForMessageRequest,
  UserSelectComponentForMessageRequest$inboundSchema,
  UserSelectComponentForMessageRequest$Outbound,
  UserSelectComponentForMessageRequest$outboundSchema,
} from "./userselectcomponentformessagerequest.js";

export type ActionRowComponentForMessageRequestComponents =
  | MentionableSelectComponentForMessageRequest
  | RoleSelectComponentForMessageRequest
  | StringSelectComponentForMessageRequest
  | UserSelectComponentForMessageRequest
  | ButtonComponentForMessageRequest
  | ChannelSelectComponentForMessageRequest;

export type ActionRowComponentForMessageRequest = {
  type?: 1 | undefined;
  components: Array<
    | MentionableSelectComponentForMessageRequest
    | RoleSelectComponentForMessageRequest
    | StringSelectComponentForMessageRequest
    | UserSelectComponentForMessageRequest
    | ButtonComponentForMessageRequest
    | ChannelSelectComponentForMessageRequest
  >;
};

/** @internal */
export const ActionRowComponentForMessageRequestComponents$inboundSchema:
  z.ZodType<
    ActionRowComponentForMessageRequestComponents,
    z.ZodTypeDef,
    unknown
  > = z.union([
    MentionableSelectComponentForMessageRequest$inboundSchema,
    RoleSelectComponentForMessageRequest$inboundSchema,
    StringSelectComponentForMessageRequest$inboundSchema,
    UserSelectComponentForMessageRequest$inboundSchema,
    ButtonComponentForMessageRequest$inboundSchema,
    ChannelSelectComponentForMessageRequest$inboundSchema,
  ]);

/** @internal */
export type ActionRowComponentForMessageRequestComponents$Outbound =
  | MentionableSelectComponentForMessageRequest$Outbound
  | RoleSelectComponentForMessageRequest$Outbound
  | StringSelectComponentForMessageRequest$Outbound
  | UserSelectComponentForMessageRequest$Outbound
  | ButtonComponentForMessageRequest$Outbound
  | ChannelSelectComponentForMessageRequest$Outbound;

/** @internal */
export const ActionRowComponentForMessageRequestComponents$outboundSchema:
  z.ZodType<
    ActionRowComponentForMessageRequestComponents$Outbound,
    z.ZodTypeDef,
    ActionRowComponentForMessageRequestComponents
  > = z.union([
    MentionableSelectComponentForMessageRequest$outboundSchema,
    RoleSelectComponentForMessageRequest$outboundSchema,
    StringSelectComponentForMessageRequest$outboundSchema,
    UserSelectComponentForMessageRequest$outboundSchema,
    ButtonComponentForMessageRequest$outboundSchema,
    ChannelSelectComponentForMessageRequest$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActionRowComponentForMessageRequestComponents$ {
  /** @deprecated use `ActionRowComponentForMessageRequestComponents$inboundSchema` instead. */
  export const inboundSchema =
    ActionRowComponentForMessageRequestComponents$inboundSchema;
  /** @deprecated use `ActionRowComponentForMessageRequestComponents$outboundSchema` instead. */
  export const outboundSchema =
    ActionRowComponentForMessageRequestComponents$outboundSchema;
  /** @deprecated use `ActionRowComponentForMessageRequestComponents$Outbound` instead. */
  export type Outbound = ActionRowComponentForMessageRequestComponents$Outbound;
}

export function actionRowComponentForMessageRequestComponentsToJSON(
  actionRowComponentForMessageRequestComponents:
    ActionRowComponentForMessageRequestComponents,
): string {
  return JSON.stringify(
    ActionRowComponentForMessageRequestComponents$outboundSchema.parse(
      actionRowComponentForMessageRequestComponents,
    ),
  );
}

export function actionRowComponentForMessageRequestComponentsFromJSON(
  jsonString: string,
): SafeParseResult<
  ActionRowComponentForMessageRequestComponents,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ActionRowComponentForMessageRequestComponents$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ActionRowComponentForMessageRequestComponents' from JSON`,
  );
}

/** @internal */
export const ActionRowComponentForMessageRequest$inboundSchema: z.ZodType<
  ActionRowComponentForMessageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal(1).optional(),
  components: z.array(
    z.union([
      MentionableSelectComponentForMessageRequest$inboundSchema,
      RoleSelectComponentForMessageRequest$inboundSchema,
      StringSelectComponentForMessageRequest$inboundSchema,
      UserSelectComponentForMessageRequest$inboundSchema,
      ButtonComponentForMessageRequest$inboundSchema,
      ChannelSelectComponentForMessageRequest$inboundSchema,
    ]),
  ),
});

/** @internal */
export type ActionRowComponentForMessageRequest$Outbound = {
  type: 1;
  components: Array<
    | MentionableSelectComponentForMessageRequest$Outbound
    | RoleSelectComponentForMessageRequest$Outbound
    | StringSelectComponentForMessageRequest$Outbound
    | UserSelectComponentForMessageRequest$Outbound
    | ButtonComponentForMessageRequest$Outbound
    | ChannelSelectComponentForMessageRequest$Outbound
  >;
};

/** @internal */
export const ActionRowComponentForMessageRequest$outboundSchema: z.ZodType<
  ActionRowComponentForMessageRequest$Outbound,
  z.ZodTypeDef,
  ActionRowComponentForMessageRequest
> = z.object({
  type: z.literal(1).default(1 as const),
  components: z.array(
    z.union([
      MentionableSelectComponentForMessageRequest$outboundSchema,
      RoleSelectComponentForMessageRequest$outboundSchema,
      StringSelectComponentForMessageRequest$outboundSchema,
      UserSelectComponentForMessageRequest$outboundSchema,
      ButtonComponentForMessageRequest$outboundSchema,
      ChannelSelectComponentForMessageRequest$outboundSchema,
    ]),
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActionRowComponentForMessageRequest$ {
  /** @deprecated use `ActionRowComponentForMessageRequest$inboundSchema` instead. */
  export const inboundSchema =
    ActionRowComponentForMessageRequest$inboundSchema;
  /** @deprecated use `ActionRowComponentForMessageRequest$outboundSchema` instead. */
  export const outboundSchema =
    ActionRowComponentForMessageRequest$outboundSchema;
  /** @deprecated use `ActionRowComponentForMessageRequest$Outbound` instead. */
  export type Outbound = ActionRowComponentForMessageRequest$Outbound;
}

export function actionRowComponentForMessageRequestToJSON(
  actionRowComponentForMessageRequest: ActionRowComponentForMessageRequest,
): string {
  return JSON.stringify(
    ActionRowComponentForMessageRequest$outboundSchema.parse(
      actionRowComponentForMessageRequest,
    ),
  );
}

export function actionRowComponentForMessageRequestFromJSON(
  jsonString: string,
): SafeParseResult<ActionRowComponentForMessageRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ActionRowComponentForMessageRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ActionRowComponentForMessageRequest' from JSON`,
  );
}

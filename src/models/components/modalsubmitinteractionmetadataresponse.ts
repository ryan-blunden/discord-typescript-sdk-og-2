/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ApplicationCommandInteractionMetadataResponse,
  ApplicationCommandInteractionMetadataResponse$inboundSchema,
  ApplicationCommandInteractionMetadataResponse$Outbound,
  ApplicationCommandInteractionMetadataResponse$outboundSchema,
} from "./applicationcommandinteractionmetadataresponse.js";
import {
  MessageComponentInteractionMetadataResponse,
  MessageComponentInteractionMetadataResponse$inboundSchema,
  MessageComponentInteractionMetadataResponse$Outbound,
  MessageComponentInteractionMetadataResponse$outboundSchema,
} from "./messagecomponentinteractionmetadataresponse.js";
import {
  UserResponse,
  UserResponse$inboundSchema,
  UserResponse$Outbound,
  UserResponse$outboundSchema,
} from "./userresponse.js";

export type TriggeringInteractionMetadata =
  | MessageComponentInteractionMetadataResponse
  | ApplicationCommandInteractionMetadataResponse;

export type ModalSubmitInteractionMetadataResponse = {
  id: string;
  type?: 1 | undefined;
  user?: UserResponse | null | undefined;
  authorizingIntegrationOwners: { [k: string]: string };
  originalResponseMessageId?: string | null | undefined;
  triggeringInteractionMetadata:
    | MessageComponentInteractionMetadataResponse
    | ApplicationCommandInteractionMetadataResponse;
};

/** @internal */
export const TriggeringInteractionMetadata$inboundSchema: z.ZodType<
  TriggeringInteractionMetadata,
  z.ZodTypeDef,
  unknown
> = z.union([
  MessageComponentInteractionMetadataResponse$inboundSchema,
  ApplicationCommandInteractionMetadataResponse$inboundSchema,
]);

/** @internal */
export type TriggeringInteractionMetadata$Outbound =
  | MessageComponentInteractionMetadataResponse$Outbound
  | ApplicationCommandInteractionMetadataResponse$Outbound;

/** @internal */
export const TriggeringInteractionMetadata$outboundSchema: z.ZodType<
  TriggeringInteractionMetadata$Outbound,
  z.ZodTypeDef,
  TriggeringInteractionMetadata
> = z.union([
  MessageComponentInteractionMetadataResponse$outboundSchema,
  ApplicationCommandInteractionMetadataResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TriggeringInteractionMetadata$ {
  /** @deprecated use `TriggeringInteractionMetadata$inboundSchema` instead. */
  export const inboundSchema = TriggeringInteractionMetadata$inboundSchema;
  /** @deprecated use `TriggeringInteractionMetadata$outboundSchema` instead. */
  export const outboundSchema = TriggeringInteractionMetadata$outboundSchema;
  /** @deprecated use `TriggeringInteractionMetadata$Outbound` instead. */
  export type Outbound = TriggeringInteractionMetadata$Outbound;
}

export function triggeringInteractionMetadataToJSON(
  triggeringInteractionMetadata: TriggeringInteractionMetadata,
): string {
  return JSON.stringify(
    TriggeringInteractionMetadata$outboundSchema.parse(
      triggeringInteractionMetadata,
    ),
  );
}

export function triggeringInteractionMetadataFromJSON(
  jsonString: string,
): SafeParseResult<TriggeringInteractionMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TriggeringInteractionMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TriggeringInteractionMetadata' from JSON`,
  );
}

/** @internal */
export const ModalSubmitInteractionMetadataResponse$inboundSchema: z.ZodType<
  ModalSubmitInteractionMetadataResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  type: z.literal(1).optional(),
  user: z.nullable(UserResponse$inboundSchema).optional(),
  authorizing_integration_owners: z.record(z.string()),
  original_response_message_id: z.nullable(z.string()).optional(),
  triggering_interaction_metadata: z.union([
    MessageComponentInteractionMetadataResponse$inboundSchema,
    ApplicationCommandInteractionMetadataResponse$inboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    "authorizing_integration_owners": "authorizingIntegrationOwners",
    "original_response_message_id": "originalResponseMessageId",
    "triggering_interaction_metadata": "triggeringInteractionMetadata",
  });
});

/** @internal */
export type ModalSubmitInteractionMetadataResponse$Outbound = {
  id: string;
  type: 1;
  user?: UserResponse$Outbound | null | undefined;
  authorizing_integration_owners: { [k: string]: string };
  original_response_message_id?: string | null | undefined;
  triggering_interaction_metadata:
    | MessageComponentInteractionMetadataResponse$Outbound
    | ApplicationCommandInteractionMetadataResponse$Outbound;
};

/** @internal */
export const ModalSubmitInteractionMetadataResponse$outboundSchema: z.ZodType<
  ModalSubmitInteractionMetadataResponse$Outbound,
  z.ZodTypeDef,
  ModalSubmitInteractionMetadataResponse
> = z.object({
  id: z.string(),
  type: z.literal(1).default(1 as const),
  user: z.nullable(UserResponse$outboundSchema).optional(),
  authorizingIntegrationOwners: z.record(z.string()),
  originalResponseMessageId: z.nullable(z.string()).optional(),
  triggeringInteractionMetadata: z.union([
    MessageComponentInteractionMetadataResponse$outboundSchema,
    ApplicationCommandInteractionMetadataResponse$outboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    authorizingIntegrationOwners: "authorizing_integration_owners",
    originalResponseMessageId: "original_response_message_id",
    triggeringInteractionMetadata: "triggering_interaction_metadata",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ModalSubmitInteractionMetadataResponse$ {
  /** @deprecated use `ModalSubmitInteractionMetadataResponse$inboundSchema` instead. */
  export const inboundSchema =
    ModalSubmitInteractionMetadataResponse$inboundSchema;
  /** @deprecated use `ModalSubmitInteractionMetadataResponse$outboundSchema` instead. */
  export const outboundSchema =
    ModalSubmitInteractionMetadataResponse$outboundSchema;
  /** @deprecated use `ModalSubmitInteractionMetadataResponse$Outbound` instead. */
  export type Outbound = ModalSubmitInteractionMetadataResponse$Outbound;
}

export function modalSubmitInteractionMetadataResponseToJSON(
  modalSubmitInteractionMetadataResponse:
    ModalSubmitInteractionMetadataResponse,
): string {
  return JSON.stringify(
    ModalSubmitInteractionMetadataResponse$outboundSchema.parse(
      modalSubmitInteractionMetadataResponse,
    ),
  );
}

export function modalSubmitInteractionMetadataResponseFromJSON(
  jsonString: string,
): SafeParseResult<ModalSubmitInteractionMetadataResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ModalSubmitInteractionMetadataResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ModalSubmitInteractionMetadataResponse' from JSON`,
  );
}

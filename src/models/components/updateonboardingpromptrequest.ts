/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  OnboardingPromptOptionRequest,
  OnboardingPromptOptionRequest$inboundSchema,
  OnboardingPromptOptionRequest$Outbound,
  OnboardingPromptOptionRequest$outboundSchema,
} from "./onboardingpromptoptionrequest.js";

export type UpdateOnboardingPromptRequest = {
  title: string;
  options: Array<OnboardingPromptOptionRequest>;
  singleSelect?: boolean | null | undefined;
  required?: boolean | null | undefined;
  inOnboarding?: boolean | null | undefined;
  type?: 0 | null | undefined;
  id: string;
};

/** @internal */
export const UpdateOnboardingPromptRequest$inboundSchema: z.ZodType<
  UpdateOnboardingPromptRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  title: z.string(),
  options: z.array(OnboardingPromptOptionRequest$inboundSchema),
  single_select: z.nullable(z.boolean()).optional(),
  required: z.nullable(z.boolean()).optional(),
  in_onboarding: z.nullable(z.boolean()).optional(),
  type: z.nullable(z.literal(0)).optional(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "single_select": "singleSelect",
    "in_onboarding": "inOnboarding",
  });
});

/** @internal */
export type UpdateOnboardingPromptRequest$Outbound = {
  title: string;
  options: Array<OnboardingPromptOptionRequest$Outbound>;
  single_select?: boolean | null | undefined;
  required?: boolean | null | undefined;
  in_onboarding?: boolean | null | undefined;
  type: 0 | null;
  id: string;
};

/** @internal */
export const UpdateOnboardingPromptRequest$outboundSchema: z.ZodType<
  UpdateOnboardingPromptRequest$Outbound,
  z.ZodTypeDef,
  UpdateOnboardingPromptRequest
> = z.object({
  title: z.string(),
  options: z.array(OnboardingPromptOptionRequest$outboundSchema),
  singleSelect: z.nullable(z.boolean()).optional(),
  required: z.nullable(z.boolean()).optional(),
  inOnboarding: z.nullable(z.boolean()).optional(),
  type: z.nullable(z.literal(0).default(0 as const)),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    singleSelect: "single_select",
    inOnboarding: "in_onboarding",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateOnboardingPromptRequest$ {
  /** @deprecated use `UpdateOnboardingPromptRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateOnboardingPromptRequest$inboundSchema;
  /** @deprecated use `UpdateOnboardingPromptRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateOnboardingPromptRequest$outboundSchema;
  /** @deprecated use `UpdateOnboardingPromptRequest$Outbound` instead. */
  export type Outbound = UpdateOnboardingPromptRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  OnboardingPromptOptionResponse,
  OnboardingPromptOptionResponse$inboundSchema,
  OnboardingPromptOptionResponse$Outbound,
  OnboardingPromptOptionResponse$outboundSchema,
} from "./onboardingpromptoptionresponse.js";

export type OnboardingPromptResponse = {
  id: string;
  title: string;
  options: Array<OnboardingPromptOptionResponse>;
  singleSelect: boolean;
  required: boolean;
  inOnboarding: boolean;
  type?: 0 | undefined;
};

/** @internal */
export const OnboardingPromptResponse$inboundSchema: z.ZodType<
  OnboardingPromptResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  title: z.string(),
  options: z.array(OnboardingPromptOptionResponse$inboundSchema),
  single_select: z.boolean(),
  required: z.boolean(),
  in_onboarding: z.boolean(),
  type: z.literal(0).optional(),
}).transform((v) => {
  return remap$(v, {
    "single_select": "singleSelect",
    "in_onboarding": "inOnboarding",
  });
});

/** @internal */
export type OnboardingPromptResponse$Outbound = {
  id: string;
  title: string;
  options: Array<OnboardingPromptOptionResponse$Outbound>;
  single_select: boolean;
  required: boolean;
  in_onboarding: boolean;
  type: 0;
};

/** @internal */
export const OnboardingPromptResponse$outboundSchema: z.ZodType<
  OnboardingPromptResponse$Outbound,
  z.ZodTypeDef,
  OnboardingPromptResponse
> = z.object({
  id: z.string(),
  title: z.string(),
  options: z.array(OnboardingPromptOptionResponse$outboundSchema),
  singleSelect: z.boolean(),
  required: z.boolean(),
  inOnboarding: z.boolean(),
  type: z.literal(0).default(0 as const),
}).transform((v) => {
  return remap$(v, {
    singleSelect: "single_select",
    inOnboarding: "in_onboarding",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OnboardingPromptResponse$ {
  /** @deprecated use `OnboardingPromptResponse$inboundSchema` instead. */
  export const inboundSchema = OnboardingPromptResponse$inboundSchema;
  /** @deprecated use `OnboardingPromptResponse$outboundSchema` instead. */
  export const outboundSchema = OnboardingPromptResponse$outboundSchema;
  /** @deprecated use `OnboardingPromptResponse$Outbound` instead. */
  export type Outbound = OnboardingPromptResponse$Outbound;
}

export function onboardingPromptResponseToJSON(
  onboardingPromptResponse: OnboardingPromptResponse,
): string {
  return JSON.stringify(
    OnboardingPromptResponse$outboundSchema.parse(onboardingPromptResponse),
  );
}

export function onboardingPromptResponseFromJSON(
  jsonString: string,
): SafeParseResult<OnboardingPromptResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OnboardingPromptResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OnboardingPromptResponse' from JSON`,
  );
}

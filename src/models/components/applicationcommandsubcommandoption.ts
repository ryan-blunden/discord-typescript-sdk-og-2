/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  ApplicationCommandAttachmentOption,
  ApplicationCommandAttachmentOption$inboundSchema,
  ApplicationCommandAttachmentOption$Outbound,
  ApplicationCommandAttachmentOption$outboundSchema,
} from "./applicationcommandattachmentoption.js";
import {
  ApplicationCommandBooleanOption,
  ApplicationCommandBooleanOption$inboundSchema,
  ApplicationCommandBooleanOption$Outbound,
  ApplicationCommandBooleanOption$outboundSchema,
} from "./applicationcommandbooleanoption.js";
import {
  ApplicationCommandChannelOption,
  ApplicationCommandChannelOption$inboundSchema,
  ApplicationCommandChannelOption$Outbound,
  ApplicationCommandChannelOption$outboundSchema,
} from "./applicationcommandchanneloption.js";
import {
  ApplicationCommandIntegerOption,
  ApplicationCommandIntegerOption$inboundSchema,
  ApplicationCommandIntegerOption$Outbound,
  ApplicationCommandIntegerOption$outboundSchema,
} from "./applicationcommandintegeroption.js";
import {
  ApplicationCommandMentionableOption,
  ApplicationCommandMentionableOption$inboundSchema,
  ApplicationCommandMentionableOption$Outbound,
  ApplicationCommandMentionableOption$outboundSchema,
} from "./applicationcommandmentionableoption.js";
import {
  ApplicationCommandNumberOption,
  ApplicationCommandNumberOption$inboundSchema,
  ApplicationCommandNumberOption$Outbound,
  ApplicationCommandNumberOption$outboundSchema,
} from "./applicationcommandnumberoption.js";
import {
  ApplicationCommandRoleOption,
  ApplicationCommandRoleOption$inboundSchema,
  ApplicationCommandRoleOption$Outbound,
  ApplicationCommandRoleOption$outboundSchema,
} from "./applicationcommandroleoption.js";
import {
  ApplicationCommandStringOption,
  ApplicationCommandStringOption$inboundSchema,
  ApplicationCommandStringOption$Outbound,
  ApplicationCommandStringOption$outboundSchema,
} from "./applicationcommandstringoption.js";
import {
  ApplicationCommandUserOption,
  ApplicationCommandUserOption$inboundSchema,
  ApplicationCommandUserOption$Outbound,
  ApplicationCommandUserOption$outboundSchema,
} from "./applicationcommanduseroption.js";

export type ApplicationCommandSubcommandOptionOptions =
  | ApplicationCommandAttachmentOption
  | ApplicationCommandBooleanOption
  | ApplicationCommandMentionableOption
  | ApplicationCommandRoleOption
  | ApplicationCommandUserOption
  | ApplicationCommandChannelOption
  | ApplicationCommandIntegerOption
  | ApplicationCommandNumberOption
  | ApplicationCommandStringOption;

export type ApplicationCommandSubcommandOption = {
  type?: 1 | undefined;
  name: string;
  nameLocalizations?: { [k: string]: string } | null | undefined;
  description: string;
  descriptionLocalizations?: { [k: string]: string } | null | undefined;
  required?: boolean | null | undefined;
  options?:
    | Array<
      | ApplicationCommandAttachmentOption
      | ApplicationCommandBooleanOption
      | ApplicationCommandMentionableOption
      | ApplicationCommandRoleOption
      | ApplicationCommandUserOption
      | ApplicationCommandChannelOption
      | ApplicationCommandIntegerOption
      | ApplicationCommandNumberOption
      | ApplicationCommandStringOption
    >
    | null
    | undefined;
};

/** @internal */
export const ApplicationCommandSubcommandOptionOptions$inboundSchema: z.ZodType<
  ApplicationCommandSubcommandOptionOptions,
  z.ZodTypeDef,
  unknown
> = z.union([
  ApplicationCommandAttachmentOption$inboundSchema,
  ApplicationCommandBooleanOption$inboundSchema,
  ApplicationCommandMentionableOption$inboundSchema,
  ApplicationCommandRoleOption$inboundSchema,
  ApplicationCommandUserOption$inboundSchema,
  ApplicationCommandChannelOption$inboundSchema,
  ApplicationCommandIntegerOption$inboundSchema,
  ApplicationCommandNumberOption$inboundSchema,
  ApplicationCommandStringOption$inboundSchema,
]);

/** @internal */
export type ApplicationCommandSubcommandOptionOptions$Outbound =
  | ApplicationCommandAttachmentOption$Outbound
  | ApplicationCommandBooleanOption$Outbound
  | ApplicationCommandMentionableOption$Outbound
  | ApplicationCommandRoleOption$Outbound
  | ApplicationCommandUserOption$Outbound
  | ApplicationCommandChannelOption$Outbound
  | ApplicationCommandIntegerOption$Outbound
  | ApplicationCommandNumberOption$Outbound
  | ApplicationCommandStringOption$Outbound;

/** @internal */
export const ApplicationCommandSubcommandOptionOptions$outboundSchema:
  z.ZodType<
    ApplicationCommandSubcommandOptionOptions$Outbound,
    z.ZodTypeDef,
    ApplicationCommandSubcommandOptionOptions
  > = z.union([
    ApplicationCommandAttachmentOption$outboundSchema,
    ApplicationCommandBooleanOption$outboundSchema,
    ApplicationCommandMentionableOption$outboundSchema,
    ApplicationCommandRoleOption$outboundSchema,
    ApplicationCommandUserOption$outboundSchema,
    ApplicationCommandChannelOption$outboundSchema,
    ApplicationCommandIntegerOption$outboundSchema,
    ApplicationCommandNumberOption$outboundSchema,
    ApplicationCommandStringOption$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplicationCommandSubcommandOptionOptions$ {
  /** @deprecated use `ApplicationCommandSubcommandOptionOptions$inboundSchema` instead. */
  export const inboundSchema =
    ApplicationCommandSubcommandOptionOptions$inboundSchema;
  /** @deprecated use `ApplicationCommandSubcommandOptionOptions$outboundSchema` instead. */
  export const outboundSchema =
    ApplicationCommandSubcommandOptionOptions$outboundSchema;
  /** @deprecated use `ApplicationCommandSubcommandOptionOptions$Outbound` instead. */
  export type Outbound = ApplicationCommandSubcommandOptionOptions$Outbound;
}

/** @internal */
export const ApplicationCommandSubcommandOption$inboundSchema: z.ZodType<
  ApplicationCommandSubcommandOption,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal(1).optional(),
  name: z.string(),
  name_localizations: z.nullable(z.record(z.string())).optional(),
  description: z.string(),
  description_localizations: z.nullable(z.record(z.string())).optional(),
  required: z.nullable(z.boolean()).optional(),
  options: z.nullable(
    z.array(
      z.union([
        ApplicationCommandAttachmentOption$inboundSchema,
        ApplicationCommandBooleanOption$inboundSchema,
        ApplicationCommandMentionableOption$inboundSchema,
        ApplicationCommandRoleOption$inboundSchema,
        ApplicationCommandUserOption$inboundSchema,
        ApplicationCommandChannelOption$inboundSchema,
        ApplicationCommandIntegerOption$inboundSchema,
        ApplicationCommandNumberOption$inboundSchema,
        ApplicationCommandStringOption$inboundSchema,
      ]),
    ),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "name_localizations": "nameLocalizations",
    "description_localizations": "descriptionLocalizations",
  });
});

/** @internal */
export type ApplicationCommandSubcommandOption$Outbound = {
  type: 1;
  name: string;
  name_localizations?: { [k: string]: string } | null | undefined;
  description: string;
  description_localizations?: { [k: string]: string } | null | undefined;
  required?: boolean | null | undefined;
  options?:
    | Array<
      | ApplicationCommandAttachmentOption$Outbound
      | ApplicationCommandBooleanOption$Outbound
      | ApplicationCommandMentionableOption$Outbound
      | ApplicationCommandRoleOption$Outbound
      | ApplicationCommandUserOption$Outbound
      | ApplicationCommandChannelOption$Outbound
      | ApplicationCommandIntegerOption$Outbound
      | ApplicationCommandNumberOption$Outbound
      | ApplicationCommandStringOption$Outbound
    >
    | null
    | undefined;
};

/** @internal */
export const ApplicationCommandSubcommandOption$outboundSchema: z.ZodType<
  ApplicationCommandSubcommandOption$Outbound,
  z.ZodTypeDef,
  ApplicationCommandSubcommandOption
> = z.object({
  type: z.literal(1).default(1 as const),
  name: z.string(),
  nameLocalizations: z.nullable(z.record(z.string())).optional(),
  description: z.string(),
  descriptionLocalizations: z.nullable(z.record(z.string())).optional(),
  required: z.nullable(z.boolean()).optional(),
  options: z.nullable(
    z.array(
      z.union([
        ApplicationCommandAttachmentOption$outboundSchema,
        ApplicationCommandBooleanOption$outboundSchema,
        ApplicationCommandMentionableOption$outboundSchema,
        ApplicationCommandRoleOption$outboundSchema,
        ApplicationCommandUserOption$outboundSchema,
        ApplicationCommandChannelOption$outboundSchema,
        ApplicationCommandIntegerOption$outboundSchema,
        ApplicationCommandNumberOption$outboundSchema,
        ApplicationCommandStringOption$outboundSchema,
      ]),
    ),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    nameLocalizations: "name_localizations",
    descriptionLocalizations: "description_localizations",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplicationCommandSubcommandOption$ {
  /** @deprecated use `ApplicationCommandSubcommandOption$inboundSchema` instead. */
  export const inboundSchema = ApplicationCommandSubcommandOption$inboundSchema;
  /** @deprecated use `ApplicationCommandSubcommandOption$outboundSchema` instead. */
  export const outboundSchema =
    ApplicationCommandSubcommandOption$outboundSchema;
  /** @deprecated use `ApplicationCommandSubcommandOption$Outbound` instead. */
  export type Outbound = ApplicationCommandSubcommandOption$Outbound;
}

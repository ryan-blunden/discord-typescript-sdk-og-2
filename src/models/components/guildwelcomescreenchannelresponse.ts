/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GuildWelcomeScreenChannelResponse = {
  channelId: string;
  description: string;
  emojiId?: string | null | undefined;
  emojiName?: string | null | undefined;
};

/** @internal */
export const GuildWelcomeScreenChannelResponse$inboundSchema: z.ZodType<
  GuildWelcomeScreenChannelResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel_id: z.string(),
  description: z.string(),
  emoji_id: z.nullable(z.string()).optional(),
  emoji_name: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "channel_id": "channelId",
    "emoji_id": "emojiId",
    "emoji_name": "emojiName",
  });
});

/** @internal */
export type GuildWelcomeScreenChannelResponse$Outbound = {
  channel_id: string;
  description: string;
  emoji_id?: string | null | undefined;
  emoji_name?: string | null | undefined;
};

/** @internal */
export const GuildWelcomeScreenChannelResponse$outboundSchema: z.ZodType<
  GuildWelcomeScreenChannelResponse$Outbound,
  z.ZodTypeDef,
  GuildWelcomeScreenChannelResponse
> = z.object({
  channelId: z.string(),
  description: z.string(),
  emojiId: z.nullable(z.string()).optional(),
  emojiName: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    channelId: "channel_id",
    emojiId: "emoji_id",
    emojiName: "emoji_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GuildWelcomeScreenChannelResponse$ {
  /** @deprecated use `GuildWelcomeScreenChannelResponse$inboundSchema` instead. */
  export const inboundSchema = GuildWelcomeScreenChannelResponse$inboundSchema;
  /** @deprecated use `GuildWelcomeScreenChannelResponse$outboundSchema` instead. */
  export const outboundSchema =
    GuildWelcomeScreenChannelResponse$outboundSchema;
  /** @deprecated use `GuildWelcomeScreenChannelResponse$Outbound` instead. */
  export type Outbound = GuildWelcomeScreenChannelResponse$Outbound;
}

export function guildWelcomeScreenChannelResponseToJSON(
  guildWelcomeScreenChannelResponse: GuildWelcomeScreenChannelResponse,
): string {
  return JSON.stringify(
    GuildWelcomeScreenChannelResponse$outboundSchema.parse(
      guildWelcomeScreenChannelResponse,
    ),
  );
}

export function guildWelcomeScreenChannelResponseFromJSON(
  jsonString: string,
): SafeParseResult<GuildWelcomeScreenChannelResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GuildWelcomeScreenChannelResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GuildWelcomeScreenChannelResponse' from JSON`,
  );
}

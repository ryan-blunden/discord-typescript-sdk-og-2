/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  StickerPackResponse,
  StickerPackResponse$inboundSchema,
  StickerPackResponse$Outbound,
  StickerPackResponse$outboundSchema,
} from "./stickerpackresponse.js";

export type StickerPackCollectionResponse = {
  stickerPacks: Array<StickerPackResponse>;
};

/** @internal */
export const StickerPackCollectionResponse$inboundSchema: z.ZodType<
  StickerPackCollectionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  sticker_packs: z.array(StickerPackResponse$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "sticker_packs": "stickerPacks",
  });
});

/** @internal */
export type StickerPackCollectionResponse$Outbound = {
  sticker_packs: Array<StickerPackResponse$Outbound>;
};

/** @internal */
export const StickerPackCollectionResponse$outboundSchema: z.ZodType<
  StickerPackCollectionResponse$Outbound,
  z.ZodTypeDef,
  StickerPackCollectionResponse
> = z.object({
  stickerPacks: z.array(StickerPackResponse$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    stickerPacks: "sticker_packs",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StickerPackCollectionResponse$ {
  /** @deprecated use `StickerPackCollectionResponse$inboundSchema` instead. */
  export const inboundSchema = StickerPackCollectionResponse$inboundSchema;
  /** @deprecated use `StickerPackCollectionResponse$outboundSchema` instead. */
  export const outboundSchema = StickerPackCollectionResponse$outboundSchema;
  /** @deprecated use `StickerPackCollectionResponse$Outbound` instead. */
  export type Outbound = StickerPackCollectionResponse$Outbound;
}

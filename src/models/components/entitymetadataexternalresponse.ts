/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type EntityMetadataExternalResponse = {
  location: string;
};

/** @internal */
export const EntityMetadataExternalResponse$inboundSchema: z.ZodType<
  EntityMetadataExternalResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  location: z.string(),
});

/** @internal */
export type EntityMetadataExternalResponse$Outbound = {
  location: string;
};

/** @internal */
export const EntityMetadataExternalResponse$outboundSchema: z.ZodType<
  EntityMetadataExternalResponse$Outbound,
  z.ZodTypeDef,
  EntityMetadataExternalResponse
> = z.object({
  location: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntityMetadataExternalResponse$ {
  /** @deprecated use `EntityMetadataExternalResponse$inboundSchema` instead. */
  export const inboundSchema = EntityMetadataExternalResponse$inboundSchema;
  /** @deprecated use `EntityMetadataExternalResponse$outboundSchema` instead. */
  export const outboundSchema = EntityMetadataExternalResponse$outboundSchema;
  /** @deprecated use `EntityMetadataExternalResponse$Outbound` instead. */
  export type Outbound = EntityMetadataExternalResponse$Outbound;
}

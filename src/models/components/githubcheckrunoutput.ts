/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type GithubCheckRunOutput = {
  title?: string | null | undefined;
  summary?: string | null | undefined;
};

/** @internal */
export const GithubCheckRunOutput$inboundSchema: z.ZodType<
  GithubCheckRunOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  title: z.nullable(z.string()).optional(),
  summary: z.nullable(z.string()).optional(),
});

/** @internal */
export type GithubCheckRunOutput$Outbound = {
  title?: string | null | undefined;
  summary?: string | null | undefined;
};

/** @internal */
export const GithubCheckRunOutput$outboundSchema: z.ZodType<
  GithubCheckRunOutput$Outbound,
  z.ZodTypeDef,
  GithubCheckRunOutput
> = z.object({
  title: z.nullable(z.string()).optional(),
  summary: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GithubCheckRunOutput$ {
  /** @deprecated use `GithubCheckRunOutput$inboundSchema` instead. */
  export const inboundSchema = GithubCheckRunOutput$inboundSchema;
  /** @deprecated use `GithubCheckRunOutput$outboundSchema` instead. */
  export const outboundSchema = GithubCheckRunOutput$outboundSchema;
  /** @deprecated use `GithubCheckRunOutput$Outbound` instead. */
  export type Outbound = GithubCheckRunOutput$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ConfettiPotionCreateRequest = {};

/** @internal */
export const ConfettiPotionCreateRequest$inboundSchema: z.ZodType<
  ConfettiPotionCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ConfettiPotionCreateRequest$Outbound = {};

/** @internal */
export const ConfettiPotionCreateRequest$outboundSchema: z.ZodType<
  ConfettiPotionCreateRequest$Outbound,
  z.ZodTypeDef,
  ConfettiPotionCreateRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConfettiPotionCreateRequest$ {
  /** @deprecated use `ConfettiPotionCreateRequest$inboundSchema` instead. */
  export const inboundSchema = ConfettiPotionCreateRequest$inboundSchema;
  /** @deprecated use `ConfettiPotionCreateRequest$outboundSchema` instead. */
  export const outboundSchema = ConfettiPotionCreateRequest$outboundSchema;
  /** @deprecated use `ConfettiPotionCreateRequest$Outbound` instead. */
  export type Outbound = ConfettiPotionCreateRequest$Outbound;
}

export function confettiPotionCreateRequestToJSON(
  confettiPotionCreateRequest: ConfettiPotionCreateRequest,
): string {
  return JSON.stringify(
    ConfettiPotionCreateRequest$outboundSchema.parse(
      confettiPotionCreateRequest,
    ),
  );
}

export function confettiPotionCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<ConfettiPotionCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ConfettiPotionCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ConfettiPotionCreateRequest' from JSON`,
  );
}

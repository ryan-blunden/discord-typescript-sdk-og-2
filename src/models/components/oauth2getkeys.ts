/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  OAuth2Key,
  OAuth2Key$inboundSchema,
  OAuth2Key$Outbound,
  OAuth2Key$outboundSchema,
} from "./oauth2key.js";

export type OAuth2GetKeys = {
  keys: Array<OAuth2Key>;
};

/** @internal */
export const OAuth2GetKeys$inboundSchema: z.ZodType<
  OAuth2GetKeys,
  z.ZodTypeDef,
  unknown
> = z.object({
  keys: z.array(OAuth2Key$inboundSchema),
});

/** @internal */
export type OAuth2GetKeys$Outbound = {
  keys: Array<OAuth2Key$Outbound>;
};

/** @internal */
export const OAuth2GetKeys$outboundSchema: z.ZodType<
  OAuth2GetKeys$Outbound,
  z.ZodTypeDef,
  OAuth2GetKeys
> = z.object({
  keys: z.array(OAuth2Key$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OAuth2GetKeys$ {
  /** @deprecated use `OAuth2GetKeys$inboundSchema` instead. */
  export const inboundSchema = OAuth2GetKeys$inboundSchema;
  /** @deprecated use `OAuth2GetKeys$outboundSchema` instead. */
  export const outboundSchema = OAuth2GetKeys$outboundSchema;
  /** @deprecated use `OAuth2GetKeys$Outbound` instead. */
  export type Outbound = OAuth2GetKeys$Outbound;
}

export function oAuth2GetKeysToJSON(oAuth2GetKeys: OAuth2GetKeys): string {
  return JSON.stringify(OAuth2GetKeys$outboundSchema.parse(oAuth2GetKeys));
}

export function oAuth2GetKeysFromJSON(
  jsonString: string,
): SafeParseResult<OAuth2GetKeys, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OAuth2GetKeys$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OAuth2GetKeys' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EntityMetadataStageInstance = {};

/** @internal */
export const EntityMetadataStageInstance$inboundSchema: z.ZodType<
  EntityMetadataStageInstance,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type EntityMetadataStageInstance$Outbound = {};

/** @internal */
export const EntityMetadataStageInstance$outboundSchema: z.ZodType<
  EntityMetadataStageInstance$Outbound,
  z.ZodTypeDef,
  EntityMetadataStageInstance
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EntityMetadataStageInstance$ {
  /** @deprecated use `EntityMetadataStageInstance$inboundSchema` instead. */
  export const inboundSchema = EntityMetadataStageInstance$inboundSchema;
  /** @deprecated use `EntityMetadataStageInstance$outboundSchema` instead. */
  export const outboundSchema = EntityMetadataStageInstance$outboundSchema;
  /** @deprecated use `EntityMetadataStageInstance$Outbound` instead. */
  export type Outbound = EntityMetadataStageInstance$Outbound;
}

export function entityMetadataStageInstanceToJSON(
  entityMetadataStageInstance: EntityMetadataStageInstance,
): string {
  return JSON.stringify(
    EntityMetadataStageInstance$outboundSchema.parse(
      entityMetadataStageInstance,
    ),
  );
}

export function entityMetadataStageInstanceFromJSON(
  jsonString: string,
): SafeParseResult<EntityMetadataStageInstance, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EntityMetadataStageInstance$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EntityMetadataStageInstance' from JSON`,
  );
}

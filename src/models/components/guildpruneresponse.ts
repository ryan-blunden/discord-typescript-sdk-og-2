/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GuildPruneResponse = {
  pruned?: number | null | undefined;
};

/** @internal */
export const GuildPruneResponse$inboundSchema: z.ZodType<
  GuildPruneResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  pruned: z.nullable(z.number().int()).optional(),
});

/** @internal */
export type GuildPruneResponse$Outbound = {
  pruned?: number | null | undefined;
};

/** @internal */
export const GuildPruneResponse$outboundSchema: z.ZodType<
  GuildPruneResponse$Outbound,
  z.ZodTypeDef,
  GuildPruneResponse
> = z.object({
  pruned: z.nullable(z.number().int()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GuildPruneResponse$ {
  /** @deprecated use `GuildPruneResponse$inboundSchema` instead. */
  export const inboundSchema = GuildPruneResponse$inboundSchema;
  /** @deprecated use `GuildPruneResponse$outboundSchema` instead. */
  export const outboundSchema = GuildPruneResponse$outboundSchema;
  /** @deprecated use `GuildPruneResponse$Outbound` instead. */
  export type Outbound = GuildPruneResponse$Outbound;
}

export function guildPruneResponseToJSON(
  guildPruneResponse: GuildPruneResponse,
): string {
  return JSON.stringify(
    GuildPruneResponse$outboundSchema.parse(guildPruneResponse),
  );
}

export function guildPruneResponseFromJSON(
  jsonString: string,
): SafeParseResult<GuildPruneResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GuildPruneResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GuildPruneResponse' from JSON`,
  );
}

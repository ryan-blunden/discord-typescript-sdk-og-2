/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AccountResponse,
  AccountResponse$inboundSchema,
  AccountResponse$Outbound,
  AccountResponse$outboundSchema,
} from "./accountresponse.js";

export type PartialGuildSubscriptionIntegrationResponse = {
  id: string;
  type?: "discord" | undefined;
  name?: string | null | undefined;
  account?: AccountResponse | null | undefined;
};

/** @internal */
export const PartialGuildSubscriptionIntegrationResponse$inboundSchema:
  z.ZodType<
    PartialGuildSubscriptionIntegrationResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
    type: z.literal("discord").optional(),
    name: z.nullable(z.string()).optional(),
    account: z.nullable(AccountResponse$inboundSchema).optional(),
  });

/** @internal */
export type PartialGuildSubscriptionIntegrationResponse$Outbound = {
  id: string;
  type: "discord";
  name?: string | null | undefined;
  account?: AccountResponse$Outbound | null | undefined;
};

/** @internal */
export const PartialGuildSubscriptionIntegrationResponse$outboundSchema:
  z.ZodType<
    PartialGuildSubscriptionIntegrationResponse$Outbound,
    z.ZodTypeDef,
    PartialGuildSubscriptionIntegrationResponse
  > = z.object({
    id: z.string(),
    type: z.literal("discord").default("discord" as const),
    name: z.nullable(z.string()).optional(),
    account: z.nullable(AccountResponse$outboundSchema).optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PartialGuildSubscriptionIntegrationResponse$ {
  /** @deprecated use `PartialGuildSubscriptionIntegrationResponse$inboundSchema` instead. */
  export const inboundSchema =
    PartialGuildSubscriptionIntegrationResponse$inboundSchema;
  /** @deprecated use `PartialGuildSubscriptionIntegrationResponse$outboundSchema` instead. */
  export const outboundSchema =
    PartialGuildSubscriptionIntegrationResponse$outboundSchema;
  /** @deprecated use `PartialGuildSubscriptionIntegrationResponse$Outbound` instead. */
  export type Outbound = PartialGuildSubscriptionIntegrationResponse$Outbound;
}

export function partialGuildSubscriptionIntegrationResponseToJSON(
  partialGuildSubscriptionIntegrationResponse:
    PartialGuildSubscriptionIntegrationResponse,
): string {
  return JSON.stringify(
    PartialGuildSubscriptionIntegrationResponse$outboundSchema.parse(
      partialGuildSubscriptionIntegrationResponse,
    ),
  );
}

export function partialGuildSubscriptionIntegrationResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  PartialGuildSubscriptionIntegrationResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PartialGuildSubscriptionIntegrationResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'PartialGuildSubscriptionIntegrationResponse' from JSON`,
  );
}

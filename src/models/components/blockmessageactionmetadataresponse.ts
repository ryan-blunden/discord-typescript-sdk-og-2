/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type BlockMessageActionMetadataResponse = {
  customMessage?: string | null | undefined;
};

/** @internal */
export const BlockMessageActionMetadataResponse$inboundSchema: z.ZodType<
  BlockMessageActionMetadataResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  custom_message: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "custom_message": "customMessage",
  });
});

/** @internal */
export type BlockMessageActionMetadataResponse$Outbound = {
  custom_message?: string | null | undefined;
};

/** @internal */
export const BlockMessageActionMetadataResponse$outboundSchema: z.ZodType<
  BlockMessageActionMetadataResponse$Outbound,
  z.ZodTypeDef,
  BlockMessageActionMetadataResponse
> = z.object({
  customMessage: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    customMessage: "custom_message",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BlockMessageActionMetadataResponse$ {
  /** @deprecated use `BlockMessageActionMetadataResponse$inboundSchema` instead. */
  export const inboundSchema = BlockMessageActionMetadataResponse$inboundSchema;
  /** @deprecated use `BlockMessageActionMetadataResponse$outboundSchema` instead. */
  export const outboundSchema =
    BlockMessageActionMetadataResponse$outboundSchema;
  /** @deprecated use `BlockMessageActionMetadataResponse$Outbound` instead. */
  export type Outbound = BlockMessageActionMetadataResponse$Outbound;
}

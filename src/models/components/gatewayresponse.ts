/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type GatewayResponse = {
  url: string;
};

/** @internal */
export const GatewayResponse$inboundSchema: z.ZodType<
  GatewayResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string(),
});

/** @internal */
export type GatewayResponse$Outbound = {
  url: string;
};

/** @internal */
export const GatewayResponse$outboundSchema: z.ZodType<
  GatewayResponse$Outbound,
  z.ZodTypeDef,
  GatewayResponse
> = z.object({
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GatewayResponse$ {
  /** @deprecated use `GatewayResponse$inboundSchema` instead. */
  export const inboundSchema = GatewayResponse$inboundSchema;
  /** @deprecated use `GatewayResponse$outboundSchema` instead. */
  export const outboundSchema = GatewayResponse$outboundSchema;
  /** @deprecated use `GatewayResponse$Outbound` instead. */
  export type Outbound = GatewayResponse$Outbound;
}

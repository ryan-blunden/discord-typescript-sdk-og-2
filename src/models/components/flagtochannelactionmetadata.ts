/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type FlagToChannelActionMetadata = {
  channelId: string;
};

/** @internal */
export const FlagToChannelActionMetadata$inboundSchema: z.ZodType<
  FlagToChannelActionMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "channel_id": "channelId",
  });
});

/** @internal */
export type FlagToChannelActionMetadata$Outbound = {
  channel_id: string;
};

/** @internal */
export const FlagToChannelActionMetadata$outboundSchema: z.ZodType<
  FlagToChannelActionMetadata$Outbound,
  z.ZodTypeDef,
  FlagToChannelActionMetadata
> = z.object({
  channelId: z.string(),
}).transform((v) => {
  return remap$(v, {
    channelId: "channel_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FlagToChannelActionMetadata$ {
  /** @deprecated use `FlagToChannelActionMetadata$inboundSchema` instead. */
  export const inboundSchema = FlagToChannelActionMetadata$inboundSchema;
  /** @deprecated use `FlagToChannelActionMetadata$outboundSchema` instead. */
  export const outboundSchema = FlagToChannelActionMetadata$outboundSchema;
  /** @deprecated use `FlagToChannelActionMetadata$Outbound` instead. */
  export type Outbound = FlagToChannelActionMetadata$Outbound;
}

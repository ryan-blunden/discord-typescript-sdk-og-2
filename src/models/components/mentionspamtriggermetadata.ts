/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type MentionSpamTriggerMetadata = {
  mentionTotalLimit: number;
  mentionRaidProtectionEnabled?: boolean | null | undefined;
};

/** @internal */
export const MentionSpamTriggerMetadata$inboundSchema: z.ZodType<
  MentionSpamTriggerMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  mention_total_limit: z.number().int(),
  mention_raid_protection_enabled: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    "mention_total_limit": "mentionTotalLimit",
    "mention_raid_protection_enabled": "mentionRaidProtectionEnabled",
  });
});

/** @internal */
export type MentionSpamTriggerMetadata$Outbound = {
  mention_total_limit: number;
  mention_raid_protection_enabled?: boolean | null | undefined;
};

/** @internal */
export const MentionSpamTriggerMetadata$outboundSchema: z.ZodType<
  MentionSpamTriggerMetadata$Outbound,
  z.ZodTypeDef,
  MentionSpamTriggerMetadata
> = z.object({
  mentionTotalLimit: z.number().int(),
  mentionRaidProtectionEnabled: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    mentionTotalLimit: "mention_total_limit",
    mentionRaidProtectionEnabled: "mention_raid_protection_enabled",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MentionSpamTriggerMetadata$ {
  /** @deprecated use `MentionSpamTriggerMetadata$inboundSchema` instead. */
  export const inboundSchema = MentionSpamTriggerMetadata$inboundSchema;
  /** @deprecated use `MentionSpamTriggerMetadata$outboundSchema` instead. */
  export const outboundSchema = MentionSpamTriggerMetadata$outboundSchema;
  /** @deprecated use `MentionSpamTriggerMetadata$Outbound` instead. */
  export type Outbound = MentionSpamTriggerMetadata$Outbound;
}

export function mentionSpamTriggerMetadataToJSON(
  mentionSpamTriggerMetadata: MentionSpamTriggerMetadata,
): string {
  return JSON.stringify(
    MentionSpamTriggerMetadata$outboundSchema.parse(mentionSpamTriggerMetadata),
  );
}

export function mentionSpamTriggerMetadataFromJSON(
  jsonString: string,
): SafeParseResult<MentionSpamTriggerMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MentionSpamTriggerMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MentionSpamTriggerMetadata' from JSON`,
  );
}

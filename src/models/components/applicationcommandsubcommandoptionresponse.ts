/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  ApplicationCommandAttachmentOptionResponse,
  ApplicationCommandAttachmentOptionResponse$inboundSchema,
  ApplicationCommandAttachmentOptionResponse$Outbound,
  ApplicationCommandAttachmentOptionResponse$outboundSchema,
} from "./applicationcommandattachmentoptionresponse.js";
import {
  ApplicationCommandBooleanOptionResponse,
  ApplicationCommandBooleanOptionResponse$inboundSchema,
  ApplicationCommandBooleanOptionResponse$Outbound,
  ApplicationCommandBooleanOptionResponse$outboundSchema,
} from "./applicationcommandbooleanoptionresponse.js";
import {
  ApplicationCommandChannelOptionResponse,
  ApplicationCommandChannelOptionResponse$inboundSchema,
  ApplicationCommandChannelOptionResponse$Outbound,
  ApplicationCommandChannelOptionResponse$outboundSchema,
} from "./applicationcommandchanneloptionresponse.js";
import {
  ApplicationCommandIntegerOptionResponse,
  ApplicationCommandIntegerOptionResponse$inboundSchema,
  ApplicationCommandIntegerOptionResponse$Outbound,
  ApplicationCommandIntegerOptionResponse$outboundSchema,
} from "./applicationcommandintegeroptionresponse.js";
import {
  ApplicationCommandMentionableOptionResponse,
  ApplicationCommandMentionableOptionResponse$inboundSchema,
  ApplicationCommandMentionableOptionResponse$Outbound,
  ApplicationCommandMentionableOptionResponse$outboundSchema,
} from "./applicationcommandmentionableoptionresponse.js";
import {
  ApplicationCommandNumberOptionResponse,
  ApplicationCommandNumberOptionResponse$inboundSchema,
  ApplicationCommandNumberOptionResponse$Outbound,
  ApplicationCommandNumberOptionResponse$outboundSchema,
} from "./applicationcommandnumberoptionresponse.js";
import {
  ApplicationCommandRoleOptionResponse,
  ApplicationCommandRoleOptionResponse$inboundSchema,
  ApplicationCommandRoleOptionResponse$Outbound,
  ApplicationCommandRoleOptionResponse$outboundSchema,
} from "./applicationcommandroleoptionresponse.js";
import {
  ApplicationCommandStringOptionResponse,
  ApplicationCommandStringOptionResponse$inboundSchema,
  ApplicationCommandStringOptionResponse$Outbound,
  ApplicationCommandStringOptionResponse$outboundSchema,
} from "./applicationcommandstringoptionresponse.js";
import {
  ApplicationCommandUserOptionResponse,
  ApplicationCommandUserOptionResponse$inboundSchema,
  ApplicationCommandUserOptionResponse$Outbound,
  ApplicationCommandUserOptionResponse$outboundSchema,
} from "./applicationcommanduseroptionresponse.js";

export type Options =
  | ApplicationCommandAttachmentOptionResponse
  | ApplicationCommandBooleanOptionResponse
  | ApplicationCommandMentionableOptionResponse
  | ApplicationCommandRoleOptionResponse
  | ApplicationCommandUserOptionResponse
  | ApplicationCommandChannelOptionResponse
  | ApplicationCommandIntegerOptionResponse
  | ApplicationCommandNumberOptionResponse
  | ApplicationCommandStringOptionResponse;

export type ApplicationCommandSubcommandOptionResponse = {
  type?: 1 | undefined;
  name: string;
  nameLocalized?: string | null | undefined;
  nameLocalizations?: { [k: string]: string } | null | undefined;
  description: string;
  descriptionLocalized?: string | null | undefined;
  descriptionLocalizations?: { [k: string]: string } | null | undefined;
  required?: boolean | null | undefined;
  options?:
    | Array<
      | ApplicationCommandAttachmentOptionResponse
      | ApplicationCommandBooleanOptionResponse
      | ApplicationCommandMentionableOptionResponse
      | ApplicationCommandRoleOptionResponse
      | ApplicationCommandUserOptionResponse
      | ApplicationCommandChannelOptionResponse
      | ApplicationCommandIntegerOptionResponse
      | ApplicationCommandNumberOptionResponse
      | ApplicationCommandStringOptionResponse
    >
    | null
    | undefined;
};

/** @internal */
export const Options$inboundSchema: z.ZodType<Options, z.ZodTypeDef, unknown> =
  z.union([
    ApplicationCommandAttachmentOptionResponse$inboundSchema,
    ApplicationCommandBooleanOptionResponse$inboundSchema,
    ApplicationCommandMentionableOptionResponse$inboundSchema,
    ApplicationCommandRoleOptionResponse$inboundSchema,
    ApplicationCommandUserOptionResponse$inboundSchema,
    ApplicationCommandChannelOptionResponse$inboundSchema,
    ApplicationCommandIntegerOptionResponse$inboundSchema,
    ApplicationCommandNumberOptionResponse$inboundSchema,
    ApplicationCommandStringOptionResponse$inboundSchema,
  ]);

/** @internal */
export type Options$Outbound =
  | ApplicationCommandAttachmentOptionResponse$Outbound
  | ApplicationCommandBooleanOptionResponse$Outbound
  | ApplicationCommandMentionableOptionResponse$Outbound
  | ApplicationCommandRoleOptionResponse$Outbound
  | ApplicationCommandUserOptionResponse$Outbound
  | ApplicationCommandChannelOptionResponse$Outbound
  | ApplicationCommandIntegerOptionResponse$Outbound
  | ApplicationCommandNumberOptionResponse$Outbound
  | ApplicationCommandStringOptionResponse$Outbound;

/** @internal */
export const Options$outboundSchema: z.ZodType<
  Options$Outbound,
  z.ZodTypeDef,
  Options
> = z.union([
  ApplicationCommandAttachmentOptionResponse$outboundSchema,
  ApplicationCommandBooleanOptionResponse$outboundSchema,
  ApplicationCommandMentionableOptionResponse$outboundSchema,
  ApplicationCommandRoleOptionResponse$outboundSchema,
  ApplicationCommandUserOptionResponse$outboundSchema,
  ApplicationCommandChannelOptionResponse$outboundSchema,
  ApplicationCommandIntegerOptionResponse$outboundSchema,
  ApplicationCommandNumberOptionResponse$outboundSchema,
  ApplicationCommandStringOptionResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Options$ {
  /** @deprecated use `Options$inboundSchema` instead. */
  export const inboundSchema = Options$inboundSchema;
  /** @deprecated use `Options$outboundSchema` instead. */
  export const outboundSchema = Options$outboundSchema;
  /** @deprecated use `Options$Outbound` instead. */
  export type Outbound = Options$Outbound;
}

/** @internal */
export const ApplicationCommandSubcommandOptionResponse$inboundSchema:
  z.ZodType<ApplicationCommandSubcommandOptionResponse, z.ZodTypeDef, unknown> =
    z.object({
      type: z.literal(1).optional(),
      name: z.string(),
      name_localized: z.nullable(z.string()).optional(),
      name_localizations: z.nullable(z.record(z.string())).optional(),
      description: z.string(),
      description_localized: z.nullable(z.string()).optional(),
      description_localizations: z.nullable(z.record(z.string())).optional(),
      required: z.nullable(z.boolean()).optional(),
      options: z.nullable(
        z.array(
          z.union([
            ApplicationCommandAttachmentOptionResponse$inboundSchema,
            ApplicationCommandBooleanOptionResponse$inboundSchema,
            ApplicationCommandMentionableOptionResponse$inboundSchema,
            ApplicationCommandRoleOptionResponse$inboundSchema,
            ApplicationCommandUserOptionResponse$inboundSchema,
            ApplicationCommandChannelOptionResponse$inboundSchema,
            ApplicationCommandIntegerOptionResponse$inboundSchema,
            ApplicationCommandNumberOptionResponse$inboundSchema,
            ApplicationCommandStringOptionResponse$inboundSchema,
          ]),
        ),
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "name_localized": "nameLocalized",
        "name_localizations": "nameLocalizations",
        "description_localized": "descriptionLocalized",
        "description_localizations": "descriptionLocalizations",
      });
    });

/** @internal */
export type ApplicationCommandSubcommandOptionResponse$Outbound = {
  type: 1;
  name: string;
  name_localized?: string | null | undefined;
  name_localizations?: { [k: string]: string } | null | undefined;
  description: string;
  description_localized?: string | null | undefined;
  description_localizations?: { [k: string]: string } | null | undefined;
  required?: boolean | null | undefined;
  options?:
    | Array<
      | ApplicationCommandAttachmentOptionResponse$Outbound
      | ApplicationCommandBooleanOptionResponse$Outbound
      | ApplicationCommandMentionableOptionResponse$Outbound
      | ApplicationCommandRoleOptionResponse$Outbound
      | ApplicationCommandUserOptionResponse$Outbound
      | ApplicationCommandChannelOptionResponse$Outbound
      | ApplicationCommandIntegerOptionResponse$Outbound
      | ApplicationCommandNumberOptionResponse$Outbound
      | ApplicationCommandStringOptionResponse$Outbound
    >
    | null
    | undefined;
};

/** @internal */
export const ApplicationCommandSubcommandOptionResponse$outboundSchema:
  z.ZodType<
    ApplicationCommandSubcommandOptionResponse$Outbound,
    z.ZodTypeDef,
    ApplicationCommandSubcommandOptionResponse
  > = z.object({
    type: z.literal(1).default(1 as const),
    name: z.string(),
    nameLocalized: z.nullable(z.string()).optional(),
    nameLocalizations: z.nullable(z.record(z.string())).optional(),
    description: z.string(),
    descriptionLocalized: z.nullable(z.string()).optional(),
    descriptionLocalizations: z.nullable(z.record(z.string())).optional(),
    required: z.nullable(z.boolean()).optional(),
    options: z.nullable(
      z.array(
        z.union([
          ApplicationCommandAttachmentOptionResponse$outboundSchema,
          ApplicationCommandBooleanOptionResponse$outboundSchema,
          ApplicationCommandMentionableOptionResponse$outboundSchema,
          ApplicationCommandRoleOptionResponse$outboundSchema,
          ApplicationCommandUserOptionResponse$outboundSchema,
          ApplicationCommandChannelOptionResponse$outboundSchema,
          ApplicationCommandIntegerOptionResponse$outboundSchema,
          ApplicationCommandNumberOptionResponse$outboundSchema,
          ApplicationCommandStringOptionResponse$outboundSchema,
        ]),
      ),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      nameLocalized: "name_localized",
      nameLocalizations: "name_localizations",
      descriptionLocalized: "description_localized",
      descriptionLocalizations: "description_localizations",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplicationCommandSubcommandOptionResponse$ {
  /** @deprecated use `ApplicationCommandSubcommandOptionResponse$inboundSchema` instead. */
  export const inboundSchema =
    ApplicationCommandSubcommandOptionResponse$inboundSchema;
  /** @deprecated use `ApplicationCommandSubcommandOptionResponse$outboundSchema` instead. */
  export const outboundSchema =
    ApplicationCommandSubcommandOptionResponse$outboundSchema;
  /** @deprecated use `ApplicationCommandSubcommandOptionResponse$Outbound` instead. */
  export type Outbound = ApplicationCommandSubcommandOptionResponse$Outbound;
}

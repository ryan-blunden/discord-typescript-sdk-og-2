/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ButtonComponentResponse,
  ButtonComponentResponse$inboundSchema,
  ButtonComponentResponse$Outbound,
  ButtonComponentResponse$outboundSchema,
} from "./buttoncomponentresponse.js";
import {
  ChannelSelectComponentResponse,
  ChannelSelectComponentResponse$inboundSchema,
  ChannelSelectComponentResponse$Outbound,
  ChannelSelectComponentResponse$outboundSchema,
} from "./channelselectcomponentresponse.js";
import {
  MentionableSelectComponentResponse,
  MentionableSelectComponentResponse$inboundSchema,
  MentionableSelectComponentResponse$Outbound,
  MentionableSelectComponentResponse$outboundSchema,
} from "./mentionableselectcomponentresponse.js";
import {
  RoleSelectComponentResponse,
  RoleSelectComponentResponse$inboundSchema,
  RoleSelectComponentResponse$Outbound,
  RoleSelectComponentResponse$outboundSchema,
} from "./roleselectcomponentresponse.js";
import {
  StringSelectComponentResponse,
  StringSelectComponentResponse$inboundSchema,
  StringSelectComponentResponse$Outbound,
  StringSelectComponentResponse$outboundSchema,
} from "./stringselectcomponentresponse.js";
import {
  TextInputComponentResponse,
  TextInputComponentResponse$inboundSchema,
  TextInputComponentResponse$Outbound,
  TextInputComponentResponse$outboundSchema,
} from "./textinputcomponentresponse.js";
import {
  UserSelectComponentResponse,
  UserSelectComponentResponse$inboundSchema,
  UserSelectComponentResponse$Outbound,
  UserSelectComponentResponse$outboundSchema,
} from "./userselectcomponentresponse.js";

export type Components =
  | MentionableSelectComponentResponse
  | RoleSelectComponentResponse
  | StringSelectComponentResponse
  | UserSelectComponentResponse
  | ButtonComponentResponse
  | ChannelSelectComponentResponse
  | TextInputComponentResponse;

export type ActionRowComponentResponse = {
  type?: 1 | undefined;
  id: number;
  components?:
    | Array<
      | MentionableSelectComponentResponse
      | RoleSelectComponentResponse
      | StringSelectComponentResponse
      | UserSelectComponentResponse
      | ButtonComponentResponse
      | ChannelSelectComponentResponse
      | TextInputComponentResponse
    >
    | null
    | undefined;
};

/** @internal */
export const Components$inboundSchema: z.ZodType<
  Components,
  z.ZodTypeDef,
  unknown
> = z.union([
  MentionableSelectComponentResponse$inboundSchema,
  RoleSelectComponentResponse$inboundSchema,
  StringSelectComponentResponse$inboundSchema,
  UserSelectComponentResponse$inboundSchema,
  ButtonComponentResponse$inboundSchema,
  ChannelSelectComponentResponse$inboundSchema,
  TextInputComponentResponse$inboundSchema,
]);

/** @internal */
export type Components$Outbound =
  | MentionableSelectComponentResponse$Outbound
  | RoleSelectComponentResponse$Outbound
  | StringSelectComponentResponse$Outbound
  | UserSelectComponentResponse$Outbound
  | ButtonComponentResponse$Outbound
  | ChannelSelectComponentResponse$Outbound
  | TextInputComponentResponse$Outbound;

/** @internal */
export const Components$outboundSchema: z.ZodType<
  Components$Outbound,
  z.ZodTypeDef,
  Components
> = z.union([
  MentionableSelectComponentResponse$outboundSchema,
  RoleSelectComponentResponse$outboundSchema,
  StringSelectComponentResponse$outboundSchema,
  UserSelectComponentResponse$outboundSchema,
  ButtonComponentResponse$outboundSchema,
  ChannelSelectComponentResponse$outboundSchema,
  TextInputComponentResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Components$ {
  /** @deprecated use `Components$inboundSchema` instead. */
  export const inboundSchema = Components$inboundSchema;
  /** @deprecated use `Components$outboundSchema` instead. */
  export const outboundSchema = Components$outboundSchema;
  /** @deprecated use `Components$Outbound` instead. */
  export type Outbound = Components$Outbound;
}

export function componentsToJSON(components: Components): string {
  return JSON.stringify(Components$outboundSchema.parse(components));
}

export function componentsFromJSON(
  jsonString: string,
): SafeParseResult<Components, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Components$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Components' from JSON`,
  );
}

/** @internal */
export const ActionRowComponentResponse$inboundSchema: z.ZodType<
  ActionRowComponentResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal(1).optional(),
  id: z.number().int(),
  components: z.nullable(
    z.array(
      z.union([
        MentionableSelectComponentResponse$inboundSchema,
        RoleSelectComponentResponse$inboundSchema,
        StringSelectComponentResponse$inboundSchema,
        UserSelectComponentResponse$inboundSchema,
        ButtonComponentResponse$inboundSchema,
        ChannelSelectComponentResponse$inboundSchema,
        TextInputComponentResponse$inboundSchema,
      ]),
    ),
  ).optional(),
});

/** @internal */
export type ActionRowComponentResponse$Outbound = {
  type: 1;
  id: number;
  components?:
    | Array<
      | MentionableSelectComponentResponse$Outbound
      | RoleSelectComponentResponse$Outbound
      | StringSelectComponentResponse$Outbound
      | UserSelectComponentResponse$Outbound
      | ButtonComponentResponse$Outbound
      | ChannelSelectComponentResponse$Outbound
      | TextInputComponentResponse$Outbound
    >
    | null
    | undefined;
};

/** @internal */
export const ActionRowComponentResponse$outboundSchema: z.ZodType<
  ActionRowComponentResponse$Outbound,
  z.ZodTypeDef,
  ActionRowComponentResponse
> = z.object({
  type: z.literal(1).default(1 as const),
  id: z.number().int(),
  components: z.nullable(
    z.array(
      z.union([
        MentionableSelectComponentResponse$outboundSchema,
        RoleSelectComponentResponse$outboundSchema,
        StringSelectComponentResponse$outboundSchema,
        UserSelectComponentResponse$outboundSchema,
        ButtonComponentResponse$outboundSchema,
        ChannelSelectComponentResponse$outboundSchema,
        TextInputComponentResponse$outboundSchema,
      ]),
    ),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActionRowComponentResponse$ {
  /** @deprecated use `ActionRowComponentResponse$inboundSchema` instead. */
  export const inboundSchema = ActionRowComponentResponse$inboundSchema;
  /** @deprecated use `ActionRowComponentResponse$outboundSchema` instead. */
  export const outboundSchema = ActionRowComponentResponse$outboundSchema;
  /** @deprecated use `ActionRowComponentResponse$Outbound` instead. */
  export type Outbound = ActionRowComponentResponse$Outbound;
}

export function actionRowComponentResponseToJSON(
  actionRowComponentResponse: ActionRowComponentResponse,
): string {
  return JSON.stringify(
    ActionRowComponentResponse$outboundSchema.parse(actionRowComponentResponse),
  );
}

export function actionRowComponentResponseFromJSON(
  jsonString: string,
): SafeParseResult<ActionRowComponentResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ActionRowComponentResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ActionRowComponentResponse' from JSON`,
  );
}

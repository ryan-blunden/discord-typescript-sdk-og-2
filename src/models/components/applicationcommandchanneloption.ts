/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ApplicationCommandChannelOption = {
  type?: 1 | undefined;
  name: string;
  nameLocalizations?: { [k: string]: string } | null | undefined;
  description: string;
  descriptionLocalizations?: { [k: string]: string } | null | undefined;
  required?: boolean | null | undefined;
  channelTypes?: Array<number> | null | undefined;
};

/** @internal */
export const ApplicationCommandChannelOption$inboundSchema: z.ZodType<
  ApplicationCommandChannelOption,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal(1).optional(),
  name: z.string(),
  name_localizations: z.nullable(z.record(z.string())).optional(),
  description: z.string(),
  description_localizations: z.nullable(z.record(z.string())).optional(),
  required: z.nullable(z.boolean()).optional(),
  channel_types: z.nullable(z.array(z.number().int())).optional(),
}).transform((v) => {
  return remap$(v, {
    "name_localizations": "nameLocalizations",
    "description_localizations": "descriptionLocalizations",
    "channel_types": "channelTypes",
  });
});

/** @internal */
export type ApplicationCommandChannelOption$Outbound = {
  type: 1;
  name: string;
  name_localizations?: { [k: string]: string } | null | undefined;
  description: string;
  description_localizations?: { [k: string]: string } | null | undefined;
  required?: boolean | null | undefined;
  channel_types?: Array<number> | null | undefined;
};

/** @internal */
export const ApplicationCommandChannelOption$outboundSchema: z.ZodType<
  ApplicationCommandChannelOption$Outbound,
  z.ZodTypeDef,
  ApplicationCommandChannelOption
> = z.object({
  type: z.literal(1).default(1 as const),
  name: z.string(),
  nameLocalizations: z.nullable(z.record(z.string())).optional(),
  description: z.string(),
  descriptionLocalizations: z.nullable(z.record(z.string())).optional(),
  required: z.nullable(z.boolean()).optional(),
  channelTypes: z.nullable(z.array(z.number().int())).optional(),
}).transform((v) => {
  return remap$(v, {
    nameLocalizations: "name_localizations",
    descriptionLocalizations: "description_localizations",
    channelTypes: "channel_types",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApplicationCommandChannelOption$ {
  /** @deprecated use `ApplicationCommandChannelOption$inboundSchema` instead. */
  export const inboundSchema = ApplicationCommandChannelOption$inboundSchema;
  /** @deprecated use `ApplicationCommandChannelOption$outboundSchema` instead. */
  export const outboundSchema = ApplicationCommandChannelOption$outboundSchema;
  /** @deprecated use `ApplicationCommandChannelOption$Outbound` instead. */
  export type Outbound = ApplicationCommandChannelOption$Outbound;
}

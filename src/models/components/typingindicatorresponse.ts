/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type TypingIndicatorResponse = {};

/** @internal */
export const TypingIndicatorResponse$inboundSchema: z.ZodType<
  TypingIndicatorResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type TypingIndicatorResponse$Outbound = {};

/** @internal */
export const TypingIndicatorResponse$outboundSchema: z.ZodType<
  TypingIndicatorResponse$Outbound,
  z.ZodTypeDef,
  TypingIndicatorResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TypingIndicatorResponse$ {
  /** @deprecated use `TypingIndicatorResponse$inboundSchema` instead. */
  export const inboundSchema = TypingIndicatorResponse$inboundSchema;
  /** @deprecated use `TypingIndicatorResponse$outboundSchema` instead. */
  export const outboundSchema = TypingIndicatorResponse$outboundSchema;
  /** @deprecated use `TypingIndicatorResponse$Outbound` instead. */
  export type Outbound = TypingIndicatorResponse$Outbound;
}

export function typingIndicatorResponseToJSON(
  typingIndicatorResponse: TypingIndicatorResponse,
): string {
  return JSON.stringify(
    TypingIndicatorResponse$outboundSchema.parse(typingIndicatorResponse),
  );
}

export function typingIndicatorResponseFromJSON(
  jsonString: string,
): SafeParseResult<TypingIndicatorResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TypingIndicatorResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TypingIndicatorResponse' from JSON`,
  );
}

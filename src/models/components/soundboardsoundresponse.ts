/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  UserResponse,
  UserResponse$inboundSchema,
  UserResponse$Outbound,
  UserResponse$outboundSchema,
} from "./userresponse.js";

export type SoundboardSoundResponse = {
  name: string;
  soundId: string;
  volume: number;
  emojiId?: string | null | undefined;
  emojiName?: string | null | undefined;
  guildId?: string | null | undefined;
  available: boolean;
  user?: UserResponse | null | undefined;
};

/** @internal */
export const SoundboardSoundResponse$inboundSchema: z.ZodType<
  SoundboardSoundResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  sound_id: z.string(),
  volume: z.number(),
  emoji_id: z.nullable(z.string()).optional(),
  emoji_name: z.nullable(z.string()).optional(),
  guild_id: z.nullable(z.string()).optional(),
  available: z.boolean(),
  user: z.nullable(UserResponse$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "sound_id": "soundId",
    "emoji_id": "emojiId",
    "emoji_name": "emojiName",
    "guild_id": "guildId",
  });
});

/** @internal */
export type SoundboardSoundResponse$Outbound = {
  name: string;
  sound_id: string;
  volume: number;
  emoji_id?: string | null | undefined;
  emoji_name?: string | null | undefined;
  guild_id?: string | null | undefined;
  available: boolean;
  user?: UserResponse$Outbound | null | undefined;
};

/** @internal */
export const SoundboardSoundResponse$outboundSchema: z.ZodType<
  SoundboardSoundResponse$Outbound,
  z.ZodTypeDef,
  SoundboardSoundResponse
> = z.object({
  name: z.string(),
  soundId: z.string(),
  volume: z.number(),
  emojiId: z.nullable(z.string()).optional(),
  emojiName: z.nullable(z.string()).optional(),
  guildId: z.nullable(z.string()).optional(),
  available: z.boolean(),
  user: z.nullable(UserResponse$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    soundId: "sound_id",
    emojiId: "emoji_id",
    emojiName: "emoji_name",
    guildId: "guild_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SoundboardSoundResponse$ {
  /** @deprecated use `SoundboardSoundResponse$inboundSchema` instead. */
  export const inboundSchema = SoundboardSoundResponse$inboundSchema;
  /** @deprecated use `SoundboardSoundResponse$outboundSchema` instead. */
  export const outboundSchema = SoundboardSoundResponse$outboundSchema;
  /** @deprecated use `SoundboardSoundResponse$Outbound` instead. */
  export type Outbound = SoundboardSoundResponse$Outbound;
}

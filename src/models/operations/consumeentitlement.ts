/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ConsumeEntitlementSecurity = {
  botToken?: string | undefined;
};

export type ConsumeEntitlementRequest = {
  applicationId: string;
  entitlementId: string;
};

/** @internal */
export const ConsumeEntitlementSecurity$inboundSchema: z.ZodType<
  ConsumeEntitlementSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  BotToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "BotToken": "botToken",
  });
});

/** @internal */
export type ConsumeEntitlementSecurity$Outbound = {
  BotToken?: string | undefined;
};

/** @internal */
export const ConsumeEntitlementSecurity$outboundSchema: z.ZodType<
  ConsumeEntitlementSecurity$Outbound,
  z.ZodTypeDef,
  ConsumeEntitlementSecurity
> = z.object({
  botToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    botToken: "BotToken",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsumeEntitlementSecurity$ {
  /** @deprecated use `ConsumeEntitlementSecurity$inboundSchema` instead. */
  export const inboundSchema = ConsumeEntitlementSecurity$inboundSchema;
  /** @deprecated use `ConsumeEntitlementSecurity$outboundSchema` instead. */
  export const outboundSchema = ConsumeEntitlementSecurity$outboundSchema;
  /** @deprecated use `ConsumeEntitlementSecurity$Outbound` instead. */
  export type Outbound = ConsumeEntitlementSecurity$Outbound;
}

/** @internal */
export const ConsumeEntitlementRequest$inboundSchema: z.ZodType<
  ConsumeEntitlementRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  application_id: z.string(),
  entitlement_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "application_id": "applicationId",
    "entitlement_id": "entitlementId",
  });
});

/** @internal */
export type ConsumeEntitlementRequest$Outbound = {
  application_id: string;
  entitlement_id: string;
};

/** @internal */
export const ConsumeEntitlementRequest$outboundSchema: z.ZodType<
  ConsumeEntitlementRequest$Outbound,
  z.ZodTypeDef,
  ConsumeEntitlementRequest
> = z.object({
  applicationId: z.string(),
  entitlementId: z.string(),
}).transform((v) => {
  return remap$(v, {
    applicationId: "application_id",
    entitlementId: "entitlement_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConsumeEntitlementRequest$ {
  /** @deprecated use `ConsumeEntitlementRequest$inboundSchema` instead. */
  export const inboundSchema = ConsumeEntitlementRequest$inboundSchema;
  /** @deprecated use `ConsumeEntitlementRequest$outboundSchema` instead. */
  export const outboundSchema = ConsumeEntitlementRequest$outboundSchema;
  /** @deprecated use `ConsumeEntitlementRequest$Outbound` instead. */
  export type Outbound = ConsumeEntitlementRequest$Outbound;
}

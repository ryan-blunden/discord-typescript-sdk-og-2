/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ListGuildIntegrationsRequest = {
  guildId: string;
};

export type ListGuildIntegrationsResponseBody =
  | components.GuildSubscriptionIntegrationResponse
  | components.DiscordIntegrationResponse
  | components.ExternalConnectionIntegrationResponse;

/** @internal */
export const ListGuildIntegrationsRequest$inboundSchema: z.ZodType<
  ListGuildIntegrationsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
  });
});

/** @internal */
export type ListGuildIntegrationsRequest$Outbound = {
  guild_id: string;
};

/** @internal */
export const ListGuildIntegrationsRequest$outboundSchema: z.ZodType<
  ListGuildIntegrationsRequest$Outbound,
  z.ZodTypeDef,
  ListGuildIntegrationsRequest
> = z.object({
  guildId: z.string(),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListGuildIntegrationsRequest$ {
  /** @deprecated use `ListGuildIntegrationsRequest$inboundSchema` instead. */
  export const inboundSchema = ListGuildIntegrationsRequest$inboundSchema;
  /** @deprecated use `ListGuildIntegrationsRequest$outboundSchema` instead. */
  export const outboundSchema = ListGuildIntegrationsRequest$outboundSchema;
  /** @deprecated use `ListGuildIntegrationsRequest$Outbound` instead. */
  export type Outbound = ListGuildIntegrationsRequest$Outbound;
}

export function listGuildIntegrationsRequestToJSON(
  listGuildIntegrationsRequest: ListGuildIntegrationsRequest,
): string {
  return JSON.stringify(
    ListGuildIntegrationsRequest$outboundSchema.parse(
      listGuildIntegrationsRequest,
    ),
  );
}

export function listGuildIntegrationsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ListGuildIntegrationsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListGuildIntegrationsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListGuildIntegrationsRequest' from JSON`,
  );
}

/** @internal */
export const ListGuildIntegrationsResponseBody$inboundSchema: z.ZodType<
  ListGuildIntegrationsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.GuildSubscriptionIntegrationResponse$inboundSchema,
  components.DiscordIntegrationResponse$inboundSchema,
  components.ExternalConnectionIntegrationResponse$inboundSchema,
]);

/** @internal */
export type ListGuildIntegrationsResponseBody$Outbound =
  | components.GuildSubscriptionIntegrationResponse$Outbound
  | components.DiscordIntegrationResponse$Outbound
  | components.ExternalConnectionIntegrationResponse$Outbound;

/** @internal */
export const ListGuildIntegrationsResponseBody$outboundSchema: z.ZodType<
  ListGuildIntegrationsResponseBody$Outbound,
  z.ZodTypeDef,
  ListGuildIntegrationsResponseBody
> = z.union([
  components.GuildSubscriptionIntegrationResponse$outboundSchema,
  components.DiscordIntegrationResponse$outboundSchema,
  components.ExternalConnectionIntegrationResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListGuildIntegrationsResponseBody$ {
  /** @deprecated use `ListGuildIntegrationsResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListGuildIntegrationsResponseBody$inboundSchema;
  /** @deprecated use `ListGuildIntegrationsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    ListGuildIntegrationsResponseBody$outboundSchema;
  /** @deprecated use `ListGuildIntegrationsResponseBody$Outbound` instead. */
  export type Outbound = ListGuildIntegrationsResponseBody$Outbound;
}

export function listGuildIntegrationsResponseBodyToJSON(
  listGuildIntegrationsResponseBody: ListGuildIntegrationsResponseBody,
): string {
  return JSON.stringify(
    ListGuildIntegrationsResponseBody$outboundSchema.parse(
      listGuildIntegrationsResponseBody,
    ),
  );
}

export function listGuildIntegrationsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<ListGuildIntegrationsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListGuildIntegrationsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListGuildIntegrationsResponseBody' from JSON`,
  );
}

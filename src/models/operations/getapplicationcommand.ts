/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GetApplicationCommandSecurity = {
  botToken?: string | undefined;
};

export type GetApplicationCommandRequest = {
  applicationId: string;
  commandId: string;
};

/** @internal */
export const GetApplicationCommandSecurity$inboundSchema: z.ZodType<
  GetApplicationCommandSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  BotToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "BotToken": "botToken",
  });
});

/** @internal */
export type GetApplicationCommandSecurity$Outbound = {
  BotToken?: string | undefined;
};

/** @internal */
export const GetApplicationCommandSecurity$outboundSchema: z.ZodType<
  GetApplicationCommandSecurity$Outbound,
  z.ZodTypeDef,
  GetApplicationCommandSecurity
> = z.object({
  botToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    botToken: "BotToken",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApplicationCommandSecurity$ {
  /** @deprecated use `GetApplicationCommandSecurity$inboundSchema` instead. */
  export const inboundSchema = GetApplicationCommandSecurity$inboundSchema;
  /** @deprecated use `GetApplicationCommandSecurity$outboundSchema` instead. */
  export const outboundSchema = GetApplicationCommandSecurity$outboundSchema;
  /** @deprecated use `GetApplicationCommandSecurity$Outbound` instead. */
  export type Outbound = GetApplicationCommandSecurity$Outbound;
}

/** @internal */
export const GetApplicationCommandRequest$inboundSchema: z.ZodType<
  GetApplicationCommandRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  application_id: z.string(),
  command_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "application_id": "applicationId",
    "command_id": "commandId",
  });
});

/** @internal */
export type GetApplicationCommandRequest$Outbound = {
  application_id: string;
  command_id: string;
};

/** @internal */
export const GetApplicationCommandRequest$outboundSchema: z.ZodType<
  GetApplicationCommandRequest$Outbound,
  z.ZodTypeDef,
  GetApplicationCommandRequest
> = z.object({
  applicationId: z.string(),
  commandId: z.string(),
}).transform((v) => {
  return remap$(v, {
    applicationId: "application_id",
    commandId: "command_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApplicationCommandRequest$ {
  /** @deprecated use `GetApplicationCommandRequest$inboundSchema` instead. */
  export const inboundSchema = GetApplicationCommandRequest$inboundSchema;
  /** @deprecated use `GetApplicationCommandRequest$outboundSchema` instead. */
  export const outboundSchema = GetApplicationCommandRequest$outboundSchema;
  /** @deprecated use `GetApplicationCommandRequest$Outbound` instead. */
  export type Outbound = GetApplicationCommandRequest$Outbound;
}

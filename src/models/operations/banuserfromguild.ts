/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type BanUserFromGuildRequestBody = {
  deleteMessageSeconds?: number | null | undefined;
  deleteMessageDays?: number | null | undefined;
};

export type BanUserFromGuildRequest = {
  guildId: string;
  userId: string;
  requestBody: BanUserFromGuildRequestBody;
};

/** @internal */
export const BanUserFromGuildRequestBody$inboundSchema: z.ZodType<
  BanUserFromGuildRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  delete_message_seconds: z.nullable(z.number().int()).optional(),
  delete_message_days: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    "delete_message_seconds": "deleteMessageSeconds",
    "delete_message_days": "deleteMessageDays",
  });
});

/** @internal */
export type BanUserFromGuildRequestBody$Outbound = {
  delete_message_seconds?: number | null | undefined;
  delete_message_days?: number | null | undefined;
};

/** @internal */
export const BanUserFromGuildRequestBody$outboundSchema: z.ZodType<
  BanUserFromGuildRequestBody$Outbound,
  z.ZodTypeDef,
  BanUserFromGuildRequestBody
> = z.object({
  deleteMessageSeconds: z.nullable(z.number().int()).optional(),
  deleteMessageDays: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    deleteMessageSeconds: "delete_message_seconds",
    deleteMessageDays: "delete_message_days",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BanUserFromGuildRequestBody$ {
  /** @deprecated use `BanUserFromGuildRequestBody$inboundSchema` instead. */
  export const inboundSchema = BanUserFromGuildRequestBody$inboundSchema;
  /** @deprecated use `BanUserFromGuildRequestBody$outboundSchema` instead. */
  export const outboundSchema = BanUserFromGuildRequestBody$outboundSchema;
  /** @deprecated use `BanUserFromGuildRequestBody$Outbound` instead. */
  export type Outbound = BanUserFromGuildRequestBody$Outbound;
}

/** @internal */
export const BanUserFromGuildRequest$inboundSchema: z.ZodType<
  BanUserFromGuildRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  user_id: z.string(),
  RequestBody: z.lazy(() => BanUserFromGuildRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "user_id": "userId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type BanUserFromGuildRequest$Outbound = {
  guild_id: string;
  user_id: string;
  RequestBody: BanUserFromGuildRequestBody$Outbound;
};

/** @internal */
export const BanUserFromGuildRequest$outboundSchema: z.ZodType<
  BanUserFromGuildRequest$Outbound,
  z.ZodTypeDef,
  BanUserFromGuildRequest
> = z.object({
  guildId: z.string(),
  userId: z.string(),
  requestBody: z.lazy(() => BanUserFromGuildRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    userId: "user_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BanUserFromGuildRequest$ {
  /** @deprecated use `BanUserFromGuildRequest$inboundSchema` instead. */
  export const inboundSchema = BanUserFromGuildRequest$inboundSchema;
  /** @deprecated use `BanUserFromGuildRequest$outboundSchema` instead. */
  export const outboundSchema = BanUserFromGuildRequest$outboundSchema;
  /** @deprecated use `BanUserFromGuildRequest$Outbound` instead. */
  export type Outbound = BanUserFromGuildRequest$Outbound;
}

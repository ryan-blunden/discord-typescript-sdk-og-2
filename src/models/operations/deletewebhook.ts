/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteWebhookRequest = {
  webhookId: string;
};

/** @internal */
export const DeleteWebhookRequest$inboundSchema: z.ZodType<
  DeleteWebhookRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  webhook_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "webhook_id": "webhookId",
  });
});

/** @internal */
export type DeleteWebhookRequest$Outbound = {
  webhook_id: string;
};

/** @internal */
export const DeleteWebhookRequest$outboundSchema: z.ZodType<
  DeleteWebhookRequest$Outbound,
  z.ZodTypeDef,
  DeleteWebhookRequest
> = z.object({
  webhookId: z.string(),
}).transform((v) => {
  return remap$(v, {
    webhookId: "webhook_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteWebhookRequest$ {
  /** @deprecated use `DeleteWebhookRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteWebhookRequest$inboundSchema;
  /** @deprecated use `DeleteWebhookRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteWebhookRequest$outboundSchema;
  /** @deprecated use `DeleteWebhookRequest$Outbound` instead. */
  export type Outbound = DeleteWebhookRequest$Outbound;
}

export function deleteWebhookRequestToJSON(
  deleteWebhookRequest: DeleteWebhookRequest,
): string {
  return JSON.stringify(
    DeleteWebhookRequest$outboundSchema.parse(deleteWebhookRequest),
  );
}

export function deleteWebhookRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteWebhookRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteWebhookRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteWebhookRequest' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GetGuildMemberRequest = {
  guildId: string;
  userId: string;
};

/** @internal */
export const GetGuildMemberRequest$inboundSchema: z.ZodType<
  GetGuildMemberRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  user_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "user_id": "userId",
  });
});

/** @internal */
export type GetGuildMemberRequest$Outbound = {
  guild_id: string;
  user_id: string;
};

/** @internal */
export const GetGuildMemberRequest$outboundSchema: z.ZodType<
  GetGuildMemberRequest$Outbound,
  z.ZodTypeDef,
  GetGuildMemberRequest
> = z.object({
  guildId: z.string(),
  userId: z.string(),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    userId: "user_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGuildMemberRequest$ {
  /** @deprecated use `GetGuildMemberRequest$inboundSchema` instead. */
  export const inboundSchema = GetGuildMemberRequest$inboundSchema;
  /** @deprecated use `GetGuildMemberRequest$outboundSchema` instead. */
  export const outboundSchema = GetGuildMemberRequest$outboundSchema;
  /** @deprecated use `GetGuildMemberRequest$Outbound` instead. */
  export type Outbound = GetGuildMemberRequest$Outbound;
}

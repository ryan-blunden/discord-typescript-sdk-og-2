/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetGuildWidgetPngSecurity = {
  botToken?: string | undefined;
};

export type GetGuildWidgetPngRequest = {
  guildId: string;
  style?: "shield" | undefined;
};

/** @internal */
export const GetGuildWidgetPngSecurity$inboundSchema: z.ZodType<
  GetGuildWidgetPngSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  BotToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "BotToken": "botToken",
  });
});

/** @internal */
export type GetGuildWidgetPngSecurity$Outbound = {
  BotToken?: string | undefined;
};

/** @internal */
export const GetGuildWidgetPngSecurity$outboundSchema: z.ZodType<
  GetGuildWidgetPngSecurity$Outbound,
  z.ZodTypeDef,
  GetGuildWidgetPngSecurity
> = z.object({
  botToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    botToken: "BotToken",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGuildWidgetPngSecurity$ {
  /** @deprecated use `GetGuildWidgetPngSecurity$inboundSchema` instead. */
  export const inboundSchema = GetGuildWidgetPngSecurity$inboundSchema;
  /** @deprecated use `GetGuildWidgetPngSecurity$outboundSchema` instead. */
  export const outboundSchema = GetGuildWidgetPngSecurity$outboundSchema;
  /** @deprecated use `GetGuildWidgetPngSecurity$Outbound` instead. */
  export type Outbound = GetGuildWidgetPngSecurity$Outbound;
}

export function getGuildWidgetPngSecurityToJSON(
  getGuildWidgetPngSecurity: GetGuildWidgetPngSecurity,
): string {
  return JSON.stringify(
    GetGuildWidgetPngSecurity$outboundSchema.parse(getGuildWidgetPngSecurity),
  );
}

export function getGuildWidgetPngSecurityFromJSON(
  jsonString: string,
): SafeParseResult<GetGuildWidgetPngSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGuildWidgetPngSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGuildWidgetPngSecurity' from JSON`,
  );
}

/** @internal */
export const GetGuildWidgetPngRequest$inboundSchema: z.ZodType<
  GetGuildWidgetPngRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  style: z.literal("shield").optional(),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
  });
});

/** @internal */
export type GetGuildWidgetPngRequest$Outbound = {
  guild_id: string;
  style: "shield";
};

/** @internal */
export const GetGuildWidgetPngRequest$outboundSchema: z.ZodType<
  GetGuildWidgetPngRequest$Outbound,
  z.ZodTypeDef,
  GetGuildWidgetPngRequest
> = z.object({
  guildId: z.string(),
  style: z.literal("shield").default("shield" as const),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGuildWidgetPngRequest$ {
  /** @deprecated use `GetGuildWidgetPngRequest$inboundSchema` instead. */
  export const inboundSchema = GetGuildWidgetPngRequest$inboundSchema;
  /** @deprecated use `GetGuildWidgetPngRequest$outboundSchema` instead. */
  export const outboundSchema = GetGuildWidgetPngRequest$outboundSchema;
  /** @deprecated use `GetGuildWidgetPngRequest$Outbound` instead. */
  export type Outbound = GetGuildWidgetPngRequest$Outbound;
}

export function getGuildWidgetPngRequestToJSON(
  getGuildWidgetPngRequest: GetGuildWidgetPngRequest,
): string {
  return JSON.stringify(
    GetGuildWidgetPngRequest$outboundSchema.parse(getGuildWidgetPngRequest),
  );
}

export function getGuildWidgetPngRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetGuildWidgetPngRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGuildWidgetPngRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGuildWidgetPngRequest' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type CreateEntitlementRequest = {
  applicationId: string;
  createEntitlementRequestData: components.CreateEntitlementRequestData;
};

/** @internal */
export const CreateEntitlementRequest$inboundSchema: z.ZodType<
  CreateEntitlementRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  application_id: z.string(),
  CreateEntitlementRequestData:
    components.CreateEntitlementRequestData$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "application_id": "applicationId",
    "CreateEntitlementRequestData": "createEntitlementRequestData",
  });
});

/** @internal */
export type CreateEntitlementRequest$Outbound = {
  application_id: string;
  CreateEntitlementRequestData:
    components.CreateEntitlementRequestData$Outbound;
};

/** @internal */
export const CreateEntitlementRequest$outboundSchema: z.ZodType<
  CreateEntitlementRequest$Outbound,
  z.ZodTypeDef,
  CreateEntitlementRequest
> = z.object({
  applicationId: z.string(),
  createEntitlementRequestData:
    components.CreateEntitlementRequestData$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    applicationId: "application_id",
    createEntitlementRequestData: "CreateEntitlementRequestData",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEntitlementRequest$ {
  /** @deprecated use `CreateEntitlementRequest$inboundSchema` instead. */
  export const inboundSchema = CreateEntitlementRequest$inboundSchema;
  /** @deprecated use `CreateEntitlementRequest$outboundSchema` instead. */
  export const outboundSchema = CreateEntitlementRequest$outboundSchema;
  /** @deprecated use `CreateEntitlementRequest$Outbound` instead. */
  export type Outbound = CreateEntitlementRequest$Outbound;
}

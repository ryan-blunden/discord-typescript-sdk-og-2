/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateGuildScheduledEventRequestBody =
  | components.ExternalScheduledEventPatchRequestPartial
  | components.StageScheduledEventPatchRequestPartial
  | components.VoiceScheduledEventPatchRequestPartial;

export type UpdateGuildScheduledEventRequest = {
  guildId: string;
  guildScheduledEventId: string;
  requestBody:
    | components.ExternalScheduledEventPatchRequestPartial
    | components.StageScheduledEventPatchRequestPartial
    | components.VoiceScheduledEventPatchRequestPartial;
};

/**
 * 200 response for update_guild_scheduled_event
 */
export type UpdateGuildScheduledEventResponseBody =
  | components.ExternalScheduledEventResponse
  | components.StageScheduledEventResponse
  | components.VoiceScheduledEventResponse;

/** @internal */
export const UpdateGuildScheduledEventRequestBody$inboundSchema: z.ZodType<
  UpdateGuildScheduledEventRequestBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ExternalScheduledEventPatchRequestPartial$inboundSchema,
  components.StageScheduledEventPatchRequestPartial$inboundSchema,
  components.VoiceScheduledEventPatchRequestPartial$inboundSchema,
]);

/** @internal */
export type UpdateGuildScheduledEventRequestBody$Outbound =
  | components.ExternalScheduledEventPatchRequestPartial$Outbound
  | components.StageScheduledEventPatchRequestPartial$Outbound
  | components.VoiceScheduledEventPatchRequestPartial$Outbound;

/** @internal */
export const UpdateGuildScheduledEventRequestBody$outboundSchema: z.ZodType<
  UpdateGuildScheduledEventRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateGuildScheduledEventRequestBody
> = z.union([
  components.ExternalScheduledEventPatchRequestPartial$outboundSchema,
  components.StageScheduledEventPatchRequestPartial$outboundSchema,
  components.VoiceScheduledEventPatchRequestPartial$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateGuildScheduledEventRequestBody$ {
  /** @deprecated use `UpdateGuildScheduledEventRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    UpdateGuildScheduledEventRequestBody$inboundSchema;
  /** @deprecated use `UpdateGuildScheduledEventRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    UpdateGuildScheduledEventRequestBody$outboundSchema;
  /** @deprecated use `UpdateGuildScheduledEventRequestBody$Outbound` instead. */
  export type Outbound = UpdateGuildScheduledEventRequestBody$Outbound;
}

export function updateGuildScheduledEventRequestBodyToJSON(
  updateGuildScheduledEventRequestBody: UpdateGuildScheduledEventRequestBody,
): string {
  return JSON.stringify(
    UpdateGuildScheduledEventRequestBody$outboundSchema.parse(
      updateGuildScheduledEventRequestBody,
    ),
  );
}

export function updateGuildScheduledEventRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateGuildScheduledEventRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateGuildScheduledEventRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateGuildScheduledEventRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdateGuildScheduledEventRequest$inboundSchema: z.ZodType<
  UpdateGuildScheduledEventRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  guild_scheduled_event_id: z.string(),
  RequestBody: z.union([
    components.ExternalScheduledEventPatchRequestPartial$inboundSchema,
    components.StageScheduledEventPatchRequestPartial$inboundSchema,
    components.VoiceScheduledEventPatchRequestPartial$inboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "guild_scheduled_event_id": "guildScheduledEventId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateGuildScheduledEventRequest$Outbound = {
  guild_id: string;
  guild_scheduled_event_id: string;
  RequestBody:
    | components.ExternalScheduledEventPatchRequestPartial$Outbound
    | components.StageScheduledEventPatchRequestPartial$Outbound
    | components.VoiceScheduledEventPatchRequestPartial$Outbound;
};

/** @internal */
export const UpdateGuildScheduledEventRequest$outboundSchema: z.ZodType<
  UpdateGuildScheduledEventRequest$Outbound,
  z.ZodTypeDef,
  UpdateGuildScheduledEventRequest
> = z.object({
  guildId: z.string(),
  guildScheduledEventId: z.string(),
  requestBody: z.union([
    components.ExternalScheduledEventPatchRequestPartial$outboundSchema,
    components.StageScheduledEventPatchRequestPartial$outboundSchema,
    components.VoiceScheduledEventPatchRequestPartial$outboundSchema,
  ]),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    guildScheduledEventId: "guild_scheduled_event_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateGuildScheduledEventRequest$ {
  /** @deprecated use `UpdateGuildScheduledEventRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateGuildScheduledEventRequest$inboundSchema;
  /** @deprecated use `UpdateGuildScheduledEventRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateGuildScheduledEventRequest$outboundSchema;
  /** @deprecated use `UpdateGuildScheduledEventRequest$Outbound` instead. */
  export type Outbound = UpdateGuildScheduledEventRequest$Outbound;
}

export function updateGuildScheduledEventRequestToJSON(
  updateGuildScheduledEventRequest: UpdateGuildScheduledEventRequest,
): string {
  return JSON.stringify(
    UpdateGuildScheduledEventRequest$outboundSchema.parse(
      updateGuildScheduledEventRequest,
    ),
  );
}

export function updateGuildScheduledEventRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateGuildScheduledEventRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateGuildScheduledEventRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateGuildScheduledEventRequest' from JSON`,
  );
}

/** @internal */
export const UpdateGuildScheduledEventResponseBody$inboundSchema: z.ZodType<
  UpdateGuildScheduledEventResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ExternalScheduledEventResponse$inboundSchema,
  components.StageScheduledEventResponse$inboundSchema,
  components.VoiceScheduledEventResponse$inboundSchema,
]);

/** @internal */
export type UpdateGuildScheduledEventResponseBody$Outbound =
  | components.ExternalScheduledEventResponse$Outbound
  | components.StageScheduledEventResponse$Outbound
  | components.VoiceScheduledEventResponse$Outbound;

/** @internal */
export const UpdateGuildScheduledEventResponseBody$outboundSchema: z.ZodType<
  UpdateGuildScheduledEventResponseBody$Outbound,
  z.ZodTypeDef,
  UpdateGuildScheduledEventResponseBody
> = z.union([
  components.ExternalScheduledEventResponse$outboundSchema,
  components.StageScheduledEventResponse$outboundSchema,
  components.VoiceScheduledEventResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateGuildScheduledEventResponseBody$ {
  /** @deprecated use `UpdateGuildScheduledEventResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    UpdateGuildScheduledEventResponseBody$inboundSchema;
  /** @deprecated use `UpdateGuildScheduledEventResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    UpdateGuildScheduledEventResponseBody$outboundSchema;
  /** @deprecated use `UpdateGuildScheduledEventResponseBody$Outbound` instead. */
  export type Outbound = UpdateGuildScheduledEventResponseBody$Outbound;
}

export function updateGuildScheduledEventResponseBodyToJSON(
  updateGuildScheduledEventResponseBody: UpdateGuildScheduledEventResponseBody,
): string {
  return JSON.stringify(
    UpdateGuildScheduledEventResponseBody$outboundSchema.parse(
      updateGuildScheduledEventResponseBody,
    ),
  );
}

export function updateGuildScheduledEventResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateGuildScheduledEventResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateGuildScheduledEventResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateGuildScheduledEventResponseBody' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetGuildScheduledEventRequest = {
  guildId: string;
  guildScheduledEventId: string;
  withUserCount?: boolean | undefined;
};

/**
 * 200 response for get_guild_scheduled_event
 */
export type GetGuildScheduledEventResponseBody =
  | components.ExternalScheduledEventResponse
  | components.StageScheduledEventResponse
  | components.VoiceScheduledEventResponse;

/** @internal */
export const GetGuildScheduledEventRequest$inboundSchema: z.ZodType<
  GetGuildScheduledEventRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  guild_scheduled_event_id: z.string(),
  with_user_count: z.boolean().optional(),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "guild_scheduled_event_id": "guildScheduledEventId",
    "with_user_count": "withUserCount",
  });
});

/** @internal */
export type GetGuildScheduledEventRequest$Outbound = {
  guild_id: string;
  guild_scheduled_event_id: string;
  with_user_count?: boolean | undefined;
};

/** @internal */
export const GetGuildScheduledEventRequest$outboundSchema: z.ZodType<
  GetGuildScheduledEventRequest$Outbound,
  z.ZodTypeDef,
  GetGuildScheduledEventRequest
> = z.object({
  guildId: z.string(),
  guildScheduledEventId: z.string(),
  withUserCount: z.boolean().optional(),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    guildScheduledEventId: "guild_scheduled_event_id",
    withUserCount: "with_user_count",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGuildScheduledEventRequest$ {
  /** @deprecated use `GetGuildScheduledEventRequest$inboundSchema` instead. */
  export const inboundSchema = GetGuildScheduledEventRequest$inboundSchema;
  /** @deprecated use `GetGuildScheduledEventRequest$outboundSchema` instead. */
  export const outboundSchema = GetGuildScheduledEventRequest$outboundSchema;
  /** @deprecated use `GetGuildScheduledEventRequest$Outbound` instead. */
  export type Outbound = GetGuildScheduledEventRequest$Outbound;
}

export function getGuildScheduledEventRequestToJSON(
  getGuildScheduledEventRequest: GetGuildScheduledEventRequest,
): string {
  return JSON.stringify(
    GetGuildScheduledEventRequest$outboundSchema.parse(
      getGuildScheduledEventRequest,
    ),
  );
}

export function getGuildScheduledEventRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetGuildScheduledEventRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGuildScheduledEventRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGuildScheduledEventRequest' from JSON`,
  );
}

/** @internal */
export const GetGuildScheduledEventResponseBody$inboundSchema: z.ZodType<
  GetGuildScheduledEventResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.ExternalScheduledEventResponse$inboundSchema,
  components.StageScheduledEventResponse$inboundSchema,
  components.VoiceScheduledEventResponse$inboundSchema,
]);

/** @internal */
export type GetGuildScheduledEventResponseBody$Outbound =
  | components.ExternalScheduledEventResponse$Outbound
  | components.StageScheduledEventResponse$Outbound
  | components.VoiceScheduledEventResponse$Outbound;

/** @internal */
export const GetGuildScheduledEventResponseBody$outboundSchema: z.ZodType<
  GetGuildScheduledEventResponseBody$Outbound,
  z.ZodTypeDef,
  GetGuildScheduledEventResponseBody
> = z.union([
  components.ExternalScheduledEventResponse$outboundSchema,
  components.StageScheduledEventResponse$outboundSchema,
  components.VoiceScheduledEventResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGuildScheduledEventResponseBody$ {
  /** @deprecated use `GetGuildScheduledEventResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetGuildScheduledEventResponseBody$inboundSchema;
  /** @deprecated use `GetGuildScheduledEventResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetGuildScheduledEventResponseBody$outboundSchema;
  /** @deprecated use `GetGuildScheduledEventResponseBody$Outbound` instead. */
  export type Outbound = GetGuildScheduledEventResponseBody$Outbound;
}

export function getGuildScheduledEventResponseBodyToJSON(
  getGuildScheduledEventResponseBody: GetGuildScheduledEventResponseBody,
): string {
  return JSON.stringify(
    GetGuildScheduledEventResponseBody$outboundSchema.parse(
      getGuildScheduledEventResponseBody,
    ),
  );
}

export function getGuildScheduledEventResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetGuildScheduledEventResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetGuildScheduledEventResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGuildScheduledEventResponseBody' from JSON`,
  );
}

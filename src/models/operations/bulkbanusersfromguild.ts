/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type BulkBanUsersFromGuildRequestBody = {
  userIds: Array<string>;
  deleteMessageSeconds?: number | null | undefined;
};

export type BulkBanUsersFromGuildRequest = {
  guildId: string;
  requestBody: BulkBanUsersFromGuildRequestBody;
};

/** @internal */
export const BulkBanUsersFromGuildRequestBody$inboundSchema: z.ZodType<
  BulkBanUsersFromGuildRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  user_ids: z.array(z.string()),
  delete_message_seconds: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    "user_ids": "userIds",
    "delete_message_seconds": "deleteMessageSeconds",
  });
});

/** @internal */
export type BulkBanUsersFromGuildRequestBody$Outbound = {
  user_ids: Array<string>;
  delete_message_seconds?: number | null | undefined;
};

/** @internal */
export const BulkBanUsersFromGuildRequestBody$outboundSchema: z.ZodType<
  BulkBanUsersFromGuildRequestBody$Outbound,
  z.ZodTypeDef,
  BulkBanUsersFromGuildRequestBody
> = z.object({
  userIds: z.array(z.string()),
  deleteMessageSeconds: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    userIds: "user_ids",
    deleteMessageSeconds: "delete_message_seconds",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkBanUsersFromGuildRequestBody$ {
  /** @deprecated use `BulkBanUsersFromGuildRequestBody$inboundSchema` instead. */
  export const inboundSchema = BulkBanUsersFromGuildRequestBody$inboundSchema;
  /** @deprecated use `BulkBanUsersFromGuildRequestBody$outboundSchema` instead. */
  export const outboundSchema = BulkBanUsersFromGuildRequestBody$outboundSchema;
  /** @deprecated use `BulkBanUsersFromGuildRequestBody$Outbound` instead. */
  export type Outbound = BulkBanUsersFromGuildRequestBody$Outbound;
}

/** @internal */
export const BulkBanUsersFromGuildRequest$inboundSchema: z.ZodType<
  BulkBanUsersFromGuildRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  RequestBody: z.lazy(() => BulkBanUsersFromGuildRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type BulkBanUsersFromGuildRequest$Outbound = {
  guild_id: string;
  RequestBody: BulkBanUsersFromGuildRequestBody$Outbound;
};

/** @internal */
export const BulkBanUsersFromGuildRequest$outboundSchema: z.ZodType<
  BulkBanUsersFromGuildRequest$Outbound,
  z.ZodTypeDef,
  BulkBanUsersFromGuildRequest
> = z.object({
  guildId: z.string(),
  requestBody: z.lazy(() => BulkBanUsersFromGuildRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkBanUsersFromGuildRequest$ {
  /** @deprecated use `BulkBanUsersFromGuildRequest$inboundSchema` instead. */
  export const inboundSchema = BulkBanUsersFromGuildRequest$inboundSchema;
  /** @deprecated use `BulkBanUsersFromGuildRequest$outboundSchema` instead. */
  export const outboundSchema = BulkBanUsersFromGuildRequest$outboundSchema;
  /** @deprecated use `BulkBanUsersFromGuildRequest$Outbound` instead. */
  export type Outbound = BulkBanUsersFromGuildRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateMessageJsonRequest = {
  channelId: string;
  messageId: string;
  messageEditRequestPartial: components.MessageEditRequestPartial;
};

/** @internal */
export const UpdateMessageJsonRequest$inboundSchema: z.ZodType<
  UpdateMessageJsonRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel_id: z.string(),
  message_id: z.string(),
  MessageEditRequestPartial: components.MessageEditRequestPartial$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "channel_id": "channelId",
    "message_id": "messageId",
    "MessageEditRequestPartial": "messageEditRequestPartial",
  });
});

/** @internal */
export type UpdateMessageJsonRequest$Outbound = {
  channel_id: string;
  message_id: string;
  MessageEditRequestPartial: components.MessageEditRequestPartial$Outbound;
};

/** @internal */
export const UpdateMessageJsonRequest$outboundSchema: z.ZodType<
  UpdateMessageJsonRequest$Outbound,
  z.ZodTypeDef,
  UpdateMessageJsonRequest
> = z.object({
  channelId: z.string(),
  messageId: z.string(),
  messageEditRequestPartial:
    components.MessageEditRequestPartial$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    channelId: "channel_id",
    messageId: "message_id",
    messageEditRequestPartial: "MessageEditRequestPartial",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateMessageJsonRequest$ {
  /** @deprecated use `UpdateMessageJsonRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateMessageJsonRequest$inboundSchema;
  /** @deprecated use `UpdateMessageJsonRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateMessageJsonRequest$outboundSchema;
  /** @deprecated use `UpdateMessageJsonRequest$Outbound` instead. */
  export type Outbound = UpdateMessageJsonRequest$Outbound;
}

export function updateMessageJsonRequestToJSON(
  updateMessageJsonRequest: UpdateMessageJsonRequest,
): string {
  return JSON.stringify(
    UpdateMessageJsonRequest$outboundSchema.parse(updateMessageJsonRequest),
  );
}

export function updateMessageJsonRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateMessageJsonRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateMessageJsonRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateMessageJsonRequest' from JSON`,
  );
}

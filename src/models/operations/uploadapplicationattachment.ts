/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type UploadApplicationAttachmentSecurity = {
  botToken?: string | undefined;
};

export type UploadApplicationAttachmentRequestBody = {
  file: string;
};

export type UploadApplicationAttachmentRequest = {
  applicationId: string;
  requestBody: UploadApplicationAttachmentRequestBody;
};

/** @internal */
export const UploadApplicationAttachmentSecurity$inboundSchema: z.ZodType<
  UploadApplicationAttachmentSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  BotToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "BotToken": "botToken",
  });
});

/** @internal */
export type UploadApplicationAttachmentSecurity$Outbound = {
  BotToken?: string | undefined;
};

/** @internal */
export const UploadApplicationAttachmentSecurity$outboundSchema: z.ZodType<
  UploadApplicationAttachmentSecurity$Outbound,
  z.ZodTypeDef,
  UploadApplicationAttachmentSecurity
> = z.object({
  botToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    botToken: "BotToken",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UploadApplicationAttachmentSecurity$ {
  /** @deprecated use `UploadApplicationAttachmentSecurity$inboundSchema` instead. */
  export const inboundSchema =
    UploadApplicationAttachmentSecurity$inboundSchema;
  /** @deprecated use `UploadApplicationAttachmentSecurity$outboundSchema` instead. */
  export const outboundSchema =
    UploadApplicationAttachmentSecurity$outboundSchema;
  /** @deprecated use `UploadApplicationAttachmentSecurity$Outbound` instead. */
  export type Outbound = UploadApplicationAttachmentSecurity$Outbound;
}

/** @internal */
export const UploadApplicationAttachmentRequestBody$inboundSchema: z.ZodType<
  UploadApplicationAttachmentRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  file: z.string(),
});

/** @internal */
export type UploadApplicationAttachmentRequestBody$Outbound = {
  file: string;
};

/** @internal */
export const UploadApplicationAttachmentRequestBody$outboundSchema: z.ZodType<
  UploadApplicationAttachmentRequestBody$Outbound,
  z.ZodTypeDef,
  UploadApplicationAttachmentRequestBody
> = z.object({
  file: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UploadApplicationAttachmentRequestBody$ {
  /** @deprecated use `UploadApplicationAttachmentRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    UploadApplicationAttachmentRequestBody$inboundSchema;
  /** @deprecated use `UploadApplicationAttachmentRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    UploadApplicationAttachmentRequestBody$outboundSchema;
  /** @deprecated use `UploadApplicationAttachmentRequestBody$Outbound` instead. */
  export type Outbound = UploadApplicationAttachmentRequestBody$Outbound;
}

/** @internal */
export const UploadApplicationAttachmentRequest$inboundSchema: z.ZodType<
  UploadApplicationAttachmentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  application_id: z.string(),
  RequestBody: z.lazy(() =>
    UploadApplicationAttachmentRequestBody$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "application_id": "applicationId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UploadApplicationAttachmentRequest$Outbound = {
  application_id: string;
  RequestBody: UploadApplicationAttachmentRequestBody$Outbound;
};

/** @internal */
export const UploadApplicationAttachmentRequest$outboundSchema: z.ZodType<
  UploadApplicationAttachmentRequest$Outbound,
  z.ZodTypeDef,
  UploadApplicationAttachmentRequest
> = z.object({
  applicationId: z.string(),
  requestBody: z.lazy(() =>
    UploadApplicationAttachmentRequestBody$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    applicationId: "application_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UploadApplicationAttachmentRequest$ {
  /** @deprecated use `UploadApplicationAttachmentRequest$inboundSchema` instead. */
  export const inboundSchema = UploadApplicationAttachmentRequest$inboundSchema;
  /** @deprecated use `UploadApplicationAttachmentRequest$outboundSchema` instead. */
  export const outboundSchema =
    UploadApplicationAttachmentRequest$outboundSchema;
  /** @deprecated use `UploadApplicationAttachmentRequest$Outbound` instead. */
  export type Outbound = UploadApplicationAttachmentRequest$Outbound;
}

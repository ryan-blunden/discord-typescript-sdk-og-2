/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteGuildApplicationCommandSecurity = {
  botToken?: string | undefined;
};

export type DeleteGuildApplicationCommandRequest = {
  applicationId: string;
  guildId: string;
  commandId: string;
};

/** @internal */
export const DeleteGuildApplicationCommandSecurity$inboundSchema: z.ZodType<
  DeleteGuildApplicationCommandSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  BotToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "BotToken": "botToken",
  });
});

/** @internal */
export type DeleteGuildApplicationCommandSecurity$Outbound = {
  BotToken?: string | undefined;
};

/** @internal */
export const DeleteGuildApplicationCommandSecurity$outboundSchema: z.ZodType<
  DeleteGuildApplicationCommandSecurity$Outbound,
  z.ZodTypeDef,
  DeleteGuildApplicationCommandSecurity
> = z.object({
  botToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    botToken: "BotToken",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteGuildApplicationCommandSecurity$ {
  /** @deprecated use `DeleteGuildApplicationCommandSecurity$inboundSchema` instead. */
  export const inboundSchema =
    DeleteGuildApplicationCommandSecurity$inboundSchema;
  /** @deprecated use `DeleteGuildApplicationCommandSecurity$outboundSchema` instead. */
  export const outboundSchema =
    DeleteGuildApplicationCommandSecurity$outboundSchema;
  /** @deprecated use `DeleteGuildApplicationCommandSecurity$Outbound` instead. */
  export type Outbound = DeleteGuildApplicationCommandSecurity$Outbound;
}

export function deleteGuildApplicationCommandSecurityToJSON(
  deleteGuildApplicationCommandSecurity: DeleteGuildApplicationCommandSecurity,
): string {
  return JSON.stringify(
    DeleteGuildApplicationCommandSecurity$outboundSchema.parse(
      deleteGuildApplicationCommandSecurity,
    ),
  );
}

export function deleteGuildApplicationCommandSecurityFromJSON(
  jsonString: string,
): SafeParseResult<DeleteGuildApplicationCommandSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteGuildApplicationCommandSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteGuildApplicationCommandSecurity' from JSON`,
  );
}

/** @internal */
export const DeleteGuildApplicationCommandRequest$inboundSchema: z.ZodType<
  DeleteGuildApplicationCommandRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  application_id: z.string(),
  guild_id: z.string(),
  command_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "application_id": "applicationId",
    "guild_id": "guildId",
    "command_id": "commandId",
  });
});

/** @internal */
export type DeleteGuildApplicationCommandRequest$Outbound = {
  application_id: string;
  guild_id: string;
  command_id: string;
};

/** @internal */
export const DeleteGuildApplicationCommandRequest$outboundSchema: z.ZodType<
  DeleteGuildApplicationCommandRequest$Outbound,
  z.ZodTypeDef,
  DeleteGuildApplicationCommandRequest
> = z.object({
  applicationId: z.string(),
  guildId: z.string(),
  commandId: z.string(),
}).transform((v) => {
  return remap$(v, {
    applicationId: "application_id",
    guildId: "guild_id",
    commandId: "command_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteGuildApplicationCommandRequest$ {
  /** @deprecated use `DeleteGuildApplicationCommandRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteGuildApplicationCommandRequest$inboundSchema;
  /** @deprecated use `DeleteGuildApplicationCommandRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteGuildApplicationCommandRequest$outboundSchema;
  /** @deprecated use `DeleteGuildApplicationCommandRequest$Outbound` instead. */
  export type Outbound = DeleteGuildApplicationCommandRequest$Outbound;
}

export function deleteGuildApplicationCommandRequestToJSON(
  deleteGuildApplicationCommandRequest: DeleteGuildApplicationCommandRequest,
): string {
  return JSON.stringify(
    DeleteGuildApplicationCommandRequest$outboundSchema.parse(
      deleteGuildApplicationCommandRequest,
    ),
  );
}

export function deleteGuildApplicationCommandRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteGuildApplicationCommandRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      DeleteGuildApplicationCommandRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteGuildApplicationCommandRequest' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateGuildStickerRequestBody = {
  name?: string | undefined;
  tags?: string | undefined;
  description?: string | null | undefined;
};

export type UpdateGuildStickerRequest = {
  guildId: string;
  stickerId: string;
  requestBody: UpdateGuildStickerRequestBody;
};

/** @internal */
export const UpdateGuildStickerRequestBody$inboundSchema: z.ZodType<
  UpdateGuildStickerRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  tags: z.string().optional(),
  description: z.nullable(z.string()).optional(),
});

/** @internal */
export type UpdateGuildStickerRequestBody$Outbound = {
  name?: string | undefined;
  tags?: string | undefined;
  description?: string | null | undefined;
};

/** @internal */
export const UpdateGuildStickerRequestBody$outboundSchema: z.ZodType<
  UpdateGuildStickerRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateGuildStickerRequestBody
> = z.object({
  name: z.string().optional(),
  tags: z.string().optional(),
  description: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateGuildStickerRequestBody$ {
  /** @deprecated use `UpdateGuildStickerRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdateGuildStickerRequestBody$inboundSchema;
  /** @deprecated use `UpdateGuildStickerRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdateGuildStickerRequestBody$outboundSchema;
  /** @deprecated use `UpdateGuildStickerRequestBody$Outbound` instead. */
  export type Outbound = UpdateGuildStickerRequestBody$Outbound;
}

export function updateGuildStickerRequestBodyToJSON(
  updateGuildStickerRequestBody: UpdateGuildStickerRequestBody,
): string {
  return JSON.stringify(
    UpdateGuildStickerRequestBody$outboundSchema.parse(
      updateGuildStickerRequestBody,
    ),
  );
}

export function updateGuildStickerRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateGuildStickerRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateGuildStickerRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateGuildStickerRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdateGuildStickerRequest$inboundSchema: z.ZodType<
  UpdateGuildStickerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  sticker_id: z.string(),
  RequestBody: z.lazy(() => UpdateGuildStickerRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "sticker_id": "stickerId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateGuildStickerRequest$Outbound = {
  guild_id: string;
  sticker_id: string;
  RequestBody: UpdateGuildStickerRequestBody$Outbound;
};

/** @internal */
export const UpdateGuildStickerRequest$outboundSchema: z.ZodType<
  UpdateGuildStickerRequest$Outbound,
  z.ZodTypeDef,
  UpdateGuildStickerRequest
> = z.object({
  guildId: z.string(),
  stickerId: z.string(),
  requestBody: z.lazy(() => UpdateGuildStickerRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    stickerId: "sticker_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateGuildStickerRequest$ {
  /** @deprecated use `UpdateGuildStickerRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateGuildStickerRequest$inboundSchema;
  /** @deprecated use `UpdateGuildStickerRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateGuildStickerRequest$outboundSchema;
  /** @deprecated use `UpdateGuildStickerRequest$Outbound` instead. */
  export type Outbound = UpdateGuildStickerRequest$Outbound;
}

export function updateGuildStickerRequestToJSON(
  updateGuildStickerRequest: UpdateGuildStickerRequest,
): string {
  return JSON.stringify(
    UpdateGuildStickerRequest$outboundSchema.parse(updateGuildStickerRequest),
  );
}

export function updateGuildStickerRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateGuildStickerRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateGuildStickerRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateGuildStickerRequest' from JSON`,
  );
}

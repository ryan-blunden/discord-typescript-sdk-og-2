/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetGuildEmojiRequest = {
  guildId: string;
  emojiId: string;
};

/** @internal */
export const GetGuildEmojiRequest$inboundSchema: z.ZodType<
  GetGuildEmojiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  emoji_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "emoji_id": "emojiId",
  });
});

/** @internal */
export type GetGuildEmojiRequest$Outbound = {
  guild_id: string;
  emoji_id: string;
};

/** @internal */
export const GetGuildEmojiRequest$outboundSchema: z.ZodType<
  GetGuildEmojiRequest$Outbound,
  z.ZodTypeDef,
  GetGuildEmojiRequest
> = z.object({
  guildId: z.string(),
  emojiId: z.string(),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    emojiId: "emoji_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGuildEmojiRequest$ {
  /** @deprecated use `GetGuildEmojiRequest$inboundSchema` instead. */
  export const inboundSchema = GetGuildEmojiRequest$inboundSchema;
  /** @deprecated use `GetGuildEmojiRequest$outboundSchema` instead. */
  export const outboundSchema = GetGuildEmojiRequest$outboundSchema;
  /** @deprecated use `GetGuildEmojiRequest$Outbound` instead. */
  export type Outbound = GetGuildEmojiRequest$Outbound;
}

export function getGuildEmojiRequestToJSON(
  getGuildEmojiRequest: GetGuildEmojiRequest,
): string {
  return JSON.stringify(
    GetGuildEmojiRequest$outboundSchema.parse(getGuildEmojiRequest),
  );
}

export function getGuildEmojiRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetGuildEmojiRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGuildEmojiRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGuildEmojiRequest' from JSON`,
  );
}

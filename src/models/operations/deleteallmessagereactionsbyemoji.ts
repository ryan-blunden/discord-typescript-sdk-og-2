/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type DeleteAllMessageReactionsByEmojiRequest = {
  channelId: string;
  messageId: string;
  emojiName: string;
};

/** @internal */
export const DeleteAllMessageReactionsByEmojiRequest$inboundSchema: z.ZodType<
  DeleteAllMessageReactionsByEmojiRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel_id: z.string(),
  message_id: z.string(),
  emoji_name: z.string(),
}).transform((v) => {
  return remap$(v, {
    "channel_id": "channelId",
    "message_id": "messageId",
    "emoji_name": "emojiName",
  });
});

/** @internal */
export type DeleteAllMessageReactionsByEmojiRequest$Outbound = {
  channel_id: string;
  message_id: string;
  emoji_name: string;
};

/** @internal */
export const DeleteAllMessageReactionsByEmojiRequest$outboundSchema: z.ZodType<
  DeleteAllMessageReactionsByEmojiRequest$Outbound,
  z.ZodTypeDef,
  DeleteAllMessageReactionsByEmojiRequest
> = z.object({
  channelId: z.string(),
  messageId: z.string(),
  emojiName: z.string(),
}).transform((v) => {
  return remap$(v, {
    channelId: "channel_id",
    messageId: "message_id",
    emojiName: "emoji_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteAllMessageReactionsByEmojiRequest$ {
  /** @deprecated use `DeleteAllMessageReactionsByEmojiRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteAllMessageReactionsByEmojiRequest$inboundSchema;
  /** @deprecated use `DeleteAllMessageReactionsByEmojiRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteAllMessageReactionsByEmojiRequest$outboundSchema;
  /** @deprecated use `DeleteAllMessageReactionsByEmojiRequest$Outbound` instead. */
  export type Outbound = DeleteAllMessageReactionsByEmojiRequest$Outbound;
}

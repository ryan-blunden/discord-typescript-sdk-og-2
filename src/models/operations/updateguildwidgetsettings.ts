/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type UpdateGuildWidgetSettingsRequestBody = {
  channelId?: string | null | undefined;
  enabled?: boolean | null | undefined;
};

export type UpdateGuildWidgetSettingsRequest = {
  guildId: string;
  requestBody: UpdateGuildWidgetSettingsRequestBody;
};

/** @internal */
export const UpdateGuildWidgetSettingsRequestBody$inboundSchema: z.ZodType<
  UpdateGuildWidgetSettingsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel_id: z.nullable(z.string()).optional(),
  enabled: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    "channel_id": "channelId",
  });
});

/** @internal */
export type UpdateGuildWidgetSettingsRequestBody$Outbound = {
  channel_id?: string | null | undefined;
  enabled?: boolean | null | undefined;
};

/** @internal */
export const UpdateGuildWidgetSettingsRequestBody$outboundSchema: z.ZodType<
  UpdateGuildWidgetSettingsRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateGuildWidgetSettingsRequestBody
> = z.object({
  channelId: z.nullable(z.string()).optional(),
  enabled: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    channelId: "channel_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateGuildWidgetSettingsRequestBody$ {
  /** @deprecated use `UpdateGuildWidgetSettingsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    UpdateGuildWidgetSettingsRequestBody$inboundSchema;
  /** @deprecated use `UpdateGuildWidgetSettingsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    UpdateGuildWidgetSettingsRequestBody$outboundSchema;
  /** @deprecated use `UpdateGuildWidgetSettingsRequestBody$Outbound` instead. */
  export type Outbound = UpdateGuildWidgetSettingsRequestBody$Outbound;
}

/** @internal */
export const UpdateGuildWidgetSettingsRequest$inboundSchema: z.ZodType<
  UpdateGuildWidgetSettingsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  RequestBody: z.lazy(() => UpdateGuildWidgetSettingsRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateGuildWidgetSettingsRequest$Outbound = {
  guild_id: string;
  RequestBody: UpdateGuildWidgetSettingsRequestBody$Outbound;
};

/** @internal */
export const UpdateGuildWidgetSettingsRequest$outboundSchema: z.ZodType<
  UpdateGuildWidgetSettingsRequest$Outbound,
  z.ZodTypeDef,
  UpdateGuildWidgetSettingsRequest
> = z.object({
  guildId: z.string(),
  requestBody: z.lazy(() =>
    UpdateGuildWidgetSettingsRequestBody$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateGuildWidgetSettingsRequest$ {
  /** @deprecated use `UpdateGuildWidgetSettingsRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateGuildWidgetSettingsRequest$inboundSchema;
  /** @deprecated use `UpdateGuildWidgetSettingsRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateGuildWidgetSettingsRequest$outboundSchema;
  /** @deprecated use `UpdateGuildWidgetSettingsRequest$Outbound` instead. */
  export type Outbound = UpdateGuildWidgetSettingsRequest$Outbound;
}

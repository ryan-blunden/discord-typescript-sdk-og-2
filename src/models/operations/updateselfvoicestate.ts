/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type UpdateSelfVoiceStateRequestBody = {
  requestToSpeakTimestamp?: Date | null | undefined;
  suppress?: boolean | null | undefined;
  channelId?: string | null | undefined;
};

export type UpdateSelfVoiceStateRequest = {
  guildId: string;
  requestBody: UpdateSelfVoiceStateRequestBody;
};

/** @internal */
export const UpdateSelfVoiceStateRequestBody$inboundSchema: z.ZodType<
  UpdateSelfVoiceStateRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  request_to_speak_timestamp: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ).optional(),
  suppress: z.nullable(z.boolean()).optional(),
  channel_id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "request_to_speak_timestamp": "requestToSpeakTimestamp",
    "channel_id": "channelId",
  });
});

/** @internal */
export type UpdateSelfVoiceStateRequestBody$Outbound = {
  request_to_speak_timestamp?: string | null | undefined;
  suppress?: boolean | null | undefined;
  channel_id?: string | null | undefined;
};

/** @internal */
export const UpdateSelfVoiceStateRequestBody$outboundSchema: z.ZodType<
  UpdateSelfVoiceStateRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateSelfVoiceStateRequestBody
> = z.object({
  requestToSpeakTimestamp: z.nullable(z.date().transform(v => v.toISOString()))
    .optional(),
  suppress: z.nullable(z.boolean()).optional(),
  channelId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    requestToSpeakTimestamp: "request_to_speak_timestamp",
    channelId: "channel_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSelfVoiceStateRequestBody$ {
  /** @deprecated use `UpdateSelfVoiceStateRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdateSelfVoiceStateRequestBody$inboundSchema;
  /** @deprecated use `UpdateSelfVoiceStateRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdateSelfVoiceStateRequestBody$outboundSchema;
  /** @deprecated use `UpdateSelfVoiceStateRequestBody$Outbound` instead. */
  export type Outbound = UpdateSelfVoiceStateRequestBody$Outbound;
}

/** @internal */
export const UpdateSelfVoiceStateRequest$inboundSchema: z.ZodType<
  UpdateSelfVoiceStateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  RequestBody: z.lazy(() => UpdateSelfVoiceStateRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateSelfVoiceStateRequest$Outbound = {
  guild_id: string;
  RequestBody: UpdateSelfVoiceStateRequestBody$Outbound;
};

/** @internal */
export const UpdateSelfVoiceStateRequest$outboundSchema: z.ZodType<
  UpdateSelfVoiceStateRequest$Outbound,
  z.ZodTypeDef,
  UpdateSelfVoiceStateRequest
> = z.object({
  guildId: z.string(),
  requestBody: z.lazy(() => UpdateSelfVoiceStateRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSelfVoiceStateRequest$ {
  /** @deprecated use `UpdateSelfVoiceStateRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateSelfVoiceStateRequest$inboundSchema;
  /** @deprecated use `UpdateSelfVoiceStateRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateSelfVoiceStateRequest$outboundSchema;
  /** @deprecated use `UpdateSelfVoiceStateRequest$Outbound` instead. */
  export type Outbound = UpdateSelfVoiceStateRequest$Outbound;
}

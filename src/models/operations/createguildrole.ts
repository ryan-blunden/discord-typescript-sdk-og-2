/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type CreateGuildRoleRequestBody = {
  name?: string | null | undefined;
  permissions?: number | null | undefined;
  color?: number | null | undefined;
  hoist?: boolean | null | undefined;
  mentionable?: boolean | null | undefined;
  icon?: string | null | undefined;
  unicodeEmoji?: string | null | undefined;
};

export type CreateGuildRoleRequest = {
  guildId: string;
  requestBody: CreateGuildRoleRequestBody;
};

/** @internal */
export const CreateGuildRoleRequestBody$inboundSchema: z.ZodType<
  CreateGuildRoleRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.nullable(z.string()).optional(),
  permissions: z.nullable(z.number().int()).optional(),
  color: z.nullable(z.number().int()).optional(),
  hoist: z.nullable(z.boolean()).optional(),
  mentionable: z.nullable(z.boolean()).optional(),
  icon: z.nullable(z.string()).optional(),
  unicode_emoji: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "unicode_emoji": "unicodeEmoji",
  });
});

/** @internal */
export type CreateGuildRoleRequestBody$Outbound = {
  name?: string | null | undefined;
  permissions?: number | null | undefined;
  color?: number | null | undefined;
  hoist?: boolean | null | undefined;
  mentionable?: boolean | null | undefined;
  icon?: string | null | undefined;
  unicode_emoji?: string | null | undefined;
};

/** @internal */
export const CreateGuildRoleRequestBody$outboundSchema: z.ZodType<
  CreateGuildRoleRequestBody$Outbound,
  z.ZodTypeDef,
  CreateGuildRoleRequestBody
> = z.object({
  name: z.nullable(z.string()).optional(),
  permissions: z.nullable(z.number().int()).optional(),
  color: z.nullable(z.number().int()).optional(),
  hoist: z.nullable(z.boolean()).optional(),
  mentionable: z.nullable(z.boolean()).optional(),
  icon: z.nullable(z.string()).optional(),
  unicodeEmoji: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    unicodeEmoji: "unicode_emoji",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGuildRoleRequestBody$ {
  /** @deprecated use `CreateGuildRoleRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreateGuildRoleRequestBody$inboundSchema;
  /** @deprecated use `CreateGuildRoleRequestBody$outboundSchema` instead. */
  export const outboundSchema = CreateGuildRoleRequestBody$outboundSchema;
  /** @deprecated use `CreateGuildRoleRequestBody$Outbound` instead. */
  export type Outbound = CreateGuildRoleRequestBody$Outbound;
}

/** @internal */
export const CreateGuildRoleRequest$inboundSchema: z.ZodType<
  CreateGuildRoleRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  RequestBody: z.lazy(() => CreateGuildRoleRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type CreateGuildRoleRequest$Outbound = {
  guild_id: string;
  RequestBody: CreateGuildRoleRequestBody$Outbound;
};

/** @internal */
export const CreateGuildRoleRequest$outboundSchema: z.ZodType<
  CreateGuildRoleRequest$Outbound,
  z.ZodTypeDef,
  CreateGuildRoleRequest
> = z.object({
  guildId: z.string(),
  requestBody: z.lazy(() => CreateGuildRoleRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGuildRoleRequest$ {
  /** @deprecated use `CreateGuildRoleRequest$inboundSchema` instead. */
  export const inboundSchema = CreateGuildRoleRequest$inboundSchema;
  /** @deprecated use `CreateGuildRoleRequest$outboundSchema` instead. */
  export const outboundSchema = CreateGuildRoleRequest$outboundSchema;
  /** @deprecated use `CreateGuildRoleRequest$Outbound` instead. */
  export type Outbound = CreateGuildRoleRequest$Outbound;
}

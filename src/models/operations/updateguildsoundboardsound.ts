/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdateGuildSoundboardSoundRequest = {
  guildId: string;
  soundId: string;
  soundboardPatchRequestPartial: components.SoundboardPatchRequestPartial;
};

/** @internal */
export const UpdateGuildSoundboardSoundRequest$inboundSchema: z.ZodType<
  UpdateGuildSoundboardSoundRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  sound_id: z.string(),
  SoundboardPatchRequestPartial:
    components.SoundboardPatchRequestPartial$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "sound_id": "soundId",
    "SoundboardPatchRequestPartial": "soundboardPatchRequestPartial",
  });
});

/** @internal */
export type UpdateGuildSoundboardSoundRequest$Outbound = {
  guild_id: string;
  sound_id: string;
  SoundboardPatchRequestPartial:
    components.SoundboardPatchRequestPartial$Outbound;
};

/** @internal */
export const UpdateGuildSoundboardSoundRequest$outboundSchema: z.ZodType<
  UpdateGuildSoundboardSoundRequest$Outbound,
  z.ZodTypeDef,
  UpdateGuildSoundboardSoundRequest
> = z.object({
  guildId: z.string(),
  soundId: z.string(),
  soundboardPatchRequestPartial:
    components.SoundboardPatchRequestPartial$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    soundId: "sound_id",
    soundboardPatchRequestPartial: "SoundboardPatchRequestPartial",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateGuildSoundboardSoundRequest$ {
  /** @deprecated use `UpdateGuildSoundboardSoundRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateGuildSoundboardSoundRequest$inboundSchema;
  /** @deprecated use `UpdateGuildSoundboardSoundRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateGuildSoundboardSoundRequest$outboundSchema;
  /** @deprecated use `UpdateGuildSoundboardSoundRequest$Outbound` instead. */
  export type Outbound = UpdateGuildSoundboardSoundRequest$Outbound;
}

export function updateGuildSoundboardSoundRequestToJSON(
  updateGuildSoundboardSoundRequest: UpdateGuildSoundboardSoundRequest,
): string {
  return JSON.stringify(
    UpdateGuildSoundboardSoundRequest$outboundSchema.parse(
      updateGuildSoundboardSoundRequest,
    ),
  );
}

export function updateGuildSoundboardSoundRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateGuildSoundboardSoundRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateGuildSoundboardSoundRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateGuildSoundboardSoundRequest' from JSON`,
  );
}

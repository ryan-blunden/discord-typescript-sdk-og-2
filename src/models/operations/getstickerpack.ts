/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GetStickerPackRequest = {
  packId: string;
};

/** @internal */
export const GetStickerPackRequest$inboundSchema: z.ZodType<
  GetStickerPackRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  pack_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "pack_id": "packId",
  });
});

/** @internal */
export type GetStickerPackRequest$Outbound = {
  pack_id: string;
};

/** @internal */
export const GetStickerPackRequest$outboundSchema: z.ZodType<
  GetStickerPackRequest$Outbound,
  z.ZodTypeDef,
  GetStickerPackRequest
> = z.object({
  packId: z.string(),
}).transform((v) => {
  return remap$(v, {
    packId: "pack_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetStickerPackRequest$ {
  /** @deprecated use `GetStickerPackRequest$inboundSchema` instead. */
  export const inboundSchema = GetStickerPackRequest$inboundSchema;
  /** @deprecated use `GetStickerPackRequest$outboundSchema` instead. */
  export const outboundSchema = GetStickerPackRequest$outboundSchema;
  /** @deprecated use `GetStickerPackRequest$Outbound` instead. */
  export type Outbound = GetStickerPackRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type UpdateVoiceStateRequestBody = {
  suppress?: boolean | null | undefined;
  channelId?: string | null | undefined;
};

export type UpdateVoiceStateRequest = {
  guildId: string;
  userId: string;
  requestBody: UpdateVoiceStateRequestBody;
};

/** @internal */
export const UpdateVoiceStateRequestBody$inboundSchema: z.ZodType<
  UpdateVoiceStateRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  suppress: z.nullable(z.boolean()).optional(),
  channel_id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "channel_id": "channelId",
  });
});

/** @internal */
export type UpdateVoiceStateRequestBody$Outbound = {
  suppress?: boolean | null | undefined;
  channel_id?: string | null | undefined;
};

/** @internal */
export const UpdateVoiceStateRequestBody$outboundSchema: z.ZodType<
  UpdateVoiceStateRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateVoiceStateRequestBody
> = z.object({
  suppress: z.nullable(z.boolean()).optional(),
  channelId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    channelId: "channel_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateVoiceStateRequestBody$ {
  /** @deprecated use `UpdateVoiceStateRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdateVoiceStateRequestBody$inboundSchema;
  /** @deprecated use `UpdateVoiceStateRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdateVoiceStateRequestBody$outboundSchema;
  /** @deprecated use `UpdateVoiceStateRequestBody$Outbound` instead. */
  export type Outbound = UpdateVoiceStateRequestBody$Outbound;
}

/** @internal */
export const UpdateVoiceStateRequest$inboundSchema: z.ZodType<
  UpdateVoiceStateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  user_id: z.string(),
  RequestBody: z.lazy(() => UpdateVoiceStateRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "user_id": "userId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateVoiceStateRequest$Outbound = {
  guild_id: string;
  user_id: string;
  RequestBody: UpdateVoiceStateRequestBody$Outbound;
};

/** @internal */
export const UpdateVoiceStateRequest$outboundSchema: z.ZodType<
  UpdateVoiceStateRequest$Outbound,
  z.ZodTypeDef,
  UpdateVoiceStateRequest
> = z.object({
  guildId: z.string(),
  userId: z.string(),
  requestBody: z.lazy(() => UpdateVoiceStateRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    userId: "user_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateVoiceStateRequest$ {
  /** @deprecated use `UpdateVoiceStateRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateVoiceStateRequest$inboundSchema;
  /** @deprecated use `UpdateVoiceStateRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateVoiceStateRequest$outboundSchema;
  /** @deprecated use `UpdateVoiceStateRequest$Outbound` instead. */
  export type Outbound = UpdateVoiceStateRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetGuildTemplateSecurity = {
  botToken?: string | undefined;
};

export type GetGuildTemplateRequest = {
  code: string;
};

/** @internal */
export const GetGuildTemplateSecurity$inboundSchema: z.ZodType<
  GetGuildTemplateSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  BotToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "BotToken": "botToken",
  });
});

/** @internal */
export type GetGuildTemplateSecurity$Outbound = {
  BotToken?: string | undefined;
};

/** @internal */
export const GetGuildTemplateSecurity$outboundSchema: z.ZodType<
  GetGuildTemplateSecurity$Outbound,
  z.ZodTypeDef,
  GetGuildTemplateSecurity
> = z.object({
  botToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    botToken: "BotToken",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGuildTemplateSecurity$ {
  /** @deprecated use `GetGuildTemplateSecurity$inboundSchema` instead. */
  export const inboundSchema = GetGuildTemplateSecurity$inboundSchema;
  /** @deprecated use `GetGuildTemplateSecurity$outboundSchema` instead. */
  export const outboundSchema = GetGuildTemplateSecurity$outboundSchema;
  /** @deprecated use `GetGuildTemplateSecurity$Outbound` instead. */
  export type Outbound = GetGuildTemplateSecurity$Outbound;
}

export function getGuildTemplateSecurityToJSON(
  getGuildTemplateSecurity: GetGuildTemplateSecurity,
): string {
  return JSON.stringify(
    GetGuildTemplateSecurity$outboundSchema.parse(getGuildTemplateSecurity),
  );
}

export function getGuildTemplateSecurityFromJSON(
  jsonString: string,
): SafeParseResult<GetGuildTemplateSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGuildTemplateSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGuildTemplateSecurity' from JSON`,
  );
}

/** @internal */
export const GetGuildTemplateRequest$inboundSchema: z.ZodType<
  GetGuildTemplateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
});

/** @internal */
export type GetGuildTemplateRequest$Outbound = {
  code: string;
};

/** @internal */
export const GetGuildTemplateRequest$outboundSchema: z.ZodType<
  GetGuildTemplateRequest$Outbound,
  z.ZodTypeDef,
  GetGuildTemplateRequest
> = z.object({
  code: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetGuildTemplateRequest$ {
  /** @deprecated use `GetGuildTemplateRequest$inboundSchema` instead. */
  export const inboundSchema = GetGuildTemplateRequest$inboundSchema;
  /** @deprecated use `GetGuildTemplateRequest$outboundSchema` instead. */
  export const outboundSchema = GetGuildTemplateRequest$outboundSchema;
  /** @deprecated use `GetGuildTemplateRequest$Outbound` instead. */
  export type Outbound = GetGuildTemplateRequest$Outbound;
}

export function getGuildTemplateRequestToJSON(
  getGuildTemplateRequest: GetGuildTemplateRequest,
): string {
  return JSON.stringify(
    GetGuildTemplateRequest$outboundSchema.parse(getGuildTemplateRequest),
  );
}

export function getGuildTemplateRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetGuildTemplateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetGuildTemplateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetGuildTemplateRequest' from JSON`,
  );
}

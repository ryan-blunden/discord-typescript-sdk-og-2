/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type DeleteApplicationCommandSecurity = {
  botToken?: string | undefined;
};

export type DeleteApplicationCommandRequest = {
  applicationId: string;
  commandId: string;
};

/** @internal */
export const DeleteApplicationCommandSecurity$inboundSchema: z.ZodType<
  DeleteApplicationCommandSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  BotToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "BotToken": "botToken",
  });
});

/** @internal */
export type DeleteApplicationCommandSecurity$Outbound = {
  BotToken?: string | undefined;
};

/** @internal */
export const DeleteApplicationCommandSecurity$outboundSchema: z.ZodType<
  DeleteApplicationCommandSecurity$Outbound,
  z.ZodTypeDef,
  DeleteApplicationCommandSecurity
> = z.object({
  botToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    botToken: "BotToken",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApplicationCommandSecurity$ {
  /** @deprecated use `DeleteApplicationCommandSecurity$inboundSchema` instead. */
  export const inboundSchema = DeleteApplicationCommandSecurity$inboundSchema;
  /** @deprecated use `DeleteApplicationCommandSecurity$outboundSchema` instead. */
  export const outboundSchema = DeleteApplicationCommandSecurity$outboundSchema;
  /** @deprecated use `DeleteApplicationCommandSecurity$Outbound` instead. */
  export type Outbound = DeleteApplicationCommandSecurity$Outbound;
}

/** @internal */
export const DeleteApplicationCommandRequest$inboundSchema: z.ZodType<
  DeleteApplicationCommandRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  application_id: z.string(),
  command_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "application_id": "applicationId",
    "command_id": "commandId",
  });
});

/** @internal */
export type DeleteApplicationCommandRequest$Outbound = {
  application_id: string;
  command_id: string;
};

/** @internal */
export const DeleteApplicationCommandRequest$outboundSchema: z.ZodType<
  DeleteApplicationCommandRequest$Outbound,
  z.ZodTypeDef,
  DeleteApplicationCommandRequest
> = z.object({
  applicationId: z.string(),
  commandId: z.string(),
}).transform((v) => {
  return remap$(v, {
    applicationId: "application_id",
    commandId: "command_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteApplicationCommandRequest$ {
  /** @deprecated use `DeleteApplicationCommandRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteApplicationCommandRequest$inboundSchema;
  /** @deprecated use `DeleteApplicationCommandRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteApplicationCommandRequest$outboundSchema;
  /** @deprecated use `DeleteApplicationCommandRequest$Outbound` instead. */
  export type Outbound = DeleteApplicationCommandRequest$Outbound;
}

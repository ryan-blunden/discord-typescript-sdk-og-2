/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteGuildScheduledEventRequest = {
  guildId: string;
  guildScheduledEventId: string;
};

/** @internal */
export const DeleteGuildScheduledEventRequest$inboundSchema: z.ZodType<
  DeleteGuildScheduledEventRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  guild_scheduled_event_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "guild_scheduled_event_id": "guildScheduledEventId",
  });
});

/** @internal */
export type DeleteGuildScheduledEventRequest$Outbound = {
  guild_id: string;
  guild_scheduled_event_id: string;
};

/** @internal */
export const DeleteGuildScheduledEventRequest$outboundSchema: z.ZodType<
  DeleteGuildScheduledEventRequest$Outbound,
  z.ZodTypeDef,
  DeleteGuildScheduledEventRequest
> = z.object({
  guildId: z.string(),
  guildScheduledEventId: z.string(),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    guildScheduledEventId: "guild_scheduled_event_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteGuildScheduledEventRequest$ {
  /** @deprecated use `DeleteGuildScheduledEventRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteGuildScheduledEventRequest$inboundSchema;
  /** @deprecated use `DeleteGuildScheduledEventRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteGuildScheduledEventRequest$outboundSchema;
  /** @deprecated use `DeleteGuildScheduledEventRequest$Outbound` instead. */
  export type Outbound = DeleteGuildScheduledEventRequest$Outbound;
}

export function deleteGuildScheduledEventRequestToJSON(
  deleteGuildScheduledEventRequest: DeleteGuildScheduledEventRequest,
): string {
  return JSON.stringify(
    DeleteGuildScheduledEventRequest$outboundSchema.parse(
      deleteGuildScheduledEventRequest,
    ),
  );
}

export function deleteGuildScheduledEventRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteGuildScheduledEventRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteGuildScheduledEventRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteGuildScheduledEventRequest' from JSON`,
  );
}

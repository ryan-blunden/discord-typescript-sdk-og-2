/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ListGuildScheduledEventUsersRequest = {
  guildId: string;
  guildScheduledEventId: string;
  withMember?: boolean | undefined;
  limit?: number | undefined;
  before?: string | undefined;
  after?: string | undefined;
};

/** @internal */
export const ListGuildScheduledEventUsersRequest$inboundSchema: z.ZodType<
  ListGuildScheduledEventUsersRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  guild_scheduled_event_id: z.string(),
  with_member: z.boolean().optional(),
  limit: z.number().int().optional(),
  before: z.string().optional(),
  after: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "guild_scheduled_event_id": "guildScheduledEventId",
    "with_member": "withMember",
  });
});

/** @internal */
export type ListGuildScheduledEventUsersRequest$Outbound = {
  guild_id: string;
  guild_scheduled_event_id: string;
  with_member?: boolean | undefined;
  limit?: number | undefined;
  before?: string | undefined;
  after?: string | undefined;
};

/** @internal */
export const ListGuildScheduledEventUsersRequest$outboundSchema: z.ZodType<
  ListGuildScheduledEventUsersRequest$Outbound,
  z.ZodTypeDef,
  ListGuildScheduledEventUsersRequest
> = z.object({
  guildId: z.string(),
  guildScheduledEventId: z.string(),
  withMember: z.boolean().optional(),
  limit: z.number().int().optional(),
  before: z.string().optional(),
  after: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    guildScheduledEventId: "guild_scheduled_event_id",
    withMember: "with_member",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListGuildScheduledEventUsersRequest$ {
  /** @deprecated use `ListGuildScheduledEventUsersRequest$inboundSchema` instead. */
  export const inboundSchema =
    ListGuildScheduledEventUsersRequest$inboundSchema;
  /** @deprecated use `ListGuildScheduledEventUsersRequest$outboundSchema` instead. */
  export const outboundSchema =
    ListGuildScheduledEventUsersRequest$outboundSchema;
  /** @deprecated use `ListGuildScheduledEventUsersRequest$Outbound` instead. */
  export type Outbound = ListGuildScheduledEventUsersRequest$Outbound;
}

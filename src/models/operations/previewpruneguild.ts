/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type QueryParamIncludeRoles = string | Array<string>;

export type PreviewPruneGuildRequest = {
  guildId: string;
  days?: number | undefined;
  includeRoles?: string | Array<string> | undefined;
};

/** @internal */
export const QueryParamIncludeRoles$inboundSchema: z.ZodType<
  QueryParamIncludeRoles,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.array(z.string())]);

/** @internal */
export type QueryParamIncludeRoles$Outbound = string | Array<string>;

/** @internal */
export const QueryParamIncludeRoles$outboundSchema: z.ZodType<
  QueryParamIncludeRoles$Outbound,
  z.ZodTypeDef,
  QueryParamIncludeRoles
> = z.union([z.string(), z.array(z.string())]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryParamIncludeRoles$ {
  /** @deprecated use `QueryParamIncludeRoles$inboundSchema` instead. */
  export const inboundSchema = QueryParamIncludeRoles$inboundSchema;
  /** @deprecated use `QueryParamIncludeRoles$outboundSchema` instead. */
  export const outboundSchema = QueryParamIncludeRoles$outboundSchema;
  /** @deprecated use `QueryParamIncludeRoles$Outbound` instead. */
  export type Outbound = QueryParamIncludeRoles$Outbound;
}

/** @internal */
export const PreviewPruneGuildRequest$inboundSchema: z.ZodType<
  PreviewPruneGuildRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  days: z.number().int().optional(),
  include_roles: z.union([z.string(), z.array(z.string())]).optional(),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "include_roles": "includeRoles",
  });
});

/** @internal */
export type PreviewPruneGuildRequest$Outbound = {
  guild_id: string;
  days?: number | undefined;
  include_roles?: string | Array<string> | undefined;
};

/** @internal */
export const PreviewPruneGuildRequest$outboundSchema: z.ZodType<
  PreviewPruneGuildRequest$Outbound,
  z.ZodTypeDef,
  PreviewPruneGuildRequest
> = z.object({
  guildId: z.string(),
  days: z.number().int().optional(),
  includeRoles: z.union([z.string(), z.array(z.string())]).optional(),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    includeRoles: "include_roles",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PreviewPruneGuildRequest$ {
  /** @deprecated use `PreviewPruneGuildRequest$inboundSchema` instead. */
  export const inboundSchema = PreviewPruneGuildRequest$inboundSchema;
  /** @deprecated use `PreviewPruneGuildRequest$outboundSchema` instead. */
  export const outboundSchema = PreviewPruneGuildRequest$outboundSchema;
  /** @deprecated use `PreviewPruneGuildRequest$Outbound` instead. */
  export type Outbound = PreviewPruneGuildRequest$Outbound;
}

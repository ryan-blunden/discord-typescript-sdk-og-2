/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { oauth2GetAuthorization } from "../funcs/oauth2GetAuthorization.js";
import { oauth2GetKeys } from "../funcs/oauth2GetKeys.js";
import { oauth2GetMyApplication } from "../funcs/oauth2GetMyApplication.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Oauth2 extends ClientSDK {
  async getMyApplication(
    options?: RequestOptions,
  ): Promise<components.PrivateApplicationResponse> {
    return unwrapAsync(oauth2GetMyApplication(
      this,
      options,
    ));
  }

  async getKeys(
    security?: operations.GetPublicKeysSecurity | undefined,
    options?: RequestOptions,
  ): Promise<components.OAuth2GetKeys> {
    return unwrapAsync(oauth2GetKeys(
      this,
      security,
      options,
    ));
  }

  async getAuthorization(
    security: operations.GetMyOauth2AuthorizationSecurity,
    options?: RequestOptions,
  ): Promise<components.OAuth2GetAuthorizationResponse> {
    return unwrapAsync(oauth2GetAuthorization(
      this,
      security,
      options,
    ));
  }
}

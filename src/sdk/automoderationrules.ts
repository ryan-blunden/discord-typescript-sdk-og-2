/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { autoModerationRulesCreate } from "../funcs/autoModerationRulesCreate.js";
import { autoModerationRulesDelete } from "../funcs/autoModerationRulesDelete.js";
import { autoModerationRulesGet } from "../funcs/autoModerationRulesGet.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AutoModerationRules extends ClientSDK {
  async get(
    request: operations.GetAutoModerationRuleRequest,
    options?: RequestOptions,
  ): Promise<operations.GetAutoModerationRuleResponseBody> {
    return unwrapAsync(autoModerationRulesGet(
      this,
      request,
      options,
    ));
  }

  async delete(
    request: operations.DeleteAutoModerationRuleRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(autoModerationRulesDelete(
      this,
      request,
      options,
    ));
  }

  async create(
    request: operations.CreateAutoModerationRuleRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateAutoModerationRuleResponseBody> {
    return unwrapAsync(autoModerationRulesCreate(
      this,
      request,
      options,
    ));
  }
}

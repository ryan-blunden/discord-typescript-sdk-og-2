/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { guildsScheduledEventsGet } from "../funcs/guildsScheduledEventsGet.js";
import { guildsScheduledEventsList } from "../funcs/guildsScheduledEventsList.js";
import { guildsScheduledEventsUpdate } from "../funcs/guildsScheduledEventsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { DiscordUsers } from "./discordusers.js";

export class DiscordGuildsScheduledEvents extends ClientSDK {
  private _users?: DiscordUsers;
  get users(): DiscordUsers {
    return (this._users ??= new DiscordUsers(this._options));
  }

  async get(
    request: operations.GetGuildScheduledEventRequest,
    options?: RequestOptions,
  ): Promise<operations.GetGuildScheduledEventResponseBody> {
    return unwrapAsync(guildsScheduledEventsGet(
      this,
      request,
      options,
    ));
  }

  async list(
    request: operations.ListGuildScheduledEventsRequest,
    options?: RequestOptions,
  ): Promise<Array<operations.ListGuildScheduledEventsResponseBody>> {
    return unwrapAsync(guildsScheduledEventsList(
      this,
      request,
      options,
    ));
  }

  async update(
    request: operations.UpdateGuildScheduledEventRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateGuildScheduledEventResponseBody> {
    return unwrapAsync(guildsScheduledEventsUpdate(
      this,
      request,
      options,
    ));
  }
}
